{"version":3,"file":"static/js/983.d3fbf363.chunk.js","mappings":"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","sources":["components/MonthStatsTable/MonthStatsTable.styled.js","components/MonthStatsTable/MonthStatsTable.jsx","redux/waterDetails/waterSelectors.js","components/DeleteWaterModal/DeleteWaterModal.styled.js","components/TodayListModal/TodayListModal.styled.js","components/DeleteWaterModal/DeleteWaterModal.jsx","redux/waterDetails/helpers.js","components/TodayWaterList/TodayWaterList.styled.js","components/TodayListModal/TodayListModal.jsx","components/TodayWaterList/TodayWaterList.jsx","components/WaterRatioPanel/WaterRatioPanel.styled.js","components/WaterRatioPanel/WaterRatioPanel.jsx","components/DailyNorma/dailyNorma.styled.js","components/DailyNorma/dailyNormaModal.jsx","components/DailyNorma/dailyNorma.jsx","page/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CalendarStyle = styled.div`\n  background-color: var(--bg-color-light-blue);\n  @media screen and (min-width: 320px) {\n    .header {\n      display: flex;\n      justify-content: space-between;\n      padding-bottom: 16px;\n    }\n    .sectionText {\n      font-size: 24px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 30px;\n    }\n    .month {\n      display: grid;\n      grid-template-columns: repeat(5, 1fr);\n      grid-template-rows: repeat(7, 0.5fr);\n      gap: 10px;\n    }\n    .mounthNav {\n      display: flex;\n      align-items: center;\n    }\n\n    .navBtn {\n      display: flex;\n      border: none;\n      background-color: transparent;\n      justify-content: center;\n    }\n\n    .dateText {\n      color: var(--primery-color-blue);\n      width: 130px;\n      text-align: center;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .calendarDayBtn {\n      width: 34px;\n      height: 34px;\n      border-radius: 20px;\n      border: none;\n      background-color: var(--primery-color-white);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .day {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n    .progressWaterText {\n      color: var(--secondary-color-blue);\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n\n    .border-complete {\n      border: 1px solid var(--calendar-color-orange);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .month {\n      grid-template-columns: repeat(10, 1fr);\n      grid-template-rows: repeat(4, 0.5fr);\n    }\n    .sectionText {\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n","import React, { useState } from 'react';\nimport { CalendarStyle } from './MonthStatsTable.styled';\nimport icons from '../../img/icons.svg';\n\nconst MounthStatsTable = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  const daysInMonth = date => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    return new Date(year, month + 1, 0).getDate();\n  };\n\n  const handlePrevMonth = () => {\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1)\n    );\n  };\n\n  const getBorderStyle = percentage => {\n    if (percentage >= 70 && percentage <= 100) {\n      return 'border-complete';\n    }\n  };\n\n  const handleNextMonth = () => {\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1)\n    );\n  };\n\n  const renderCalendar = () => {\n    const monthDays = [];\n    const totalDays = daysInMonth(currentDate);\n\n    for (let i = 1; i <= totalDays; i += 1) {\n      const value = Math.round(Math.random() * 100);\n\n      monthDays.push(\n        <li key={`day-${i}`} className=\"day\">\n          <button className={`calendarDayBtn ${getBorderStyle(value)}`}>\n            {i}\n          </button>\n          <p className=\"progressWaterText\">{value}%</p>\n        </li>\n      );\n    }\n\n    return monthDays;\n  };\n\n  return (\n    <CalendarStyle>\n      <div className=\"header\">\n        <span className=\"sectionText\">Mounth</span>\n        <div className=\"mounthNav\">\n          <button className=\"navBtn\" onClick={handlePrevMonth}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-left'}></use>\n            </svg>\n          </button>\n          <h2 className=\"dateText\">\n            {currentDate.toLocaleString('en-US', {\n              month: 'long',\n            })}\n            , {currentDate.getFullYear()}\n          </h2>\n          <button className=\"navBtn\" onClick={handleNextMonth}>\n            {' '}\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-right'}></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <ul className=\"month\">{renderCalendar()}</ul>\n    </CalendarStyle>\n  );\n};\n\nexport default MounthStatsTable;\n","export const selectTodayWater = state => state.waterDetails.today;\nexport const selectMonthWater = state => state.waterDetails.month;\nexport const selectDailyNorm = state => state.waterDetails.today.dailyNorm;\nexport const selectWaterRate = state => state.waterDetails.today.waterRate;\n","import styled from 'styled-components';\n\nexport const BoxModal = styled.div`\n  padding: 0 24px 32px;\n`;\n\nexport const ButtonStyle = styled.button`\n  display: inline-block;\n  width: 100%;\n  padding: 8px 30px;\n  color: #fff;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  background-color: var(--btn-color-red);\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n  &:active {\n    box-shadow: none;\n  }\n\n  &:last-of-type {\n    color: var(--primery-color-blue);\n    background-color: var(--btn-color-light-blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    padding: 10px 30px;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n  }\n`;\n\nexport const TextStyle = styled.p`\n  font-size: 18px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-weight: 500;\n  margin-bottom: 24px;\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 32px 24px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  position: fixed;\n  padding: 0;\n  margin: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  &.base-modal-enter {\n    opacity: 0;\n  }\n\n  &.base-modal-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in-out;\n  }\n\n  &.base-modal-exit {\n    opacity: 1;\n  }\n\n  &.base-modal-exit-active {\n    opacity: 0;\n    transition: opacity 300ms ease-in-out 200ms;\n  }\n`;\nexport const ModalContent = styled.div`\n  translate: -50% -50%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  min-width: 280px;\n  max-height: 90vh;\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: auto;\n  z-index: 1200;\n\n  @media screen and (min-width: 768px) {\n    min-width: 592px;\n  }\n\n  &.modal-content-enter {\n    opacity: 0;\n    scale: 0.5;\n  }\n\n  &.modal-content-enter-active {\n    opacity: 1;\n    scale: 1;\n    transition: opacity 300ms ease-in-out 200ms, scale 200ms ease-in-out 200ms;\n  }\n\n  &.modal-content-exit {\n    opacity: 1;\n    scale: 1;\n  }\n\n  &.modal-content-exit-active {\n    opacity: 0;\n    scale: 0.5;\n    transition: opacity 300ms ease-in-out, scale 200ms ease-in-out;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 12px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 100%;\n  height: 100%;\n  stroke: var(--primery-color-blue);\n\n  &:hover,\n  &:focus {\n    stroke: var(--secondary-yellow);\n  }\n`;\n\nexport const BoxAddModal = styled.div`\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n\n  h3 {\n    margin-bottom: 16px;\n    color: var(--primery-color-black);\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.1;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 704px;\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-width: 592px;\n  }\n`;\n\nexport const PreviousInfo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 24px;\n  gap: 12px;\n  border-radius: 10px;\n  background-color: var(--bg-color-light-blue);\n  width: 254px;\n  margin-bottom: 24px;\n`;\n\nexport const AddParagraph = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 12px;\n`;\n\nexport const AddWater = styled.div`\n  margin-bottom: 24px;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const Water = styled.p`\n  color: var(--primery-color-blue);\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  width: 92px;\n  height: 36px;\n`;\n\nexport const Label = styled.div`\n  border-radius: 40px;\n  background: var(--btn-color-light-blue);\n  padding-left: 10px;\n  padding-right: 16px;\n  margin-left: 10px;\n  margin-right: 10px;\n`;\n\nexport const ButtonMl = styled.button`\n  background-color: var(--primery-color-white);\n  color: var(--primery-color-blue);\n  border-radius: 30px;\n  border: 1px solid var(--secondary-color-blue);\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  padding: 4px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover &:focus {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--primery-color-blue);\n`;\n\nexport const AddTime = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const InputTime = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  &::placeholder {\n    color: var(--primery-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const Input = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &::placeholder {\n    color: var(--secondary-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const FooterModal = styled.div`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  span {\n    color: var(--primery-color-blue);\n    text-align: center;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.33;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: end;\n    align-items: center;\n    gap: 24px;\n    margin-top: 24px;\n  }\n`;\n\nexport const AddButtonSave = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  background-color: var(--primery-color-blue);\n  color: #fff;\n  padding: 10px 30px;\n  border-radius: 10px;\n  font-size: 18px;\n  width: 100%;\n  height: 44px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: background-color 250ms cubic-bezier(0.165, 0.84, 0.44, 1.03);\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteWaterThunk } from 'redux/waterDetails/waterThunk';\nimport {\n  BoxModal,\n  ButtonBox,\n  ButtonStyle,\n  TextStyle,\n  ModalHeader,\n} from './DeleteWaterModal.styled';\nimport icons from '../../img/icons.svg';\nimport {\n  Overlay,\n  ModalContent,\n  CloseButton,\n  CloseIcon,\n} from 'components/TodayListModal/TodayListModal.styled';\n\nexport const DeleteWaterModal = ({ onClose, recordId }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteWaterThunk(recordId)).then(data => {\n      if (!data.error) onClose();\n    });\n  };\n  return (\n    <>\n      <Overlay onClick={onClose} />\n      <ModalContent>\n        <ModalHeader>\n          <h2>Delete entry</h2>\n          <CloseButton onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxModal>\n            <TextStyle>Are you sure you want to delete the entry?</TextStyle>\n            <ButtonBox>\n              <ButtonStyle onClick={handleDelete}>Delete</ButtonStyle>\n              <ButtonStyle onClick={onClose}>Cancel</ButtonStyle>\n            </ButtonBox>\n          </BoxModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import { addHours, format, parseISO } from 'date-fns';\n\nexport function formatDate(dateString, formatString = 'yyyy-MM-dd ') {\n  const date = new Date(dateString);\n  return format(date, formatString);\n}\n\nexport function formatTime(dateString, formatString = 'h:mm a') {\n  const date = addHours(parseISO(dateString), -2);\n  return format(date, formatString);\n}\n","import styled from 'styled-components';\n\nexport const TodayWrapper = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const TodayItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 0;\n  align-items: center;\n  border-bottom: 1px solid var(--btn-color-light-blue);\n`;\n\nexport const TodayInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TodayTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n\nexport const TodayList = styled.ul`\n  height: 212px;\n  overflow: auto;\n`;\n\nexport const TodayVolume = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.33;\n  color: var(--primery-color-blue);\n  margin-right: 16px;\n`;\n\nexport const TodayTime = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 2;\n  color: var(--primery-color-black);\n`;\n\nexport const IconGlass = styled.svg`\n  width: 26px;\n  height: 26px;\n  margin-right: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 36px;\n    height: 36px;\n  }\n`;\n\nexport const TodayTools = styled.div`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ButtonChange = styled.button`\n  background-color: transparent;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n\n  & svg {\n    stroke: var(--secondary-color-blue);\n    fill: transparent;\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    border-bottom: 1px solid var(--secondary-color-blue);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  background-color: transparent;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n\n  & svg {\n    stroke: var(--btn-color-red);\n    fill: transparent;\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    border-bottom: 1px solid var(--btn-color-red);\n  }\n`;\n\nexport const AddWaterBtn = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: transparent;\n  color: var(--primery-color-blue);\n  border: none;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  stroke: var(--primery-color-blue);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    fill: transparent;\n  }\n\n  &:hover {\n    color: var(--secondary-yellow);\n    stroke: var(--secondary-yellow);\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\nimport { formatTime } from 'redux/waterDetails/helpers';\nimport {\n  Overlay,\n  ModalContent,\n  ModalHeader,\n  CloseButton,\n  CloseIcon,\n  BoxAddModal,\n  PreviousInfo,\n  AddParagraph,\n  AddWater,\n  Water,\n  Label,\n  ButtonMl,\n  Icon,\n  AddTime,\n  InputTime,\n  Input,\n  FooterModal,\n  AddButtonSave,\n} from './TodayListModal.styled';\nimport {\n  IconGlass,\n  TodayTime,\n  TodayVolume,\n} from '../TodayWaterList/TodayWaterList.styled';\nimport icons from '../../img/icons.svg';\nimport { addWatersThunk, editWaterThunk } from 'redux/waterDetails/waterThunk';\n\nexport const TodayListModal = ({\n  onClose,\n  isEditing,\n  initialAmount,\n  initialTime,\n  existingRecordId,\n}) => {\n  const [amount, setAmount] = useState(initialAmount || 0);\n  const [time, setTime] = useState(\n    isEditing && initialTime\n      ? format(new Date(initialTime), 'HH:mm')\n      : format(new Date(), 'HH:mm')\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  // змінюємо кількість води за допомогою кнопок\n  const increaseAmount = () => {\n    setAmount(prevAmount => prevAmount + 50);\n  };\n\n  const decreaseAmount = () =>\n    setAmount(prevAmount => (prevAmount > 0 ? prevAmount - 50 : 0));\n\n  const handleAmountChange = e => {\n    let newValue = e.target.value;\n\n    if (newValue.startsWith('0') && newValue.length > 1) {\n      newValue = parseFloat(newValue.substring(1));\n    }\n    console.log(parseFloat(newValue));\n    setAmount(parseFloat(newValue));\n  };\n\n  useEffect(() => {\n    if (isEditing) {\n      // console.log('here');\n      // console.log(initialTime);\n      setAmount(initialAmount || 0);\n      setTime(formatTime(initialTime, 'HH:mm'));\n    } else {\n      setAmount(0);\n      setTime(format(new Date(), 'HH:mm'));\n    }\n  }, [isEditing, initialAmount, initialTime]);\n\n  const handleSubmit = () => {\n    let isoDate;\n    if (isEditing) {\n      // Якщо редагуємо, використовуємо вже встановлений час з існуючого запису\n      isoDate = initialTime\n        ? new Date(initialTime).toISOString().slice(0, 16)\n        : new Date().toISOString();\n    } else if (time) {\n      // Якщо створюємо новий запис і час вибрано користувачем\n      const currentDate = new Date();\n      const [hours, minutes] = time.split(':');\n      console.log('time: 1-й if', time);\n      currentDate.setHours(hours, minutes);\n      console.log(currentDate);\n      isoDate = currentDate.toISOString().slice(0, 16);\n      console.log('Наявна дата: 1-й if', isoDate);\n\n      const currentDate2 = new Date(isoDate);\n\n      // Нова дата на базі наявної\n      const newDate = new Date(currentDate2);\n      newDate.setHours(currentDate2.getHours() + 2);\n\n      const formattedNewDate =\n        newDate.getFullYear() +\n        '-' +\n        ('0' + (newDate.getMonth() + 1)).slice(-2) +\n        '-' +\n        ('0' + newDate.getDate()).slice(-2) +\n        'T' +\n        ('0' + newDate.getHours()).slice(-2) +\n        ':' +\n        ('0' + newDate.getMinutes()).slice(-2);\n      console.log('Наявна дата', isoDate);\n      console.log('Нова дата', formattedNewDate);\n      isoDate = formattedNewDate;\n    }\n\n    const waterData = {\n      waterVolume: amount,\n      date: isoDate,\n    };\n    console.log(waterData);\n\n    if (isEditing) {\n      dispatch(editWaterThunk({ _id: existingRecordId, ...waterData })).then(\n        data => {\n          if (!data.error) onClose();\n        }\n      );\n    } else {\n      dispatch(addWatersThunk(waterData)).then(data => {\n        if (!data.error) {\n          onClose();\n          setAmount(0);\n        }\n      });\n    }\n    onClose();\n  };\n\n  const handleOnClose = () => {\n    if (isEditing) {\n      onClose();\n      return;\n    }\n    onClose();\n    setAmount(0);\n  };\n\n  const title = isEditing ? 'Edit the entered amount of water' : 'Add water';\n\n  const displayTime = isEditing && initialTime ? formatTime(initialTime) : '';\n\n  return (\n    <>\n      <Overlay onClick={handleOnClose} />\n      <ModalContent>\n        <ModalHeader>\n          <h2>{title}</h2>\n          <CloseButton onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxAddModal>\n            {isEditing && (\n              <PreviousInfo>\n                <IconGlass>\n                  <use href={`${icons}#icon-glass`}></use>\n                </IconGlass>\n                <TodayVolume>\n                  {initialAmount ? `${initialAmount} ml` : 'No notes yet'}\n                </TodayVolume>\n                <TodayTime>{initialTime ? `${displayTime}` : ''}</TodayTime>\n              </PreviousInfo>\n            )}\n            <h3>{isEditing ? 'Correct entered data:' : 'Choose a value:'}</h3>\n            <AddWater>\n              <AddParagraph>Amount of water:</AddParagraph>\n              <div>\n                <ButtonMl onClick={decreaseAmount}>\n                  <Icon>\n                    <use href={`${icons}#icon-decrement-outline`}></use>\n                  </Icon>\n                </ButtonMl>\n                <Label>\n                  <Water>{Number.isNaN(amount) ? '0' : `${amount}`} ml</Water>\n                </Label>\n                <ButtonMl onClick={increaseAmount}>\n                  <Icon>\n                    <use href={`${icons}#icon-add`}></use>\n                  </Icon>\n                </ButtonMl>\n              </div>\n            </AddWater>\n            <AddTime>\n              <AddParagraph>Recording time:</AddParagraph>\n              <InputTime\n                type=\"time\"\n                value={time}\n                onChange={e => setTime(e.target.value)}\n                step=\"300\"\n              />\n            </AddTime>\n            <div>\n              <h3>Enter the value of the water used:</h3>\n              <Input\n                type=\"number\"\n                value={Number.isNaN(amount) ? '0' : `${amount}`}\n                onChange={handleAmountChange}\n                onBlur={() =>\n                  setAmount(prevAmount => prevAmount || initialAmount || 0)\n                }\n              />\n            </div>\n            <FooterModal>\n              <span>{Number.isNaN(amount) ? `0` : `${amount}`}ml</span>\n              <AddButtonSave onClick={handleSubmit}>Save</AddButtonSave>\n            </FooterModal>\n          </BoxAddModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTodayWater } from 'redux/waterDetails/waterSelectors';\nimport { DeleteWaterModal } from '../DeleteWaterModal/DeleteWaterModal';\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\nimport icons from '../../img/icons.svg';\nimport { getTodayWater } from 'redux/waterDetails/waterThunk';\nimport {\n  AddWaterBtn,\n  ButtonChange,\n  ButtonDelete,\n  IconGlass,\n  TodayInfo,\n  TodayItem,\n  TodayList,\n  TodayTime,\n  TodayTitle,\n  TodayTools,\n  TodayVolume,\n  TodayWrapper,\n} from './TodayWaterList.styled';\nimport { formatTime } from 'redux/waterDetails/helpers';\n\nconst iconsList = {\n  edit: `${icons}#icon-edit`,\n  delete: `${icons}#icon-delete`,\n  glass: `${icons}#icon-glass`,\n  add: `${icons}#icon-add`,\n};\n\nexport const TodayWaterList = () => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedWaterItem, setSelectedWaterItem] = useState(null);\n  const [isDeleteWaterModalOpen, setDeleteWaterModalOpen] = useState(false);\n  const { dailyWaterList } = useSelector(selectTodayWater);\n\n  useEffect(() => {\n    dispatch(getTodayWater());\n  }, [dispatch]);\n\n  const openModalToAdd = () => {\n    setSelectedWaterItem(null);\n    setIsModalOpen(true);\n  };\n\n  const openModalToDelete = item => {\n    setSelectedWaterItem(item);\n    setDeleteWaterModalOpen(true);\n  };\n\n  const openModalToEdit = item => {\n    setSelectedWaterItem(item);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <TodayWrapper>\n      <TodayTitle>Today</TodayTitle>\n      <TodayList>\n        {dailyWaterList?.map(item => (\n          <TodayItem key={item._id}>\n            <TodayInfo>\n              <IconGlass>\n                <use href={iconsList.glass}></use>\n              </IconGlass>\n              <TodayVolume>{item.waterVolume} ml</TodayVolume>\n              <TodayTime>{formatTime(item.date)}</TodayTime>\n            </TodayInfo>\n            <TodayTools>\n              <ButtonChange onClick={() => openModalToEdit(item)}>\n                <svg>\n                  <use href={iconsList.edit}></use>\n                </svg>\n              </ButtonChange>\n              <ButtonDelete onClick={() => openModalToDelete(item)}>\n                <svg>\n                  <use href={iconsList.delete}></use>\n                </svg>\n              </ButtonDelete>\n            </TodayTools>\n          </TodayItem>\n        ))}\n      </TodayList>\n      <AddWaterBtn onClick={openModalToAdd}>\n        <svg>\n          <use href={iconsList.add}></use>\n        </svg>\n        Add Water\n      </AddWaterBtn>\n      {isDeleteWaterModalOpen && (\n        <DeleteWaterModal\n          onClose={() => setDeleteWaterModalOpen(false)}\n          recordId={selectedWaterItem?._id}\n        />\n      )}\n      {isModalOpen && (\n        <TodayListModal\n          initialAmount={selectedWaterItem?.waterVolume}\n          initialTime={selectedWaterItem?.date}\n          isEditing={selectedWaterItem !== null}\n          existingRecordId={selectedWaterItem?._id}\n          onClose={() => setIsModalOpen(false)}\n        />\n      )}\n    </TodayWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WaterRatioPanelContainer = styled.div`\n  width: 280px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px} {\n    width: 704px;\n    gap: 24px;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    gap: 32px;\n  }\n`;\n\nexport const WaterRange = styled.input`\n  &[type='range'] {\n    appearance: none;\n    width: 100%;\n    border-radius: 10px;\n    background-color: #d7e3ff;\n    background-image: linear-gradient(to right, #9ebbff, #9ebbff);\n    background-repeat: no-repeat;\n  }\n\n  &[type='range']:focus {\n    outline: none;\n  }\n\n  &[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8px;\n    animation: 0.2s;\n    border-radius: 10px;\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &[type='range']::-webkit-slider-thumb {\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: solid 1px #407bff;\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n`;\n\nexport const WaterRangeHeader = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  margin-bottom: 16px;\n  color: #407bff;\n`;\nexport const WaterRangeContainer = styled.div`\n  position: relative;\n  height: 102px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n  }\n`;\n\nexport const RateContainer = styled.div`\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const MiddleMark = styled.span`\n  position: absolute;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  text-align: center;\n  margin-bottom: 4px;\n  gap: 4px;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const StartMark = styled.span`\n  transform: translateX(-50%);\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n    color: #9ebbff;\n  }\n`;\n\nexport const EndMark = styled.span`\n  transform: translateX(50%);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const AddWaterButton = styled.button`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  padding: 6px 76px 6px 76px;\n  background-color: #407bff;\n  color: #fff;\n  border: none;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: '0 4px 14px rgba(64, 123, 255, 0.54)';\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    padding: 10px 104px 10px 104px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 178px;\n    height: 44px;\n    padding: 10px 30px 10px 30px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: transparent;\n  stroke: #ffffff;\n`;\n","import {\n  Icon,\n  AddWaterButton,\n  StartMark,\n  MiddleMark,\n  RateContainer,\n  EndMark,\n  WaterRange,\n  WaterRangeContainer,\n  WaterRangeHeader,\n  WaterRatioPanelContainer,\n} from './WaterRatioPanel.styled';\n\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\n\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport icons from '../../img/icons.svg';\nimport { selectWaterRate } from 'redux/waterDetails/waterSelectors';\n\nexport const WaterRatioPanel = () => {\n  const waterRate = useSelector(selectWaterRate);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const getBackgroundSize = () => {\n    return {\n      backgroundSize: `${waterRate}%`,\n    };\n  };\n\n  const getPosition = () => {\n    const limit = Math.min(100, Math.max(0, waterRate));\n    return {\n      left: `calc(${limit}% - 2px)`,\n    };\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <WaterRatioPanelContainer>\n      <WaterRangeContainer>\n        <WaterRangeHeader>Today</WaterRangeHeader>\n        <WaterRange\n          type=\"range\"\n          value={waterRate}\n          readOnly={true}\n          style={getBackgroundSize()}\n          aria-label=\"Water range\"\n        />\n        <RateContainer>\n          <StartMark>0%</StartMark>\n          <MiddleMark\n            id=\"waterMark\"\n            style={getPosition()}\n          >{`${waterRate}%`}</MiddleMark>\n          <EndMark>100%</EndMark>\n        </RateContainer>\n      </WaterRangeContainer>\n      <AddWaterButton\n        onClick={() => {\n          openModal();\n        }}\n      >\n        <Icon>\n          <use href={`${icons}#icon-add-button`}></use>\n        </Icon>\n        Add Water\n      </AddWaterButton>\n      {isModalOpen && (\n        <TodayListModal\n          onClose={() => {\n            closeModal();\n          }}\n          onShow={isModalOpen}\n        />\n      )}\n    </WaterRatioPanelContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const GlobalStyles = styled.div`\n  @media screen and (min-width: 768px) {\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    input[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n`;\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Modal = styled.div`\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  @media screen and (max-width: 319px) {\n    padding: 24px 12px;\n    max-width: 280px;\n  }\n  @media screen and (min-width: 320px) {\n    padding: 24px 12px;\n    max-width: 280px;\n    max-height: 816px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n    max-width: 704px;\n    max-height: 696px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 592px;\n    max-height: 712px;\n  }\n`;\nexport const TopDiv = styled.div`\n  position: relative;\n`;\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: large;\n  font-weight: 900;\n  color: var(--primery-color-blue);\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: var(--btn-color-red);\n  }\n`;\nexport const ModalHeader = styled.div`\n  color: var(--primery-color-black);\n  line-height: 32px;\n  font-size: 26px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const FormulasBox = styled.div`\n  margin-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\nexport const FormulaBox = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 24px;\n  }\n`;\nexport const LabelText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  `;\nexport const InputText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n\n  @media screen and (min-width: 320px) {\n    width: 190px;\n  }\n  @media screen and (min-width: 768px) {\n    width: auto;\n  }\n`;\n\n\nexport const CaptionBox = styled.div`\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 10px;\n  padding: 10px;\n  margin-top: 12px;\n  width: 100%;\n\n  @media screen and (min-width: 320px) {\n    height: 100px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n  }\n  @media screen and (min-width: 1440px) {\n    height: 68px;\n  }\n`;\nexport const ColoredFormula = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-left: 4px;\n`;\nexport const CaptionMark = styled.span`\n  color: var(--primery-color-blue);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const CaptionText = styled.div`\n  color: #8F8F8F;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const FormBigText = styled.div`\n  margin-top: 24px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-size: 18px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const WaterFormInput = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 8px;\n`;\nexport const WaterFormInputSpecial = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredWaterBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 16px;\n`;\nexport const RequiredWater = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 900;\n  margin-left: 6px;\n`;\nexport const SaveButton = styled.button`\n  border-radius: 10px;\n  border: none;\n  background-color: var(--primery-color-blue);\n  color: var(--primery-color-white);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  padding: 10px 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: box-shadow 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:focus {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  }\n\n  @media screen and (max-width: 319px) {\n    width: calc( 100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n  @media screen and (min-width: 320px) {\n    width: calc( 100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    font-size: 18px;\n    line-height: 24px;\n    position: absolute;\n    right: 24px;\n    bottom: 32px;\n  }\n`;\nexport const RadioButton = styled.div`\n  input {\n    display: none;\n  }\n\n  margin-top: 16px;\n\n  label {\n    display: inline-block;\n    position: relative;\n    padding-left: 22px;\n    margin-right: 24px;\n    cursor: pointer;\n  }\n\n  label::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 14px;\n    height: 14px;\n    border: 1px solid var(--primery-color-blue);\n    border-radius: 50%;\n    background-color: var(--primery-color-white);\n    box-sizing: border-box;\n  }\n\n  label::after {\n    content: '';\n    position: absolute;\n    left: 4px;\n    top: 7px;\n    width: 6px;\n    height: 6px;\n    border: none;\n    border-radius: 50%;\n    background-color: transparent;\n    box-sizing: border-box;\n  }\n\n  input:checked + label::after {\n    background-color: var(--primery-color-blue);\n  }\n`;\n\n// DAILY NORMA PANEL\n\nexport const DailyNormaBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px 20px;\n  height: 76px;\n  width: 164px;\n  border-radius: 10px;\n  border: 1px solid var(--bg-color-light-blue);\n  box-shadow: 0 4px 8px 0 rgba(158, 187, 255, 0.12);\n\n  @media screen and (max-width: 319px) {\n    position: absolute;\n    left: 20px;\n    top: 80px;\n  } \n\n  @media screen and (min-width: 320px) {\n    position: absolute;\n    left: 20px;\n    top: 80px;\n  }\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    left: 32px;\n    top: 104px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    left: 112px;\n    top: 112px;\n  }\n\n`;\n\nexport const DailyText = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-black);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  width: 124px;\n`;\n\nexport const RequiredWaterHeader = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-blue);\n  font-weight: 900;\n  line-height: 24px;\n  font-size: 24px;\n`;\n\nexport const BottomBox = styled.div`\n  display: flex;\n  position: relative;\n  margin-bottom: 0;\n  margin-top: auto;\n  width: 94px;\n  height: 24px;\n`;\n\nexport const EditWaterButton = styled.button`\n  width: 28px;\n  height: 20px;\n  background-color: transparent;\n  color: var(--secondary-color-blue);\n  border: none;\n  cursor: pointer;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  &:hover {\n    /* Add styling for hover state if needed */\n  }\n`;","import React, { useState, useEffect, useRef, useCallback } from 'react';\n// import { saveDataToBackend, getStoredUserData } from './api';\nimport { getDailyNorma, updateDailyNorma } from '../../redux/auth/thunk';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport '../../index.css';\n\nimport {\n    ModalOverlay,\n    Modal,\n    TopDiv,\n    CloseButton,\n    ModalHeader,\n    FormulasBox,\n    FormulaBox,\n    ColoredFormula,\n    CaptionBox,\n    CaptionText,\n    CaptionMark,\n    FormBigText,\n    RadioButton,\n    RequiredText,\n    InputText,\n    WaterFormInput,\n    RequiredWaterBox,\n    RequiredWater,\n    SaveButton,\n    LabelText,\n  } from './dailyNorma.styled';\n\n\n\nconst DailyNormaModal = ({ isOpen, onClose }) => {\n  const dispatch = useDispatch();\n\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState(0);\n  const [activityTime, setActivityTime] = useState(0);\n  const [dailyNorma, setDailyNorma] = useState(2.0);\n  const [willDrink, setWillDrink] = useState(0);\n\n  const weightInputRef = useRef(null);\n  const activityTimeInputRef = useRef(null);\n  const willDrinkInputRef = useRef(null);\n\n  const handleGenderChange = (selectedGender) => {\n    setGender(selectedGender);\n    calculateDailyNorma();\n  };\n\n  const handleWeightChange = (e) => {\n    const numericValue = e.target.value.replace(/[^0-9]/g, '');\n    setWeight(numericValue);\n  };\n\n  const handleActivityTimeChange = (e) => {\n    const numericValue = e.target.value.replace(/[^0-9]/g, '');\n    setActivityTime(numericValue);\n  };\n\n  const handleWillDrinkChange = (e) => {\n    const numericValue = e.target.value.replace(/[^0-9]/g, '');\n    setWillDrink(numericValue);\n  };\n\n  const handleWeightFocus = () => {\n    if (parseFloat(weight) === 0) {\n      weightInputRef.current.value = '';\n    }\n  };\n\n  const handleActivityTimeFocus = () => {\n    if (parseFloat(activityTime) === 0) {\n      activityTimeInputRef.current.value = '';\n    }\n  };\n\n  const handleWillDrinkFocus = () => {\n    if (parseFloat(willDrink) === 0) {\n      willDrinkInputRef.current.value = '';\n    }\n  };\n\n  const handleWeightBlur = () => {\n    if (weight === '' || parseFloat(weight) === 0) {\n      weightInputRef.current.value = 0;\n      setWeight(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const handleActivityTimeBlur = () => {\n    if (activityTime === '' || parseFloat(activityTime) === 0) {\n      activityTimeInputRef.current.value = 0;\n      setActivityTime(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const handleWillDrinkBlur = () => {\n    if (willDrink === '' || parseFloat(willDrink) === 0) {\n      willDrinkInputRef.current.value = 0;\n      setWillDrink(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const calculateDailyNorma = useCallback(() => {\n    const userWeight = parseFloat(weight);\n    const userActivity = parseFloat(activityTime);\n\n    if (isNaN(userWeight) || isNaN(userActivity)) {\n      setDailyNorma((2.0).toFixed(1));\n      return;\n    }\n\n    const genderWeight = gender === 'woman' ? 0.03 : 0.04;\n    const genderActivity = gender === 'woman' ? 0.4 : 0.6;\n    let formulaResult = userWeight * genderWeight + userActivity * genderActivity;\n\n    formulaResult = formulaResult === 0 ? 2.0 : formulaResult;\n\n    setDailyNorma(formulaResult > 99 ? 99 : formulaResult.toFixed(1));\n  }, [gender, weight, activityTime]);\n\n  useEffect(() => {\n    calculateDailyNorma();\n  }, [calculateDailyNorma]);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userData = await dispatch(getDailyNorma());\n        if (userData.payload) {\n          setGender(userData.payload.gender || 'woman');\n          setWeight(userData.payload.weight || 0);\n          setActivityTime(userData.payload.activityTime || 0);\n          setWillDrink(userData.payload.willDrink || 0);\n          setDailyNorma(isNaN(userData.payload.dailyNorma) ? 2.0.toFixed(1) : userData.payload.dailyNorma);\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n\n    if (isOpen) {\n      fetchData();\n    }\n  }, [isOpen, dispatch]);\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget && e.button === 0) {\n      onClose();\n    }\n  };\n\n  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  const handleSave = () => {\n    const requestData = {\n      gender,\n      weight: parseFloat(weight),\n      activityTime: parseFloat(activityTime),\n      willDrink: parseFloat(willDrink),\n      dailyNorma: parseFloat(dailyNorma),\n    };\n\n    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    dispatch(updateDailyNorma(requestData))\n      .then((response) => {\n        console.log('Data saved to the server:', response);\n        onClose();\n      })\n      .catch((error) => {\n        console.error('Error saving data to the server:', error);\n        toast.error('There was an error saving data. Please try again.');\n      });\n  };\n\n  if (!isOpen) {\n    return null;\n  }\n\n  let displayAmount = dailyNorma;\n  if (dailyNorma >= 99) {\n    displayAmount = \"99+\";\n  }\n\nreturn (\n    <ModalOverlay onMouseDown={handleBackdropClick}>\n      <Modal>\n        <TopDiv>\n          <ModalHeader>My daily norma</ModalHeader>\n          <CloseButton onClick={onClose}>&#10005;</CloseButton>\n        </TopDiv>\n\n        <FormulasBox>\n          <FormulaBox>\n            <LabelText>Female:</LabelText>\n            <ColoredFormula>V=(M*0.03) + (T*0.4)</ColoredFormula>\n          </FormulaBox>\n          <FormulaBox>\n            <LabelText>Male:</LabelText>\n            <ColoredFormula>V=(M*0.04) + (T*0.6)</ColoredFormula>\n          </FormulaBox>\n        </FormulasBox>\n\n        <CaptionBox>\n          <CaptionText>\n            <CaptionMark>*</CaptionMark> V is the volume of the water norm in liters per day, M is your body weight, T is the time\n            of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n          </CaptionText>\n        </CaptionBox>\n\n        <form>\n          <FormBigText>Calculate your rate:</FormBigText>\n\n          <RadioButton>\n            <input\n              type=\"radio\"\n              id=\"woman\"\n              name=\"gender\"\n              value=\"woman\"\n              checked={gender === 'woman'}\n              onChange={() => handleGenderChange('woman')}\n            />\n            <label htmlFor=\"woman\">\n              <p className='label-text'>Female</p>\n            </label>\n\n            <input\n              type=\"radio\"\n              id=\"man\"\n              name=\"gender\"\n              value=\"man\"\n              checked={gender === 'man'}\n              onChange={() => handleGenderChange('man')}\n            />\n            <label htmlFor=\"man\"> <p className='label-text'>Male</p></label>\n          </RadioButton>\n\n          <label>\n            <InputText>Your weight in kilograms:</InputText>\n          </label>\n            <WaterFormInput\n              type=\"text\"\n              value={weight}\n              onChange={handleWeightChange}\n              onFocus={handleWeightFocus}\n              onBlur={handleWeightBlur}\n              ref={weightInputRef}\n              defaultValue={weight === 0 ? '' : weight}\n              maxLength={5}\n\n              onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n            />\n\n          <label>\n            <InputText>The time of active participation in sports or other activities with a high physical load in hours:</InputText>\n          </label>\n            <WaterFormInput\n              type=\"text\"\n              value={activityTime}\n              onChange={handleActivityTimeChange}\n              onFocus={handleActivityTimeFocus}\n              onBlur={handleActivityTimeBlur}\n              ref={activityTimeInputRef}\n              defaultValue={activityTime === 0 ? '' : activityTime}\n              maxLength={5}\n\n              onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n            />\n\n          <RequiredWaterBox>\n            <RequiredText>The required amount of water in liters per day:</RequiredText>\n            <RequiredWater>{displayAmount} L</RequiredWater>\n          </RequiredWaterBox>\n\n          <FormBigText>Write down how much water you will drink:</FormBigText>\n          <WaterFormInput\n            type=\"text\"\n            value={willDrink}\n            onChange={handleWillDrinkChange}\n            onFocus={handleWillDrinkFocus}\n            onBlur={handleWillDrinkBlur}\n            ref={willDrinkInputRef}\n            defaultValue={willDrink === 0 ? '' : willDrink}\n            \n            maxLength={5}\n            \n            onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n          />\n          \n\n          <SaveButton type=\"button\" onClick={handleSave}>Save</SaveButton>\n        </form>\n      </Modal>\n    </ModalOverlay>\n  );\n};\n\nexport default DailyNormaModal;","import React, { useState, useEffect } from 'react';\nimport Modal from './dailyNormaModal';\nimport { getDailyNorma } from '../../redux/auth/thunk';\nimport { useDispatch } from 'react-redux';\nimport {\n  DailyNormaBox,\n  DailyText,\n  RequiredWaterHeader,\n  BottomBox,\n  EditWaterButton,\n} from './dailyNorma.styled';\n\nexport const DailyNorma = () => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [dailyNorma, setDailyNorma] = useState(2.0);\n\n  useEffect(() => {\n    dispatch(getDailyNorma())\n      .then((userData) => {\n        const fetchedDailyNorma = userData && userData.dailyNorma;\n        const formattedAmount = (parseFloat(fetchedDailyNorma) || 2.0).toFixed(1);\n\n        setDailyNorma(formattedAmount);\n        // setDailyNorma((fetchedDailyNorma).toFixed(1));\n        \n      })\n      .catch((error) => {\n        console.error('Error getting dailyNorma:', error);\n        setDailyNorma(2.0);\n      });\n  }, [dispatch]);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  let displayAmount = dailyNorma;\n  if (dailyNorma >= 99) {\n    displayAmount = \"99+\";\n  }\n\n  return (\n    <DailyNormaBox>\n      <DailyText>My daily norma</DailyText>\n      <BottomBox>\n        <RequiredWaterHeader>{displayAmount} L</RequiredWaterHeader>\n        <EditWaterButton onClick={handleModalOpen}>Edit</EditWaterButton>\n      </BottomBox>\n\n      <Modal isOpen={isModalOpen} onClose={handleModalClose} />\n    </DailyNormaBox>\n  );\n};\n\n// export default DailyNorma;\n","import MounthStatsTable from 'components/MonthStatsTable/MonthStatsTable';\nimport { Section } from 'components/Section/Section';\nimport { TodayWaterList } from 'components/TodayWaterList/TodayWaterList';\nimport { WaterRatioPanel } from 'components/WaterRatioPanel/WaterRatioPanel';\nimport { DailyNorma } from 'components/DailyNorma/dailyNorma';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Section title=\"Water Tracker\">\n        <DailyNorma />\n        <WaterRatioPanel />\n        <TodayWaterList />\n        <MounthStatsTable />\n      </Section>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["CalendarStyle","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","Date","_useState2","_slicedToArray","currentDate","setCurrentDate","getBorderStyle","percentage","_jsxs","children","className","_jsx","onClick","getFullYear","getMonth","width","height","href","icons","toLocaleString","month","monthDays","totalDays","date","year","getDate","daysInMonth","i","value","Math","round","random","push","concat","renderCalendar","selectTodayWater","state","waterDetails","today","selectWaterRate","waterRate","BoxModal","ButtonStyle","_templateObject2","ButtonBox","_templateObject3","TextStyle","_templateObject4","ModalHeader","_templateObject5","Overlay","ModalContent","CloseButton","CloseIcon","BoxAddModal","_templateObject6","PreviousInfo","_templateObject7","AddParagraph","_templateObject8","AddWater","_templateObject9","Water","_templateObject10","Label","_templateObject11","ButtonMl","_templateObject12","Icon","_templateObject13","AddTime","_templateObject14","InputTime","_templateObject15","Input","_templateObject16","FooterModal","_templateObject17","AddButtonSave","_templateObject18","DeleteWaterModal","_ref","onClose","recordId","dispatch","useDispatch","_Fragment","deleteWaterThunk","then","data","error","formatTime","dateString","formatString","arguments","length","undefined","addHours","parseISO","format","TodayWrapper","TodayItem","TodayInfo","TodayTitle","TodayList","TodayVolume","TodayTime","IconGlass","TodayTools","ButtonChange","ButtonDelete","AddWaterBtn","TodayListModal","isEditing","initialAmount","initialTime","existingRecordId","amount","setAmount","_useState3","_useState4","time","setTime","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","title","displayTime","prevAmount","Number","isNaN","type","onChange","target","step","newValue","startsWith","parseFloat","substring","console","log","onBlur","isoDate","toISOString","slice","_time$split","split","_time$split2","hours","minutes","setHours","currentDate2","newDate","getHours","formattedNewDate","getMinutes","waterData","waterVolume","editWaterThunk","_objectSpread","_id","addWatersThunk","iconsList","edit","delete","glass","add","TodayWaterList","isModalOpen","setIsModalOpen","selectedWaterItem","setSelectedWaterItem","_useState5","_useState6","isDeleteWaterModalOpen","setDeleteWaterModalOpen","dailyWaterList","useSelector","getTodayWater","map","item","openModalToEdit","openModalToDelete","WaterRatioPanelContainer","WaterRange","WaterRangeHeader","WaterRangeContainer","RateContainer","MiddleMark","StartMark","EndMark","AddWaterButton","WaterRatioPanel","readOnly","style","backgroundSize","id","limit","min","max","left","getPosition","onShow","ModalOverlay","Modal","TopDiv","FormulasBox","FormulaBox","LabelText","InputText","RequiredText","CaptionBox","ColoredFormula","CaptionMark","CaptionText","FormBigText","WaterFormInput","RequiredWaterBox","_templateObject19","RequiredWater","_templateObject20","SaveButton","_templateObject21","RadioButton","_templateObject22","DailyNormaBox","_templateObject23","DailyText","_templateObject24","RequiredWaterHeader","_templateObject25","BottomBox","_templateObject26","EditWaterButton","_templateObject27","isOpen","gender","setGender","weight","setWeight","activityTime","setActivityTime","_useState7","_useState8","dailyNorma","setDailyNorma","_useState9","_useState10","willDrink","setWillDrink","weightInputRef","useRef","activityTimeInputRef","willDrinkInputRef","handleGenderChange","selectedGender","calculateDailyNorma","useCallback","userWeight","userActivity","toFixed","formulaResult","key","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","userData","_context","prev","next","getDailyNorma","sent","payload","t0","stop","apply","displayAmount","onMouseDown","currentTarget","button","name","checked","htmlFor","numericValue","replace","onFocus","current","ref","defaultValue","maxLength","onKeyDown","includes","preventDefault","requestData","updateDailyNorma","response","catch","toast","DailyNorma","fetchedDailyNorma","formattedAmount","Section","MounthStatsTable"],"sourceRoot":""}