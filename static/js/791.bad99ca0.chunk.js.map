{"version":3,"file":"static/js/791.bad99ca0.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/MonthStatsTable/MonthStatsTable.styled.js","components/MonthStatsTable/MonthStatsTable.jsx","components/WaterRatioPanel/WaterRatioPanel.styled.js","redux/waterDetails/waterSelectors.js","components/WaterRatioPanel/WaterRatioPanel.jsx","components/DailyNorma/dailyNorma.styled.js","components/DailyNorma/dailyNormaModal.jsx","components/DailyNorma/dailyNorma.jsx","page/HomePage.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\nexport const SectionWrapper = styled.section``;\n","import { SectionWrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <h2>{title}</h2>\n      {children}\n    </SectionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CalendarStyle = styled.div`\n  background-color: var(--bg-color-light-blue);\n  @media screen and (min-width: 320px) {\n    .header {\n      display: flex;\n      justify-content: space-between;\n      padding-bottom: 16px;\n    }\n    .sectionText {\n      font-size: 24px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 30px;\n    }\n    .month {\n      display: grid;\n      grid-template-columns: repeat(5, 1fr);\n      grid-template-rows: repeat(7, 0.5fr);\n      gap: 10px;\n    }\n    .mounthNav {\n      display: flex;\n      align-items: center;\n    }\n\n    .navBtn {\n      display: flex;\n      border: none;\n      background-color: transparent;\n      justify-content: center;\n    }\n\n    .dateText {\n      color: var(--primery-color-blue);\n      width: 130px;\n      text-align: center;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .calendarDayBtn {\n      width: 34px;\n      height: 34px;\n      border-radius: 20px;\n      border: none;\n      background-color: var(--primery-color-white);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .day {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n    .progressWaterText {\n      color: var(--secondary-color-blue);\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n\n    .border-complete {\n      border: 1px solid var(--calendar-color-orange);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .month {\n      grid-template-columns: repeat(10, 1fr);\n      grid-template-rows: repeat(4, 0.5fr);\n    }\n    .sectionText {\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n","import React, { useState } from 'react';\nimport { CalendarStyle } from './MonthStatsTable.styled';\nimport icons from '../../img/icons.svg';\n\nconst MounthStatsTable = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  const daysInMonth = date => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    return new Date(year, month + 1, 0).getDate();\n  };\n\n  const handlePrevMonth = () => {\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1)\n    );\n  };\n\n  const getBorderStyle = percentage => {\n    if (percentage >= 70 && percentage <= 100) {\n      return 'border-complete';\n    }\n  };\n\n  const handleNextMonth = () => {\n    setCurrentDate(\n      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1)\n    );\n  };\n\n  const renderCalendar = () => {\n    const monthDays = [];\n    const totalDays = daysInMonth(currentDate);\n\n    for (let i = 1; i <= totalDays; i += 1) {\n      const value = Math.round(Math.random() * 100);\n\n      monthDays.push(\n        <li key={`day-${i}`} className=\"day\">\n          <button className={`calendarDayBtn ${getBorderStyle(value)}`}>\n            {i}\n          </button>\n          <p className=\"progressWaterText\">{value}%</p>\n        </li>\n      );\n    }\n\n    return monthDays;\n  };\n\n  return (\n    <CalendarStyle>\n      <div className=\"header\">\n        <span className=\"sectionText\">Mounth</span>\n        <div className=\"mounthNav\">\n          <button className=\"navBtn\" onClick={handlePrevMonth}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-left'}></use>\n            </svg>\n          </button>\n          <h2 className=\"dateText\">\n            {currentDate.toLocaleString('en-US', {\n              month: 'long',\n            })}\n            , {currentDate.getFullYear()}\n          </h2>\n          <button className=\"navBtn\" onClick={handleNextMonth}>\n            {' '}\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-right'}></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <ul className=\"month\">{renderCalendar()}</ul>\n    </CalendarStyle>\n  );\n};\n\nexport default MounthStatsTable;\n","import styled from 'styled-components';\n\nexport const WaterRatioPanelContainer = styled.div`\n  width: 280px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px} {\n    width: 704px;\n    gap: 24px;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    gap: 32px;\n  }\n`;\n\nexport const WaterRange = styled.input`\n  &[type='range'] {\n    appearance: none;\n    width: 100%;\n    border-radius: 10px;\n    background-color: #d7e3ff;\n    background-image: linear-gradient(to right, #9ebbff, #9ebbff);\n    background-repeat: no-repeat;\n  }\n\n  &[type='range']:focus {\n    outline: none;\n  }\n\n  &[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8px;\n    animation: 0.2s;\n    border-radius: 10px;\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &[type='range']::-webkit-slider-thumb {\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: solid 1px #407bff;\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n`;\n\nexport const WaterRangeHeader = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  margin-bottom: 16px;\n  color: #407bff;\n`;\nexport const WaterRangeContainer = styled.div`\n  position: relative;\n  height: 102px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n  }\n`;\n\nexport const RateContainer = styled.div`\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const MiddleMark = styled.span`\n  position: absolute;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  text-align: center;\n  margin-bottom: 4px;\n  gap: 4px;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const StartMark = styled.span`\n  transform: translateX(-50%);\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n    color: #9ebbff;\n  }\n`;\n\nexport const EndMark = styled.span`\n  transform: translateX(50%);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const AddWaterButton = styled.button`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  padding: 6px 76px 6px 76px;\n  background-color: #407bff;\n  color: #fff;\n  border: none;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: '0 4px 14px rgba(64, 123, 255, 0.54)';\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    padding: 10px 104px 10px 104px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 178px;\n    height: 44px;\n    padding: 10px 30px 10px 30px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: transparent;\n  stroke: #ffffff;\n`;\n","export const selectTodayWater = state => state.waterDetails.today;\nexport const selectMonthWater = state => state.waterDetails.month;\nexport const selectDailyNorm = state => state.waterDetails.today.dailyNorm;\nexport const selectWaterRate = state => state.waterDetails.today.waterRate;\n","import {\n  Icon,\n  AddWaterButton,\n  StartMark,\n  MiddleMark,\n  RateContainer,\n  EndMark,\n  WaterRange,\n  WaterRangeContainer,\n  WaterRangeHeader,\n  WaterRatioPanelContainer,\n} from './WaterRatioPanel.styled';\n\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\n\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport icons from '../../img/icons.svg';\nimport { selectWaterRate } from 'redux/waterDetails/waterSelectors';\n\nexport const WaterRatioPanel = () => {\n  const waterRate = useSelector(selectWaterRate);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const getBackgroundSize = () => {\n    return {\n      backgroundSize: `${waterRate}%`,\n    };\n  };\n\n  const getPosition = () => {\n    const limit = Math.min(100, Math.max(0, waterRate));\n    return {\n      left: `calc(${limit}% - 2px)`,\n    };\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <WaterRatioPanelContainer>\n      <WaterRangeContainer>\n        <WaterRangeHeader>Today</WaterRangeHeader>\n        <WaterRange\n          type=\"range\"\n          value={waterRate}\n          readOnly={true}\n          style={getBackgroundSize()}\n          aria-label=\"Water range\"\n        />\n        <RateContainer>\n          <StartMark>0%</StartMark>\n          <MiddleMark\n            id=\"waterMark\"\n            style={getPosition()}\n          >{`${waterRate}%`}</MiddleMark>\n          <EndMark>100%</EndMark>\n        </RateContainer>\n      </WaterRangeContainer>\n      <AddWaterButton\n        onClick={() => {\n          openModal();\n        }}\n      >\n        <Icon>\n          <use href={`${icons}#icon-add-button`}></use>\n        </Icon>\n        Add Water\n      </AddWaterButton>\n      {isModalOpen && (\n        <TodayListModal\n          onClose={() => {\n            closeModal();\n          }}\n          onShow={isModalOpen}\n        />\n      )}\n    </WaterRatioPanelContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const GlobalStyles = styled.div`\n  @media screen and (min-width: 768px) {\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    input[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n`;\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Modal = styled.div`\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  @media screen and (max-width: 319px) {\n    padding: 24px 12px;\n    max-width: 280px;\n  }\n  @media screen and (min-width: 320px) {\n    padding: 24px 12px;\n    max-width: 280px;\n    max-height: 816px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n    max-width: 704px;\n    max-height: 696px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 592px;\n    max-height: 712px;\n  }\n`;\nexport const TopDiv = styled.div`\n  position: relative;\n`;\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: large;\n  font-weight: 900;\n  color: var(--primery-color-blue);\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: var(--btn-color-red);\n  }\n`;\nexport const ModalHeader = styled.div`\n  color: var(--primery-color-black);\n  line-height: 32px;\n  font-size: 26px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const FormulasBox = styled.div`\n  margin-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\nexport const FormulaBox = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 24px;\n  }\n`;\nexport const LabelText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  `;\nexport const InputText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n\n  @media screen and (min-width: 320px) {\n    width: 190px;\n  }\n  @media screen and (min-width: 768px) {\n    width: auto;\n  }\n`;\n\n\nexport const CaptionBox = styled.div`\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 10px;\n  padding: 10px;\n  margin-top: 12px;\n  width: 100%;\n\n  @media screen and (min-width: 320px) {\n    height: 100px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n  }\n  @media screen and (min-width: 1440px) {\n    height: 68px;\n  }\n`;\nexport const ColoredFormula = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-left: 4px;\n`;\nexport const CaptionMark = styled.span`\n  color: var(--primery-color-blue);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const CaptionText = styled.div`\n  color: #8F8F8F;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const FormBigText = styled.div`\n  margin-top: 24px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-size: 18px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const WaterFormInput = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 8px;\n`;\nexport const WaterFormInputSpecial = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredWaterBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 16px;\n`;\nexport const RequiredWater = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 900;\n  margin-left: 6px;\n`;\nexport const SaveButton = styled.button`\n  border-radius: 10px;\n  border: none;\n  background-color: var(--primery-color-blue);\n  color: var(--primery-color-white);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  padding: 10px 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: box-shadow 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:focus {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  }\n\n  @media screen and (max-width: 319px) {\n    width: calc( 100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n  @media screen and (min-width: 320px) {\n    width: calc( 100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    font-size: 18px;\n    line-height: 24px;\n    position: absolute;\n    right: 24px;\n    bottom: 32px;\n  }\n`;\nexport const RadioButton = styled.div`\n  input {\n    display: none;\n  }\n\n  margin-top: 16px;\n\n  label {\n    display: inline-block;\n    position: relative;\n    padding-left: 22px;\n    margin-right: 24px;\n    cursor: pointer;\n  }\n\n  label::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 14px;\n    height: 14px;\n    border: 1px solid var(--primery-color-blue);\n    border-radius: 50%;\n    background-color: var(--primery-color-white);\n    box-sizing: border-box;\n  }\n\n  label::after {\n    content: '';\n    position: absolute;\n    left: 4px;\n    top: 7px;\n    width: 6px;\n    height: 6px;\n    border: none;\n    border-radius: 50%;\n    background-color: transparent;\n    box-sizing: border-box;\n  }\n\n  input:checked + label::after {\n    background-color: var(--primery-color-blue);\n  }\n`;\n\n// DAILY NORMA PANEL\n\nexport const DailyNormaBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px 20px;\n  height: 76px;\n  width: 164px;\n  border-radius: 10px;\n  border: 1px solid var(--bg-color-light-blue);\n  box-shadow: 0 4px 8px 0 rgba(158, 187, 255, 0.12);\n\n  @media screen and (max-width: 319px) {\n    position: absolute;\n    left: 20px;\n    top: 80px;\n  } \n\n  @media screen and (min-width: 320px) {\n    position: absolute;\n    left: 20px;\n    top: 80px;\n  }\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    left: 32px;\n    top: 104px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    left: 112px;\n    top: 112px;\n  }\n\n`;\n\nexport const DailyText = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-black);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  width: 124px;\n`;\n\nexport const RequiredWaterHeader = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-blue);\n  font-weight: 900;\n  line-height: 24px;\n  font-size: 24px;\n`;\n\nexport const BottomBox = styled.div`\n  display: flex;\n  position: relative;\n  margin-bottom: 0;\n  margin-top: auto;\n  width: 94px;\n  height: 24px;\n`;\n\nexport const EditWaterButton = styled.button`\n  width: 28px;\n  height: 20px;\n  background-color: transparent;\n  color: var(--secondary-color-blue);\n  border: none;\n  cursor: pointer;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  &:hover {\n    /* Add styling for hover state if needed */\n  }\n`;","import React, { useState, useEffect, useRef, useCallback } from 'react';\n// import { saveDataToBackend, getStoredUserData } from './api';\nimport { getDailyNorma, updateDailyNorma } from '../../redux/auth/thunk';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport '../../index.css';\n\nimport {\n    ModalOverlay,\n    Modal,\n    TopDiv,\n    CloseButton,\n    ModalHeader,\n    FormulasBox,\n    FormulaBox,\n    ColoredFormula,\n    CaptionBox,\n    CaptionText,\n    CaptionMark,\n    FormBigText,\n    RadioButton,\n    RequiredText,\n    InputText,\n    WaterFormInput,\n    RequiredWaterBox,\n    RequiredWater,\n    SaveButton,\n    LabelText,\n  } from './dailyNorma.styled';\n\n\n\nconst DailyNormaModal = ({ isOpen, onClose }) => {\n  const dispatch = useDispatch();\n\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState(0);\n  const [activityTime, setActivityTime] = useState(0);\n  const [dailyNorma, setDailyNorma] = useState(2.0);\n  const [willDrink, setWillDrink] = useState(0);\n\n  const weightInputRef = useRef(null);\n  const activityTimeInputRef = useRef(null);\n  const willDrinkInputRef = useRef(null);\n\n  const handleGenderChange = (selectedGender) => {\n    setGender(selectedGender);\n    calculateDailyNorma();\n  };\n\n  const handleWeightChange = (e) => {\n    const numericValue = e.target.value.replace(/[^0-9]/g, '');\n    setWeight(numericValue);\n  };\n\n  const handleActivityTimeChange = (e) => {\n    const numericValue = e.target.value.replace(/[^0-9]/g, '');\n    setActivityTime(numericValue);\n  };\n\n  const handleWillDrinkChange = (e) => {\n    const numericValue = e.target.value.replace(/[^0-9]/g, '');\n    setWillDrink(numericValue);\n  };\n\n  const handleWeightFocus = () => {\n    if (parseFloat(weight) === 0) {\n      weightInputRef.current.value = '';\n    }\n  };\n\n  const handleActivityTimeFocus = () => {\n    if (parseFloat(activityTime) === 0) {\n      activityTimeInputRef.current.value = '';\n    }\n  };\n\n  const handleWillDrinkFocus = () => {\n    if (parseFloat(willDrink) === 0) {\n      willDrinkInputRef.current.value = '';\n    }\n  };\n\n  const handleWeightBlur = () => {\n    if (weight === '' || parseFloat(weight) === 0) {\n      weightInputRef.current.value = 0;\n      setWeight(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const handleActivityTimeBlur = () => {\n    if (activityTime === '' || parseFloat(activityTime) === 0) {\n      activityTimeInputRef.current.value = 0;\n      setActivityTime(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const handleWillDrinkBlur = () => {\n    if (willDrink === '' || parseFloat(willDrink) === 0) {\n      willDrinkInputRef.current.value = 0;\n      setWillDrink(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const calculateDailyNorma = useCallback(() => {\n    const userWeight = parseFloat(weight);\n    const userActivity = parseFloat(activityTime);\n\n    if (isNaN(userWeight) || isNaN(userActivity)) {\n      setDailyNorma((2.0).toFixed(1));\n      return;\n    }\n\n    const genderWeight = gender === 'woman' ? 0.03 : 0.04;\n    const genderActivity = gender === 'woman' ? 0.4 : 0.6;\n    let formulaResult = userWeight * genderWeight + userActivity * genderActivity;\n\n    formulaResult = formulaResult === 0 ? 2.0 : formulaResult;\n\n    setDailyNorma(formulaResult > 99 ? 99 : formulaResult.toFixed(1));\n  }, [gender, weight, activityTime]);\n\n  useEffect(() => {\n    calculateDailyNorma();\n  }, [calculateDailyNorma]);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userData = await dispatch(getDailyNorma());\n        if (userData.payload) {\n          setGender(userData.payload.gender || 'woman');\n          setWeight(userData.payload.weight || 0);\n          setActivityTime(userData.payload.activityTime || 0);\n          setWillDrink(userData.payload.willDrink || 0);\n          setDailyNorma(isNaN(userData.payload.dailyNorma) ? 2.0.toFixed(1) : userData.payload.dailyNorma);\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n\n    if (isOpen) {\n      fetchData();\n    }\n  }, [isOpen, dispatch]);\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget && e.button === 0) {\n      onClose();\n    }\n  };\n\n  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  const handleSave = () => {\n    const requestData = {\n      gender,\n      weight: parseFloat(weight),\n      activityTime: parseFloat(activityTime),\n      willDrink: parseFloat(willDrink),\n      dailyNorma: parseFloat(dailyNorma),\n    };\n\n    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    dispatch(updateDailyNorma(requestData))\n      .then((response) => {\n        console.log('Data saved to the server:', response);\n        onClose();\n      })\n      .catch((error) => {\n        console.error('Error saving data to the server:', error);\n        toast.error('There was an error saving data. Please try again.');\n      });\n  };\n\n  if (!isOpen) {\n    return null;\n  }\n\n  let displayAmount = dailyNorma;\n  if (dailyNorma >= 99) {\n    displayAmount = \"99+\";\n  }\n\nreturn (\n    <ModalOverlay onMouseDown={handleBackdropClick}>\n      <Modal>\n        <TopDiv>\n          <ModalHeader>My daily norma</ModalHeader>\n          <CloseButton onClick={onClose}>&#10005;</CloseButton>\n        </TopDiv>\n\n        <FormulasBox>\n          <FormulaBox>\n            <LabelText>Female:</LabelText>\n            <ColoredFormula>V=(M*0.03) + (T*0.4)</ColoredFormula>\n          </FormulaBox>\n          <FormulaBox>\n            <LabelText>Male:</LabelText>\n            <ColoredFormula>V=(M*0.04) + (T*0.6)</ColoredFormula>\n          </FormulaBox>\n        </FormulasBox>\n\n        <CaptionBox>\n          <CaptionText>\n            <CaptionMark>*</CaptionMark> V is the volume of the water norm in liters per day, M is your body weight, T is the time\n            of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n          </CaptionText>\n        </CaptionBox>\n\n        <form>\n          <FormBigText>Calculate your rate:</FormBigText>\n\n          <RadioButton>\n            <input\n              type=\"radio\"\n              id=\"woman\"\n              name=\"gender\"\n              value=\"woman\"\n              checked={gender === 'woman'}\n              onChange={() => handleGenderChange('woman')}\n            />\n            <label htmlFor=\"woman\">\n              <p className='label-text'>Female</p>\n            </label>\n\n            <input\n              type=\"radio\"\n              id=\"man\"\n              name=\"gender\"\n              value=\"man\"\n              checked={gender === 'man'}\n              onChange={() => handleGenderChange('man')}\n            />\n            <label htmlFor=\"man\"> <p className='label-text'>Male</p></label>\n          </RadioButton>\n\n          <label>\n            <InputText>Your weight in kilograms:</InputText>\n          </label>\n            <WaterFormInput\n              type=\"text\"\n              value={weight}\n              onChange={handleWeightChange}\n              onFocus={handleWeightFocus}\n              onBlur={handleWeightBlur}\n              ref={weightInputRef}\n              defaultValue={weight === 0 ? '' : weight}\n              maxLength={5}\n\n              onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n            />\n\n          <label>\n            <InputText>The time of active participation in sports or other activities with a high physical load in hours:</InputText>\n          </label>\n            <WaterFormInput\n              type=\"text\"\n              value={activityTime}\n              onChange={handleActivityTimeChange}\n              onFocus={handleActivityTimeFocus}\n              onBlur={handleActivityTimeBlur}\n              ref={activityTimeInputRef}\n              defaultValue={activityTime === 0 ? '' : activityTime}\n              maxLength={5}\n\n              onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n            />\n\n          <RequiredWaterBox>\n            <RequiredText>The required amount of water in liters per day:</RequiredText>\n            <RequiredWater>{displayAmount} L</RequiredWater>\n          </RequiredWaterBox>\n\n          <FormBigText>Write down how much water you will drink:</FormBigText>\n          <WaterFormInput\n            type=\"text\"\n            value={willDrink}\n            onChange={handleWillDrinkChange}\n            onFocus={handleWillDrinkFocus}\n            onBlur={handleWillDrinkBlur}\n            ref={willDrinkInputRef}\n            defaultValue={willDrink === 0 ? '' : willDrink}\n            \n            maxLength={5}\n            \n            onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n          />\n          \n\n          <SaveButton type=\"button\" onClick={handleSave}>Save</SaveButton>\n        </form>\n      </Modal>\n    </ModalOverlay>\n  );\n};\n\nexport default DailyNormaModal;","import React, { useState, useEffect } from 'react';\nimport Modal from './dailyNormaModal';\nimport { getDailyNorma } from '../../redux/auth/thunk';\nimport { useDispatch } from 'react-redux';\nimport {\n  DailyNormaBox,\n  DailyText,\n  RequiredWaterHeader,\n  BottomBox,\n  EditWaterButton,\n} from './dailyNorma.styled';\n\nexport const DailyNorma = () => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [dailyNorma, setDailyNorma] = useState(2.0);\n\n  useEffect(() => {\n    dispatch(getDailyNorma())\n      .then((userData) => {\n        const fetchedDailyNorma = userData && userData.dailyNorma;\n        const formattedAmount = (parseFloat(fetchedDailyNorma) || 2.0).toFixed(1);\n\n        setDailyNorma(formattedAmount);\n        // setDailyNorma((fetchedDailyNorma).toFixed(1));\n        \n      })\n      .catch((error) => {\n        console.error('Error getting dailyNorma:', error);\n        setDailyNorma(2.0);\n      });\n  }, [dispatch]);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  let displayAmount = dailyNorma;\n  if (dailyNorma >= 99) {\n    displayAmount = \"99+\";\n  }\n\n  return (\n    <DailyNormaBox>\n      <DailyText>My daily norma</DailyText>\n      <BottomBox>\n        <RequiredWaterHeader>{displayAmount} L</RequiredWaterHeader>\n        <EditWaterButton onClick={handleModalOpen}>Edit</EditWaterButton>\n      </BottomBox>\n\n      <Modal isOpen={isModalOpen} onClose={handleModalClose} />\n    </DailyNormaBox>\n  );\n};\n\n// export default DailyNorma;\n","import MounthStatsTable from 'components/MonthStatsTable/MonthStatsTable';\nimport { Section } from 'components/Section/Section';\nimport { WaterRatioPanel } from 'components/WaterRatioPanel/WaterRatioPanel';\nimport { DailyNorma } from 'components/DailyNorma/dailyNorma';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Section title=\"Water Tracker\">\n        <DailyNorma />\n        <WaterRatioPanel />\n        <MounthStatsTable />\n      </Section>\n    </>\n  );\n};\n\nexport default HomePage;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["SectionWrapper","styled","_templateObject","_taggedTemplateLiteral","Section","_ref","title","children","_jsxs","_jsx","CalendarStyle","_useState","useState","Date","_useState2","_slicedToArray","currentDate","setCurrentDate","getBorderStyle","percentage","className","onClick","getFullYear","getMonth","width","height","href","icons","toLocaleString","month","monthDays","totalDays","date","year","getDate","daysInMonth","i","value","Math","round","random","push","concat","renderCalendar","WaterRatioPanelContainer","WaterRange","_templateObject2","WaterRangeHeader","_templateObject3","WaterRangeContainer","_templateObject4","RateContainer","_templateObject5","MiddleMark","_templateObject6","StartMark","_templateObject7","EndMark","_templateObject8","AddWaterButton","_templateObject9","Icon","_templateObject10","selectWaterRate","state","waterDetails","today","waterRate","WaterRatioPanel","useSelector","isModalOpen","setIsModalOpen","type","readOnly","style","backgroundSize","id","limit","min","max","left","getPosition","TodayListModal","onClose","onShow","ModalOverlay","Modal","TopDiv","CloseButton","ModalHeader","FormulasBox","FormulaBox","LabelText","InputText","RequiredText","_templateObject11","CaptionBox","_templateObject12","ColoredFormula","_templateObject13","CaptionMark","_templateObject14","CaptionText","_templateObject15","FormBigText","_templateObject16","WaterFormInput","_templateObject17","RequiredWaterBox","_templateObject18","_templateObject19","RequiredWater","_templateObject20","SaveButton","_templateObject21","RadioButton","_templateObject22","DailyNormaBox","_templateObject23","DailyText","_templateObject24","RequiredWaterHeader","_templateObject25","BottomBox","_templateObject26","EditWaterButton","_templateObject27","isOpen","dispatch","useDispatch","gender","setGender","_useState3","_useState4","weight","setWeight","_useState5","_useState6","activityTime","setActivityTime","_useState7","_useState8","dailyNorma","setDailyNorma","_useState9","_useState10","willDrink","setWillDrink","weightInputRef","useRef","activityTimeInputRef","willDrinkInputRef","handleGenderChange","selectedGender","calculateDailyNorma","useCallback","userWeight","parseFloat","userActivity","isNaN","toFixed","formulaResult","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","userData","_context","prev","next","getDailyNorma","sent","payload","t0","console","error","stop","apply","arguments","displayAmount","onMouseDown","target","currentTarget","button","name","checked","onChange","htmlFor","numericValue","replace","onFocus","current","onBlur","ref","defaultValue","maxLength","onKeyDown","includes","preventDefault","requestData","updateDailyNorma","then","response","log","catch","toast","DailyNorma","fetchedDailyNorma","formattedAmount","_Fragment","MounthStatsTable","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}