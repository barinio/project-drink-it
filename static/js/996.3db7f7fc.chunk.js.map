{"version":3,"file":"static/js/996.3db7f7fc.chunk.js","mappings":"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","sources":["components/Header/Header.styled.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/menu-style.js","components/Setting/Setting.styled.js","components/Setting/Setting.jsx","components/UserMenu/UserMenu.jsx","components/Header/Header.jsx","components/Layout/Layout.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HeaderSection = styled.header`\n  margin-bottom: 24px;\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 80px;\n  }\n`;\n\nexport const PrivatNav = styled.div``;\n\nexport const HeaderContainer = styled.div`\n  margin: auto;\n  padding: 8px 20px 0;\n\n  nav {\n    display: flex;\n    justify-content: space-between;\n    color: var(--primery-color-blue);\n    align-items: center;\n  }\n\n  @media (min-width: 768px) {\n    padding: 16px 32px 0;\n  }\n  @media (min-width: 1440px) {\n    padding: 12px 112px 0;\n  }\n`;\n\nexport const NavLinkLogo = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.17;\n  text-transform: uppercase;\n\n  span {\n    width: 58px;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n// import { Button } from '@mui/material';\n\nexport const NavLinkSignin = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  line-height: 1.25;\n  span {\n    margin-right: 8px;\n  }\n`;\n\nexport const UserContainer = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 1.25;\n  span {\n    margin-right: 8px;\n  }\n`;\n\nexport const UserSvg = styled.svg`\n  fill: none;\n  stroke: var(--primery-color-black);\n`;\n\nexport const Avatar = styled.img`\n  margin-left: 8px;\n`;\n\nexport const ArrowDownSvg = styled.svg`\n  fill: var(--primery-color-black);\n  stroke: none;\n  margin-left: 4px;\n\n  &:is(:hover, :focus) {\n    fill: var(--primery-color-blue);\n  }\n`;\nexport const SettingSvg = styled.svg`\n  fill: none;\n  stroke: var(--primery-color-blue);\n`;\n","export const menuStyle = {\n  overflow: 'visible',\n  mt: 1.5,\n  '& .MuiPaper-root': {\n    borderRadius: '10px',\n    p: '16px',\n  },\n  '& .MuiMenu-list': {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '16px',\n    padding: '0',\n  },\n  '& .MuiMenuItem-root': {\n    p: 0,\n    gap: '8px',\n    minHeight: '20px',\n    height: '20px',\n    lineHeight: '1.25',\n    color: 'var(--primery-color-blue)',\n    '&:hover': {\n      color: 'var(--primery-color-black)',\n      backgroundColor: 'white',\n    },\n    '&:hover svg': { stroke: 'var(--primery-color-black)' },\n  },\n};\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.8);\n  width: 100%;\n  height: 100%;\n  opacity: 1;\n  visibility: visible;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 1;\n  overflow-y: auto;\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nexport const WrapperModal = styled.div`\n  position: relative;\n  top: 0;\n  width: 100%;\n  min-height: 112%;\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 40px;\n  left: 50%;\n  min-width: 280px;\n  padding: 32px 12px;\n  border-radius: 10px;\n  transform: translate(-50%, 0) scale(1);\n  background-color: var(--primery-color-white);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  h3 {\n    color: var(--primery-color-black);\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.11;\n    margin-bottom: 8px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 32px 24px;\n    min-width: 704px;\n  }\n`;\nexport const CaptionBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  h2 {\n    color: var(--primery-color-black);\n    font-size: 26px;\n    font-weight: 500;\n    line-height: 1.23;\n  }\n\n  button {\n    display: flex;\n    background: none;\n    border: none;\n    &:is(:hover, :focus) svg {\n      stroke: var(--primery-color-black);\n    }\n  }\n\n  svg {\n    fill: none;\n    stroke: var(--primery-color-blue);\n  }\n`;\n\nexport const PhotoBlock = styled.div`\n  div {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 24px;\n  }\n\n  button {\n    display: flex;\n    background: none;\n    border: none;\n    gap: 8px;\n    color: var(--primery-color-blue);\n\n    &:is(:hover, :focus) {\n      color: var(--primery-color-black);\n    }\n    &:is(:hover, :focus) svg {\n      stroke: var(--primery-color-black);\n    }\n  }\n  svg {\n    fill: none;\n    stroke: var(--primery-color-blue);\n  }\n`;\nexport const FormStyle = styled.form``;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 24px;\n  & > div {\n    min-width: 392px;\n    width: 392px;\n  }\n  @media (min-width: 768px) {\n    width: 392px;\n  }\n  @media (min-width: 1440px) {\n    flex-direction: row;\n    width: 1008px;\n    align-items: flex-end;\n  }\n`;\n\nexport const GenderPart = styled.div`\n  & > div {\n    display: flex;\n    gap: 24px;\n  }\n  margin-bottom: 24px;\n\n  @media (min-width: 1440px) {\n    margin-bottom: 52px;\n\n    h3 {\n      margin-bottom: 12px;\n    }\n  }\n`;\n\nexport const RadioLabel = styled.div`\n  label {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    color: var(--primery-color-black);\n    font-size: 16px;\n    line-height: 1.25;\n  }\n`;\n\nexport const InputHidden = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n  & + label svg {\n    fill: none;\n  }\n  &:checked + label svg {\n    fill: var(--primery-color-blue);\n  }\n`;\n\nexport const ContainerUserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const UserInfoBox = styled.div`\n  input {\n    padding: 12px 10px;\n\n    border-radius: 6px;\n    border: 1px solid #d7e3ff;\n    line-height: 1.25;\n    font-size: 16px;\n    color: var(--primery-color-blue);\n    width: 100%;\n\n    &:is(:focus-visible) {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: var(--primery-color-blue);\n    }\n  }\n`;\n\nexport const PasswordBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  & > div {\n    display: flex;\n    flex-direction: column;\n  }\n  h3 {\n    margin-bottom: 0;\n  }\n  h4 {\n    color: var(--primery-color-black);\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.25;\n    margin-bottom: 8px;\n  }\n\n  button {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    right: 10px;\n    top: 12px;\n    background: var(--primery-color-white);\n    text-transform: uppercase;\n    border: none;\n  }\n  svg {\n    fill: none;\n    stroke: var(--primery-color-black);\n    &:is(:hover, :focus, :active) {\n      stroke: var(--primery-color-blue);\n    }\n  }\n`;\n\nexport const PasswordInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  input {\n    padding: 12px 10px;\n    border-radius: 6px;\n    border: 1px solid var(--btn-color-light-blue);\n    line-height: 1.25;\n    font-size: 16px;\n    color: var(--secondary-color-blue);\n    &:is(:focus-visible) {\n      outline: none;\n    }\n    &::placeholder {\n      color: var(--secondary-color-blue);\n    }\n  }\n`;\n\nexport const BtnSettingSave = styled.div`\n  button {\n    width: 100%;\n    padding: 8px 30px;\n\n    border-radius: 10px;\n    background: var(--primery-color-blue);\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n    color: var(--primery-color-white);\n    font-weight: 500;\n    line-height: 1.25;\n    border: none;\n\n    @media (min-width: 768px) {\n      width: 100px;\n      padding: 10px 30px;\n\n      font-size: 18px;\n      line-height: 1.33;\n    }\n  }\n\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Backdrop,\n  WrapperModal,\n  Modal,\n  CaptionBlock,\n  PhotoBlock,\n  FormStyle,\n  FormWrapper,\n  GenderPart,\n  RadioLabel,\n  InputHidden,\n  ContainerUserInfo,\n  UserInfoBox,\n  PasswordBox,\n  BtnSettingSave,\n  PasswordInputContainer,\n} from './Setting.styled';\n\nimport icons from '../../img/icons.svg';\nimport settingAvatar from '../../img/setting-avatar.png';\nimport { useEffect, useState } from 'react';\n\nconst Setting = ({ closeModal }) => {\n  const [isChecked, setIsChecked] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email('Invalid email address'),\n    password: Yup.string().required('Password is requird'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      console.log('onSubmit', values);\n    },\n    validationSchema: validationSchema,\n  });\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  useEffect(() => {\n    const onEsc = e => e.key === 'Escape' && closeModal();\n\n    window.addEventListener('keydown', onEsc);\n    return () => window.removeEventListener('keydown', onEsc);\n  }, [closeModal]);\n\n  return (\n    <>\n      <Backdrop className=\"backdrop\">\n        <WrapperModal>\n          <Modal>\n            <CaptionBlock>\n              <h2>Setting</h2>\n              <button type=\"button\" onClick={closeModal}>\n                <svg width=\"24\" height=\"24\">\n                  <use href={icons + '#icon-close-setting'}></use>\n                </svg>\n              </button>\n            </CaptionBlock>\n            <PhotoBlock>\n              <h3>Your photo</h3>\n              <div>\n                <img src={settingAvatar} alt=\"avatarName\" width={80} height={80} />\n                <button type=\"button\">\n                  <svg width=\"16\" height=\"16\">\n                    <use href={icons + '#icon-upload'}></use>\n                  </svg>\n                  Upload a photo\n                </button>\n              </div>\n            </PhotoBlock>\n\n            <FormStyle onSubmit={formik.handleSubmit}>\n              <FormWrapper>\n                <div>\n                  <GenderPart>\n                    <h3>Your gender identity</h3>\n                    <div>\n                      <RadioLabel>\n                        <InputHidden\n                          type=\"radio\"\n                          id=\"woman\"\n                          name=\"gender\"\n                          value=\"woman\"\n                          checked={!isChecked}\n                          onChange={() => setIsChecked(!isChecked)}\n                        />\n                        <label htmlFor=\"woman\">\n                          <svg width=\"14\" height=\"14\">\n                            <use href={icons + '#icon-checkbox'}></use>\n                          </svg>\n                          Woman\n                        </label>\n                      </RadioLabel>\n\n                      <RadioLabel>\n                        <InputHidden\n                          type=\"radio\"\n                          id=\"man\"\n                          name=\"gender\"\n                          value=\"man\"\n                          checked={isChecked}\n                          onChange={() => setIsChecked(!isChecked)}\n                        />\n                        <label htmlFor=\"man\">\n                          <svg width=\"14\" height=\"14\">\n                            <use href={icons + '#icon-checkbox'}></use>\n                          </svg>\n                          Man\n                        </label>\n                      </RadioLabel>\n                    </div>\n                  </GenderPart>\n                  <ContainerUserInfo>\n                    <UserInfoBox>\n                      <h3>Your name</h3>\n                      <input type=\"text\" placeholder=\"Name\" name=\"user-name\" />\n                    </UserInfoBox>\n                    <UserInfoBox>\n                      <h3>E-mail</h3>\n                      <input type=\"text\" placeholder=\"E-mail\" name=\"e-mail\" />\n                    </UserInfoBox>\n                  </ContainerUserInfo>\n                </div>\n\n                <PasswordBox>\n                  <h3>Password</h3>\n                  <div>\n                    <h4>Outdated password:</h4>\n                    <PasswordInputContainer>\n                      <button type=\"button\" onClick={togglePasswordVisibility}>\n                        <svg width=\"16\" height=\"16\">\n                          <use\n                            href={icons + (showPassword ? '#icon-opend-eye' : '#icon-closed-eye')}\n                          ></use>\n                        </svg>\n                      </button>\n                      <input\n                        type={showPassword ? 'text' : 'password'}\n                        placeholder=\"Password\"\n                        name=\"password\"\n                      />\n                    </PasswordInputContainer>\n                  </div>\n                  <div>\n                    <h4>New Password:</h4>\n                    <PasswordInputContainer>\n                      <button type=\"button\" onClick={togglePasswordVisibility}>\n                        <svg width=\"16\" height=\"16\">\n                          <use\n                            href={icons + (showPassword ? '#icon-opend-eye' : '#icon-closed-eye')}\n                          ></use>\n                        </svg>\n                      </button>\n                      <input\n                        type={showPassword ? 'text' : 'password'}\n                        placeholder=\"Password\"\n                        name=\"password\"\n                      />\n                    </PasswordInputContainer>\n                  </div>\n                  <div>\n                    <h4>Repeat new password:</h4>\n                    <PasswordInputContainer>\n                      <button type=\"button\" onClick={togglePasswordVisibility}>\n                        <svg width=\"16\" height=\"16\">\n                          <use\n                            href={icons + (showPassword ? '#icon-opend-eye' : '#icon-closed-eye')}\n                          ></use>\n                        </svg>\n                      </button>\n                      <input\n                        type={showPassword ? 'text' : 'password'}\n                        placeholder=\"Password\"\n                        name=\"password\"\n                      />\n                    </PasswordInputContainer>\n                  </div>\n                </PasswordBox>\n              </FormWrapper>\n              <BtnSettingSave>\n                <button type=\"submit\">Save</button>\n              </BtnSettingSave>\n            </FormStyle>\n          </Modal>\n        </WrapperModal>\n      </Backdrop>\n    </>\n  );\n};\n\nexport default Setting;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button } from '@mui/material';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport { selectAuthAuthenticated } from 'redux/auth/auth.selectors';\n\nimport {\n  UserContainer,\n  NavLinkSignin,\n  UserSvg,\n  Avatar,\n  ArrowDownSvg,\n  SettingSvg,\n} from './UserMenu.styled';\nimport icons from '../../img/icons.svg';\nimport avatar from '../../img/avatar.png';\n\nimport { menuStyle } from './menu-style';\nimport Setting from 'components/Setting/Setting';\nimport { logoutThunk } from 'redux/auth/thunk';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n\n  const authenticated = useSelector(selectAuthAuthenticated);\n  const [isOpenSetting, setIsOpenSetting] = useState(false);\n  const UserName = 'David';\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const onLogout = () => {\n    dispatch(logoutThunk());\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n    if (e.target.classList.contains('logout')) {\n      onLogout();\n      return;\n    }\n    setIsOpenSetting(true);\n  };\n\n  const closeModal = () => {\n    setIsOpenSetting(false);\n  };\n\n  useEffect(() => {\n    document.body.style.overflow = isOpenSetting ? 'hidden' : '';\n  }, [isOpenSetting]);\n  return (\n    <>\n      {authenticated ? (\n        <>\n          <UserContainer to=\"signin\">\n            {UserName}\n            <Avatar src={avatar} alt={UserName} width=\"28\" height=\"28\" />\n\n            <Button\n              id=\"basic-button\"\n              aria-controls={open ? 'basic-menu' : undefined}\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n              onClick={handleClick}\n              sx={{\n                padding: '0',\n                minWidth: '16px',\n              }}\n            >\n              <ArrowDownSvg width=\"16\" height=\"16\">\n                <use href={icons + '#icon-arrow-down'}></use>\n              </ArrowDownSvg>\n            </Button>\n            <Menu\n              anchorEl={anchorEl}\n              id=\"account-menu\"\n              open={open}\n              onClose={handleClose}\n              onClick={handleClose}\n              sx={menuStyle}\n              transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n              anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n            >\n              <MenuItem className=\"setting\" onClick={handleClose}>\n                <SettingSvg width=\"16\" height=\"16\">\n                  <use href={icons + '#icon-cog-tooth'}></use>\n                </SettingSvg>\n                Settings\n              </MenuItem>\n              <MenuItem className=\"logout\" onClick={handleClose}>\n                <SettingSvg width=\"16\" height=\"16\">\n                  <use href={icons + '#icon-log-out'}></use>\n                </SettingSvg>\n                Log out\n              </MenuItem>\n            </Menu>\n          </UserContainer>\n          {isOpenSetting && <Setting closeModal={closeModal} />}\n        </>\n      ) : (\n        <NavLinkSignin to=\"signin\">\n          <span>Sign in</span>\n          <UserSvg width=\"28\" height=\"28\">\n            <use href={icons + '#icon-user'}></use>\n          </UserSvg>\n        </NavLinkSignin>\n      )}\n    </>\n  );\n};\n\nexport default UserMenu;\n","import { useSelector } from 'react-redux';\nimport {\n  HeaderSection,\n  HeaderContainer,\n  NavLinkLogo,\n  PrivatNav,\n} from './Header.styled';\nimport { selectAuthAuthenticated } from 'redux/auth/auth.selectors';\nimport UserMenu from 'components/UserMenu/UserMenu';\n\nimport icons from '../../img/icons.svg';\n\nexport const Header = () => {\n  const authenticated = useSelector(selectAuthAuthenticated);\n\n  return (\n    <>\n      <HeaderSection>\n        <HeaderContainer>\n          <nav>\n            {authenticated ? (\n              <PrivatNav>\n                <NavLinkLogo to=\"home\">\n                  <svg width=\"40\" height=\"48\">\n                    <use href={icons + '#icon-logo'}></use>\n                  </svg>\n                  Tracker of water\n                </NavLinkLogo>\n              </PrivatNav>\n            ) : (\n              <>\n                <NavLinkLogo to=\"/\">\n                  <svg width=\"40\" height=\"48\">\n                    <use href={icons + '#icon-logo'}></use>\n                  </svg>\n                  <span>Tracker of water</span>\n                </NavLinkLogo>\n              </>\n            )}\n            <UserMenu />\n          </nav>\n        </HeaderContainer>\n      </HeaderSection>\n    </>\n  );\n};\n","import { Header } from 'components/Header/Header';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst Layout = () => {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n"],"names":["HeaderSection","styled","_templateObject","_taggedTemplateLiteral","PrivatNav","_templateObject2","HeaderContainer","_templateObject3","NavLinkLogo","NavLink","_templateObject4","NavLinkSignin","UserContainer","UserSvg","Avatar","ArrowDownSvg","_templateObject5","SettingSvg","_templateObject6","menuStyle","overflow","mt","borderRadius","p","display","flexDirection","gap","padding","minHeight","height","lineHeight","color","backgroundColor","stroke","Backdrop","WrapperModal","Modal","CaptionBlock","PhotoBlock","FormStyle","FormWrapper","_templateObject7","GenderPart","_templateObject8","RadioLabel","_templateObject9","InputHidden","_templateObject10","ContainerUserInfo","_templateObject11","UserInfoBox","_templateObject12","PasswordBox","_templateObject13","PasswordInputContainer","_templateObject14","BtnSettingSave","_templateObject15","_ref","closeModal","_useState","useState","_useState2","_slicedToArray","isChecked","setIsChecked","_useState3","_useState4","showPassword","setShowPassword","validationSchema","Yup","name","required","email","password","formik","useFormik","initialValues","onSubmit","values","console","log","togglePasswordVisibility","useEffect","onEsc","e","key","window","addEventListener","removeEventListener","_jsx","_Fragment","children","className","_jsxs","type","onClick","width","href","icons","src","settingAvatar","alt","handleSubmit","id","value","checked","onChange","htmlFor","placeholder","dispatch","useDispatch","authenticated","useSelector","selectAuthAuthenticated","isOpenSetting","setIsOpenSetting","UserName","anchorEl","setAnchorEl","open","Boolean","handleClose","target","classList","contains","logoutThunk","document","body","style","to","Button","undefined","event","currentTarget","sx","minWidth","Menu","onClose","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","Setting","Header","UserMenu","Suspense","fallback","Outlet"],"sourceRoot":""}