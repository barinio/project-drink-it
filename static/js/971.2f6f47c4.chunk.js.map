{"version":3,"file":"static/js/971.2f6f47c4.chunk.js","mappings":"wSAEaA,EAAWC,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mCAIrBC,EAAcH,EAAAA,QAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0mBA+B3BG,EAAYL,EAAAA,QAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sJAStBK,EAAYP,EAAAA,QAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uIAQpBO,EAAcT,EAAAA,QAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,0U,2gBCpDxBS,EAAUX,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qjBAiCpBU,EAAeZ,EAAAA,QAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uwBAwCzBO,EAAcT,EAAAA,QAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2UAmBxBW,EAAcb,EAAAA,QAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4FAO3BY,EAAYd,EAAAA,QAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uJAWtBa,EAAcf,EAAAA,QAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,mfA2BxBe,EAAejB,EAAAA,QAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,0MAWzBiB,EAAenB,EAAAA,QAAAA,EAAQoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,uIAQvBmB,EAAWrB,EAAAA,QAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,gGASrBqB,EAAQvB,EAAAA,QAAAA,EAAQwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,4OAahBuB,EAAQzB,EAAAA,QAAAA,IAAU0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,0KASlByB,EAAW3B,EAAAA,QAAAA,OAAa4B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,qbAmBxB2B,EAAO7B,EAAAA,QAAAA,IAAU8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,iFAMjB6B,EAAU/B,EAAAA,QAAAA,IAAUgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,kCAIpB+B,EAAYjC,EAAAA,QAAAA,MAAYkC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,iqBAiCxBiC,EAAQnC,EAAAA,QAAAA,MAAYoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,0xBAuCpBmC,EAAcrC,EAAAA,QAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,uZAuBxBqC,EAAgBvC,EAAAA,QAAAA,OAAawC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,8gB,sHCvT7BuC,EAAgBzC,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,01DAwF1BwC,EAAiB1C,EAAAA,QAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wiCAiD3ByC,EAAqB3C,EAAAA,QAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mD,8BCrHrC,SAAS0C,EAAaC,GAC3B,IAAMC,GAAQC,EAAAA,EAAAA,GAAOF,GAGrB,OAFAC,EAAME,QAAQ,GACdF,EAAMG,SAAS,EAAG,EAAG,EAAG,GACjBH,CACT,CCLO,SAASI,EAAWL,GACzB,IAAMC,GAAQC,EAAAA,EAAAA,GAAOF,GACfM,EAAQL,EAAMM,WAGpB,OAFAN,EAAMO,YAAYP,EAAMQ,cAAeH,EAAQ,EAAG,GAClDL,EAAMG,SAAS,GAAI,GAAI,GAAI,KACpBH,CACT,CCOO,SAASS,EAAkBC,EAAUC,GAAS,IAAAC,EAC7CC,GAAYZ,EAAAA,EAAAA,GAAOS,EAASI,OAC5BC,GAAUd,EAAAA,EAAAA,GAAOS,EAASM,KAE5BC,GAAYJ,GAAaE,EACvBG,EAAUD,GAAYJ,GAAaE,EACnCI,EAAcF,EAAWF,EAAUF,EACzCM,EAAYhB,SAAS,EAAG,EAAG,EAAG,GAE9B,IAAIiB,EAAoB,QAAhBR,EAAU,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASS,YAAI,IAAAR,EAAAA,EAAI,EAC5B,IAAKQ,EAAM,MAAO,GACdA,EAAO,IACTA,GAAQA,EACRH,GAAYA,GAKd,IAFA,IAAMI,EAAQ,IAENF,GAAeD,GACrBG,EAAMC,MAAKrB,EAAAA,EAAAA,GAAOkB,IAClBA,EAAYjB,QAAQiB,EAAYI,UAAYH,GAC5CD,EAAYhB,SAAS,EAAG,EAAG,EAAG,GAGhC,OAAOc,EAAWI,EAAMG,UAAYH,CACtC,CAGA,I,gKC/DaI,GAA0B,SAAAC,GAAK,OAAIA,EAAMC,WAAWtB,KAAM,EAC1DuB,GAA4B,SAAAF,GAAK,OAAIA,EAAMC,WAAWE,SAAU,E,iCC0K7E,GA7JwB,WACtB,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAIC,MAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAnDX,EAAWc,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,GAAiBC,EAAAA,GAAAA,IAAYb,IAC7BD,GAAac,EAAAA,GAAAA,IAAYhB,IAC/BiB,QAAQC,IAAIhB,GAEZ,IAAMiB,GAAIC,EAAAA,GAAAA,IAAW1B,GAEf2B,GAAWC,EAAAA,GAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,GAAAA,GAAcL,GACzB,GAAG,CAACE,EAAUF,IAEd,IAAMM,EAAoB,SAAAC,GACxBhB,GAAe,SAAAiB,GAAQ,OAAI,IAAIpB,KAAKoB,EAAS5C,cAAe4C,EAAS9C,WAAa6C,EAAO,GAC3F,EAcME,EAA2B,SAAAtD,GAAI,OAAI8C,EAAAA,GAAAA,IAAW,IAAIb,KAAKjC,EAAKI,SAAS,EAAG,EAAG,EAAG,IAAK,EA4DzF,OACEmD,EAAAA,GAAAA,MAAC3D,EAAa,CAAA4D,SAAA,EACZD,EAAAA,GAAAA,MAAA,OAAKE,UAAU,SAAQD,SAAA,EACrBE,EAAAA,GAAAA,KAAA,QAAMD,UAAU,cAAaD,SAAC,WAC9BD,EAAAA,GAAAA,MAAA,OAAKE,UAAU,WAAUD,SAAA,EACvBE,EAAAA,GAAAA,KAAA,UAAQD,UAAU,SAASE,QAAS,kBAAMR,GAAmB,EAAE,EAACK,UAC9DE,EAAAA,GAAAA,KAAA,OAAKE,MAAM,KAAKC,OAAO,KAAIL,UACzBE,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,0BAGvBL,EAAAA,GAAAA,KAAA,MAAID,UAAU,WAAUD,UAAEQ,EAAAA,GAAAA,IAAO5C,EAAa,iBAC9CsC,EAAAA,GAAAA,KAAA,UAAQD,UAAU,SAASE,QAAS,kBAAMR,EAAkB,EAAE,EAACK,UAC7DD,EAAAA,GAAAA,MAAA,OAAKK,MAAM,KAAKC,OAAO,KAAIL,SAAA,EACzBE,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,sBAA4B,eAKtDtB,GACCiB,EAAAA,GAAAA,KAAC5D,EAAkB,CAAA0D,UACjBE,EAAAA,GAAAA,KAACO,GAAAA,EAAM,OAGTV,EAAAA,GAAAA,MAAA,MAAIE,UAAU,QAAOD,SAAA,EACnBE,EAAAA,GAAAA,KAACQ,EAAAA,GAAO,CACNC,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,SAEdE,GAAG,OACHC,KAAMC,QAAQlC,GACdmC,SAAUnC,EACVoC,QAAS,kBAAMnC,EAAgB,KAAK,EACpCoC,WAAY,CAAEC,UAAW,GACzBC,mBAAoB,CAAEC,MAAO,IAAKC,KAAM,KAAMxB,SAE7CjB,GAlGW,SAAA0C,GACpB,IAAMC,EAAW3C,EAAa4C,YACxBC,EAAU,IAAInD,KAAKb,EAAYX,cAAeW,EAAYb,WAAY2E,GACtEG,EAAwB/B,EAAyB8B,GAEvD,IAAKH,GAAwB,IAAhBA,EAAKK,OAChB,OACE/B,EAAAA,GAAAA,MAAC1D,EAAc,CAAA2D,SAAA,EACbE,EAAAA,GAAAA,KAAA,MAAAF,UAAKQ,EAAAA,GAAAA,IAAOoB,EAAS,kBACrB1B,EAAAA,GAAAA,KAAA,KAAAF,SAAG,oBACHE,EAAAA,GAAAA,KAAA,UAAQD,UAAU,kBAAkBE,QAAS,kBAAMnB,EAAgB,KAAK,EAACgB,UACvED,EAAAA,GAAAA,MAAA,OAAKK,MAAM,KAAKC,OAAO,KAAIL,SAAA,EACzBE,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,4BAAkC,YAO/D,IAAMwB,EAAYN,EAAKO,MACrB,SAAAC,GAAI,OAAInC,EAAyB,IAAIrB,KAAKwD,EAAKC,QAAUL,CAAqB,IAEhF,OAAIE,GAEAhC,EAAAA,GAAAA,MAAC1D,EAAc,CAAA2D,SAAA,EACbE,EAAAA,GAAAA,KAAA,KAAGD,UAAU,cAAaD,UAAEQ,EAAAA,GAAAA,IAAOoB,EAAS,aAC5C7B,EAAAA,GAAAA,MAAA,KAAGE,UAAU,kBAAiBD,SAAA,CAAC,iBAChBD,EAAAA,GAAAA,MAAA,QAAME,UAAU,mBAAkBD,SAAA,CAAE+B,EAAUI,WAAW,WAExEpC,EAAAA,GAAAA,MAAA,KAAGE,UAAU,kBAAiBD,SAAA,CAAC,iCACE,KAC/BD,EAAAA,GAAAA,MAAA,QAAME,UAAU,mBAAkBD,SAAA,CAAE+B,EAAUK,QAAQC,QAAQ,GAAG,WAEnEtC,EAAAA,GAAAA,MAAA,KAAGE,UAAU,kBAAiBD,SAAA,CAAC,gCACDE,EAAAA,GAAAA,KAAA,QAAMD,UAAU,mBAAkBD,SAAE+B,EAAUO,aAE5EpC,EAAAA,GAAAA,KAAA,UAAQD,UAAU,kBAAkBE,QAAS,kBAAMnB,EAAgB,KAAK,EAACgB,UACvED,EAAAA,GAAAA,MAAA,OAAKK,MAAM,KAAKC,OAAO,KAAIL,SAAA,EACzBE,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,4BAAkC,aAO3DR,EAAAA,GAAAA,MAAC1D,EAAc,CAAA2D,SAAA,EACbE,EAAAA,GAAAA,KAAA,MAAAF,UAAKQ,EAAAA,GAAAA,IAAOoB,EAAS,kBACrB1B,EAAAA,GAAAA,KAAA,KAAAF,SAAG,oBACHE,EAAAA,GAAAA,KAAA,UAAQD,UAAU,kBAAkBE,QAAS,kBAAMnB,EAAgB,KAAK,EAACgB,UACvED,EAAAA,GAAAA,MAAA,OAAKK,MAAM,KAAKC,OAAO,KAAIL,SAAA,EACzBE,EAAAA,GAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAQ,4BAAkC,WAMjE,CA0C2BgC,CAAcnE,KAzGpB,SAAA5B,GACnB,IAAAgG,EARqB,SAAAhG,GACrB,MAAO,CACLe,MAAOhB,EAAaC,GACpBiB,IAAKZ,EAAWL,GAEpB,CAGyBiG,CAAejG,GAEtC,OAAOU,EAAkB,CAAEK,MAFdiF,EAALjF,MAE0BE,IAFhB+E,EAAH/E,KAGjB,CAuGSiF,CAAa9E,GAAa+E,KAAI,SAAAnG,GAAI,IAAAoG,EAAA,OACjC7C,EAAAA,GAAAA,MAAA,MAAqCE,UAAU,MAAKD,SAAA,EAClDE,EAAAA,GAAAA,KAAA,UAAQD,UAAU,iBAAiBE,QAAS,SAAA0C,GAAC,OAAI7D,EAAgB6D,EAAEC,OAAO,EAAC9C,UACxEQ,EAAAA,GAAAA,IAAOhE,EAAM,QAEhBuD,EAAAA,GAAAA,MAAA,KAAGE,UAAU,oBAAmBD,SAAA,EAM3B,QALF4C,EAAAxE,EACE4D,MACC,SAAAC,GAAI,OACFnC,EAAyB,IAAIrB,KAAKwD,EAAKC,QACvCpC,EAAyBtD,EAAK,WACjC,IAAAoG,OAAA,EALFA,EAMGR,QAAQC,QAAQ,KAAM,EAAE,UAXvB7B,EAAAA,GAAAA,IAAOhE,EAAM,cAcjB,SAMjB,ECzKauG,GAAmB,SAAA5E,GAAK,OAAIA,EAAM6E,aAAaC,KAAM,EAErDC,GAAmB,SAAA/E,GAAK,OAAIA,EAAM6E,aAAaG,UAAW,EAC1DC,GAAsB,SAAAjF,GAAK,OAAIA,EAAM6E,aAAa1E,SAAU,EAC5D+E,GAAgB,SAAAlF,GAAK,OAAIA,EAAM6E,aAAaM,OAAQ,EACpDC,GAAc,SAAApF,GAAK,OAAIA,EAAM6E,aAAaQ,UAAW,E,gCCYrDC,GAAmB,SAAHC,GAAwC,IAAlCvC,EAAOuC,EAAPvC,QAASwC,EAAQD,EAARC,SAAUL,EAAOI,EAAPJ,QAC9C/D,GAAWC,EAAAA,GAAAA,MAYjB,OACEO,EAAAA,GAAAA,MAAA6D,GAAAA,SAAA,CAAA5D,SAAA,EACEE,EAAAA,GAAAA,KAAC5F,GAAAA,GAAO,CAAC6F,QAASgB,KAClBpB,EAAAA,GAAAA,MAACxF,GAAAA,GAAY,CAAC0F,UAAU,oBAAmBD,SAAA,EACzCD,EAAAA,GAAAA,MAAC3F,GAAAA,GAAW,CAAA4F,SAAA,EACVE,EAAAA,GAAAA,KAAA,MAAAF,SAAI,kBACJE,EAAAA,GAAAA,KAAC1F,GAAAA,GAAW,CAAC2F,QAASgB,EAAQnB,UAC5BE,EAAAA,GAAAA,KAACzF,GAAAA,GAAS,CAAAuF,UACRE,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAuD,OAAKtD,EAAAA,EAAK,2BAIzBL,EAAAA,GAAAA,KAAA,OAAAF,UACED,EAAAA,GAAAA,MAACrG,GAAAA,GAAQ,CAAAsG,SAAA,EACPE,EAAAA,GAAAA,KAAChG,GAAAA,GAAS,CAAC+F,UAAU,yBAAwBD,SAAC,gDAC9CD,EAAAA,GAAAA,MAAC/F,GAAAA,GAAS,CAAAgG,SAAA,EACRE,EAAAA,GAAAA,KAACpG,GAAAA,GAAW,CAACmG,UAAU,qBAAqBE,QA1BnC,WACnBhB,QAAQC,IAAIkE,GACZ,IAAMQ,EAAa,CACjB/C,GAAI4C,EACJzB,IAAKoB,GAEP/D,GAASwE,EAAAA,GAAAA,IAAiBD,IAAaE,MAAK,SAAAvC,GACrCA,EAAKwC,OAAO9C,GACnB,GACF,EAiB8EnB,SAAC,YACnEE,EAAAA,GAAAA,KAACpG,GAAAA,GAAW,CAACqG,QAASgB,EAAQnB,SAAC,wBAO7C,E,WCpDakE,GAAevK,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIzBsK,GAAYxK,EAAAA,QAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oKAQrBuK,GAAYzK,EAAAA,QAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oDAKtBwK,GAAa1K,EAAAA,QAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sOAatByK,GAAS3K,EAAAA,QAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,iDAIjB0K,GAAY5K,EAAAA,QAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+CAKrB2K,GAAc7K,EAAAA,QAAAA,EAAQkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,qIAQtB4K,GAAY9K,EAAAA,QAAAA,EAAQoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,4GAOpB6K,GAAY/K,EAAAA,QAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,wJAWtB8K,GAAahL,EAAAA,QAAAA,IAAUwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,0CAKvB+K,GAAejL,EAAAA,QAAAA,OAAa0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,oSAkB5BgL,GAAelL,EAAAA,QAAAA,OAAa4B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,sRAkB5BiL,GAAcnL,EAAAA,QAAAA,OAAa8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,giBA8B3BkL,GAAgBpL,EAAAA,QAAAA,IAAUgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,mDC7G1BmL,GAAiB,SAAHtB,GAOpB,IANLvC,EAAOuC,EAAPvC,QACA8D,EAASvB,EAATuB,UACAC,EAAaxB,EAAbwB,cACAC,EAAWzB,EAAXyB,YACAC,EAAgB1B,EAAhB0B,iBACA9B,EAAOI,EAAPJ,QAEA/E,GAA4BC,EAAAA,EAAAA,UAAS0G,GAAiB,GAAExG,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjD8G,EAAM3G,EAAA,GAAE4G,EAAS5G,EAAA,GACxBG,GAAyBL,EAAAA,EAAAA,UACvByG,GAAaE,GAAc3E,EAAAA,GAAAA,IAAO,IAAI/B,KAAK0G,GAAc,UAAW3E,EAAAA,GAAAA,IAAO,IAAI/B,KAAQ,UACxFK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAFM0G,EAAKzG,EAAA,GAAE0G,EAAO1G,EAAA,GAGfS,GAAWC,EAAAA,GAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMgG,EAAgB,SAAA5C,GACL,WAAXA,EAAE6C,MACJvE,GAEJ,EAGA,OADAwE,OAAOC,iBAAiB,UAAWH,GAC5B,WACLE,OAAOE,oBAAoB,UAAWJ,EACxC,CACF,GAAG,CAACtE,KAgBJ1B,EAAAA,EAAAA,YAAU,WACJwF,GACFK,EAAUJ,GAAiB,GAC3BM,GAAQM,EAAAA,GAAAA,IAAWX,EAAa,YAEhCG,EAAU,GACVE,GAAQhF,EAAAA,GAAAA,IAAO,IAAI/B,KAAQ,UAE/B,GAAG,CAACwG,EAAWC,EAAeC,IAE9B,IA2DMY,EAAQd,EAAY,mCAAqC,YAEzDe,EAAcf,GAAaE,GAAcW,EAAAA,GAAAA,IAAWX,GAAe,GAEzE,OACEpF,EAAAA,GAAAA,MAAA6D,GAAAA,SAAA,CAAA5D,SAAA,EACEE,EAAAA,GAAAA,KAAC5F,GAAAA,GAAO,CAAC6F,QAfS,WAChB8E,EACF9D,KAGFA,IACAmE,EAAU,GACZ,KASIvF,EAAAA,GAAAA,MAACxF,GAAAA,GAAY,CAAC0F,UAAU,mBAAkBD,SAAA,EACxCD,EAAAA,GAAAA,MAAC3F,GAAAA,GAAW,CAAA4F,SAAA,EACVE,EAAAA,GAAAA,KAAA,MAAAF,SAAK+F,KACL7F,EAAAA,GAAAA,KAAC1F,GAAAA,GAAW,CAAC2F,QAASgB,EAAQnB,UAC5BE,EAAAA,GAAAA,KAACzF,GAAAA,GAAS,CAAAuF,UACRE,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAuD,OAAKtD,EAAAA,EAAK,2BAIzBL,EAAAA,GAAAA,KAAA,OAAAF,UACED,EAAAA,GAAAA,MAACrF,GAAAA,GAAW,CAAAsF,SAAA,CACTiF,IACClF,EAAAA,GAAAA,MAACnF,GAAAA,GAAY,CAAAoF,SAAA,EACXE,EAAAA,GAAAA,KAACwE,GAAS,CAAA1E,UACRE,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAuD,OAAKtD,EAAAA,EAAK,oBAErBL,EAAAA,GAAAA,KAACsE,GAAW,CAAAxE,SAAEkF,EAAa,GAAArB,OAAMqB,EAAa,OAAQ,kBACtDhF,EAAAA,GAAAA,KAACuE,GAAS,CAAAzE,SAAEmF,EAAW,GAAAtB,OAAMmC,GAAgB,SAGjD9F,EAAAA,GAAAA,KAAA,MAAAF,SAAKiF,EAAY,wBAA0B,qBAC3ClF,EAAAA,GAAAA,MAAC/E,GAAAA,GAAQ,CAAAgF,SAAA,EACPE,EAAAA,GAAAA,KAACpF,GAAAA,GAAY,CAACmF,UAAU,kBAAiBD,SAAC,sBAC1CD,EAAAA,GAAAA,MAAA,OAAAC,SAAA,EACEE,EAAAA,GAAAA,KAAC5E,GAAAA,GAAQ,CAAC6E,QA/GD,WAAH,OAASmF,GAAU,SAAAW,GAAU,OAAKA,EAAa,EAAIA,EAAa,GAAK,CAAC,GAAG,EA+G7CjG,UAChCE,EAAAA,GAAAA,KAAC1E,GAAAA,GAAI,CAAAwE,UACHE,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAuD,OAAKtD,EAAAA,EAAK,kCAGvBL,EAAAA,GAAAA,KAAC9E,GAAAA,GAAK,CAAC6E,UAAU,0BAAyBD,UACxCD,EAAAA,GAAAA,MAAC7E,GAAAA,GAAK,CAAA8E,SAAA,CAAEkG,OAAOC,MAAMd,GAAU,IAAG,GAAAxB,OAAMwB,GAAS,YAEnDnF,EAAAA,GAAAA,KAAC5E,GAAAA,GAAQ,CAAC6E,QA3HD,WACrBmF,GAAU,SAAAW,GAAU,OAAIA,EAAa,EAAE,GACzC,EAyHgDjG,UAChCE,EAAAA,GAAAA,KAAC1E,GAAAA,GAAI,CAAAwE,UACHE,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAuD,OAAKtD,EAAAA,EAAK,0BAK3BR,EAAAA,GAAAA,MAACrE,GAAAA,GAAO,CAAAsE,SAAA,EACNE,EAAAA,GAAAA,KAACpF,GAAAA,GAAY,CAACmF,UAAU,kBAAiBD,SAAC,qBAC1CE,EAAAA,GAAAA,KAACtE,GAAAA,GAAS,CACRwK,KAAK,OACLC,MAAOd,EACPe,SAAU,SAAAzD,GAAC,OAAI2C,EAAQ3C,EAAEC,OAAOuD,MAAM,EACtCxI,KAAK,YAGTkC,EAAAA,GAAAA,MAAA,OAAAC,SAAA,EACEE,EAAAA,GAAAA,KAAA,MAAAF,SAAI,wCACJE,EAAAA,GAAAA,KAACpE,GAAAA,GAAK,CACJsK,KAAK,SACLC,MAAOH,OAAOC,MAAMd,GAAU,IAAG,GAAAxB,OAAMwB,GACvCiB,SA1Ia,SAAAzD,GACzB,IAAI0D,EAAW1D,EAAEC,OAAOuD,MAEpBE,EAASC,WAAW,MAAQD,EAASzE,OAAS,IAChDyE,EAAWE,WAAWF,EAASG,UAAU,KAE3CpB,EAAUmB,WAAWF,GACvB,EAoIcI,OAAQ,kBAAMrB,GAAU,SAAAW,GAAU,OAAIA,GAAcf,GAAiB,CAAC,GAAC,QAG3EnF,EAAAA,GAAAA,MAAC/D,GAAAA,GAAW,CAAAgE,SAAA,EACVD,EAAAA,GAAAA,MAAA,QAAAC,SAAA,CAAOkG,OAAOC,MAAMd,GAAO,OAAAxB,OAAYwB,GAAS,SAChDnF,EAAAA,GAAAA,KAAChE,GAAAA,GAAa,CAACiE,QA7HN,WACnB,IAAIyG,EACJ,GAAI3B,EACF2B,EAAUzB,EACN,IAAI1G,KAAK0G,GAAa0B,cAAcC,MAAM,EAAG,KAC7C,IAAIrI,MAAOoI,mBACV,GAAItB,EAAO,CAChB,IAAM3H,EAAc,IAAIa,KACxBsI,EAAyBxB,EAAMyB,MAAM,KAAIC,GAAAtI,EAAAA,EAAAA,GAAAoI,EAAA,GAAlCG,EAAKD,EAAA,GAAEE,EAAOF,EAAA,GACrBrJ,EAAYhB,SAASsK,EAAOC,GAC5BP,EAAUhJ,EAAYiJ,cAAcC,MAAM,EAAG,IAE7C,IAAMM,EAAe,IAAI3I,KAAKmI,GAExBS,EAAU,IAAI5I,KAAK2I,GACzBC,EAAQzK,SAASwK,EAAaE,WAAa,GAY3CV,EATES,EAAQpK,cACR,KACC,KAAOoK,EAAQtK,WAAa,IAAI+J,OAAO,GACxC,KACC,IAAMO,EAAQrJ,WAAW8I,OAAO,GACjC,KACC,IAAMO,EAAQC,YAAYR,OAAO,GAClC,KACC,IAAMO,EAAQE,cAAcT,OAAO,EAExC,CAEA,IAAMU,EAAY,CAChBC,YAAapC,EACbqC,KAAMd,GAGJ3B,EACF1F,GAASoI,EAAAA,GAAAA,KAAcC,EAAAA,GAAAA,GAAC,CAAE1F,IAAKoB,EAASvC,GAAIqE,GAAqBoC,KAAcxD,MAAK,SAAAvC,GAC7EA,EAAKwC,OAAO9C,GACnB,IAEA5B,GAASsI,EAAAA,GAAAA,GAAeL,IAAYxD,MAAK,SAAAvC,GAClCA,EAAKwC,QACR9C,IACAmE,EAAU,GAEd,IAEFnE,GACF,EA6EiDnB,SAAC,sBAOpD,ECtLM8H,GAAY,CAChBC,KAAK,GAADlE,OAAKtD,EAAAA,EAAK,cACdyH,OAAO,GAADnE,OAAKtD,EAAAA,EAAK,gBAChB0H,MAAM,GAADpE,OAAKtD,EAAAA,EAAK,eACf2H,IAAI,GAADrE,OAAKtD,EAAAA,EAAK,cAGF4H,GAAiB,WAC5B,IAAM5I,GAAWC,EAAAA,GAAAA,MACjBjB,GAAsCC,EAAAA,EAAAA,WAAS,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA9C6J,EAAW1J,EAAA,GAAE2J,EAAc3J,EAAA,GAClCG,GAAkDL,EAAAA,EAAAA,UAAS,MAAKM,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzDyJ,EAAiBxJ,EAAA,GAAEyJ,EAAoBzJ,EAAA,GAC9C0J,GAA0DhK,EAAAA,EAAAA,WAAS,GAAMiK,GAAA9J,EAAAA,EAAAA,GAAA6J,EAAA,GAAlEE,EAAsBD,EAAA,GAAEE,EAAuBF,EAAA,GAC9CG,GAAc1J,EAAAA,GAAAA,IAAY6D,IAA1B6F,UACFC,GAAgB3J,EAAAA,GAAAA,IAAYkE,IAC5BE,GAAUpE,EAAAA,GAAAA,IAAYmE,KAE5B5D,EAAAA,EAAAA,YAAU,WACRF,GAASuJ,EAAAA,GAAAA,MACX,GAAG,CAACvJ,IAiBJ,OACEQ,EAAAA,GAAAA,MAACmE,GAAY,CAAAlE,SAAA,EACXE,EAAAA,GAAAA,KAACmE,GAAU,CAAArE,SAAC,UACX6I,GACC3I,EAAAA,GAAAA,KAAC6E,GAAa,CAAA/E,UACZE,EAAAA,GAAAA,KAACO,GAAAA,EAAM,OAGTP,EAAAA,GAAAA,KAACqE,GAAS,CAAAvE,SACe,KAAb,OAAT4I,QAAS,IAATA,OAAS,EAATA,EAAW9G,cAA8BiH,IAAdH,GAC1B1I,EAAAA,GAAAA,KAACoE,GAAM,CAAAtE,SAAC,yEAEC,OAAT4I,QAAS,IAATA,OAAS,EAATA,EAAWjG,KAAI,SAAAV,GAAI,OACjBlC,EAAAA,GAAAA,MAACoE,GAAS,CAAAnE,SAAA,EACRD,EAAAA,GAAAA,MAACqE,GAAS,CAAApE,SAAA,EACRE,EAAAA,GAAAA,KAACwE,GAAS,CAAA1E,UACRE,EAAAA,GAAAA,KAAA,OAAKI,KAAMwH,GAAUG,WAEvBlI,EAAAA,GAAAA,MAACyE,GAAW,CAAAxE,SAAA,CAAEiC,EAAKwF,YAAY,UAC/BvH,EAAAA,GAAAA,KAACuE,GAAS,CAAAzE,UAAE8F,EAAAA,GAAAA,IAAW7D,EAAKyF,YAE9B3H,EAAAA,GAAAA,MAAC4E,GAAU,CAAA3E,SAAA,EACTE,EAAAA,GAAAA,KAAC0E,GAAY,CAACzE,QAAS,kBA3Bf,SAAA8B,GACtBsG,EAAqBtG,GACrBoG,GAAe,EACjB,CAwB6CW,CAAgB/G,EAAK,EAACjC,UACjDE,EAAAA,GAAAA,KAAA,OAAAF,UACEE,EAAAA,GAAAA,KAAA,OAAKI,KAAMwH,GAAUC,YAGzB7H,EAAAA,GAAAA,KAAC2E,GAAY,CAAC1E,QAAS,kBArCb,SAAA8B,GACxBsG,EAAqBtG,GACrB0G,GAAwB,EAC1B,CAkC6CM,CAAkBhH,EAAK,EAACjC,UACnDE,EAAAA,GAAAA,KAAA,OAAAF,UACEE,EAAAA,GAAAA,KAAA,OAAKI,KAAMwH,GAAUE,kBAhBb/F,EAAKlB,GAoBT,OAKpBhB,EAAAA,GAAAA,MAAC+E,GAAW,CAAC3E,QArDM,WACrBoI,EAAqB,MACrBF,GAAe,EACjB,EAkDyCrI,SAAA,EACnCE,EAAAA,GAAAA,KAAA,OAAAF,UACEE,EAAAA,GAAAA,KAAA,OAAKI,KAAMwH,GAAUI,QACjB,eAGPQ,IACCxI,EAAAA,GAAAA,KAACuD,GAAgB,CACftC,QAAS,kBAAMwH,GAAwB,EAAM,EAC7ChF,SAA2B,OAAjB2E,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBvH,GAC7BuC,QAASA,IAGZ8E,IACClI,EAAAA,GAAAA,KAAC8E,GAAc,CACbE,cAAgC,OAAjBoD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBb,YAClCtC,YAA8B,OAAjBmD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBZ,KAChCzC,UAAiC,OAAtBqD,EACXlD,iBAAmC,OAAjBkD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBvH,GACrCI,QAAS,kBAAMkH,GAAe,EAAM,EACpC/E,QAASA,MAKnB,EC9Ha4F,GAA2BvP,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8UAoBrCsP,GAAaxP,EAAAA,QAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0vBAoCzBuP,GAAmBzP,EAAAA,QAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4IAQ3BwP,GAAsB1P,EAAAA,QAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uLAYhCyP,GAAgB3P,EAAAA,QAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wGAO1B0P,GAAa5P,EAAAA,QAAAA,KAAWgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,iXAqBxB2P,GAAY7P,EAAAA,QAAAA,KAAWkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,4UAmBvB4P,GAAU9P,EAAAA,QAAAA,KAAWoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,iVAmBrB6P,GAAiB/P,EAAAA,QAAAA,OAAasB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,ujBA4B9B2B,GAAO7B,EAAAA,QAAAA,IAAUwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,qFCvJjB8P,GAAkB,WAC7B,IAAMC,GAAY1K,EAAAA,GAAAA,IAAYqE,IACxBJ,GAAajE,EAAAA,GAAAA,IAAYgE,IAC/B3E,GAAsCC,EAAAA,EAAAA,WAAS,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA9C6J,EAAW1J,EAAA,GAAE2J,EAAc3J,EAAA,GAE5BmL,EAAeC,KAAKC,MAAO,IAAM5G,EAAcyG,GA0B/CI,EAASH,EAAe,GAAKA,GAAgB,IAEnD,OACE9J,EAAAA,GAAAA,MAACmJ,GAAwB,CAAAlJ,SAAA,EACvBD,EAAAA,GAAAA,MAACsJ,GAAmB,CAAArJ,SAAA,EAClBE,EAAAA,GAAAA,KAACkJ,GAAgB,CAAApJ,SAAC,WAClBE,EAAAA,GAAAA,KAACiJ,GAAU,CACT/C,KAAK,QACLC,MAAOH,OAAOC,MAAM0D,GAAa,IAASA,EAC1CI,UAAU,EACVC,MAjCFhE,OAAOC,MAAM0D,GACR,CAAEM,eAAe,GAADtG,OAAK,IAEvB,CACLsG,eAAe,GAADtG,OAAKgG,EAAY,MA8B3B,aAAW,iBAEb9J,EAAAA,GAAAA,MAACuJ,GAAa,CAAAtJ,SAAA,EACZE,EAAAA,GAAAA,KAACsJ,GAAS,CAAAxJ,SAAC,OACVgK,IACC9J,EAAAA,GAAAA,KAACqJ,GAAU,CAACxI,GAAG,YAAYmJ,MA/BjB,WAClB,IAAME,EAAQN,KAAKO,IAAI,IAAKP,KAAKQ,IAAI,EAAGT,IACxC,MAAO,CACLU,KAAK,QAAD1G,OAAUuG,EAAK,YAEvB,CA0B4CI,GAAcxK,SAAA,GAAA6D,OAAKgG,EAAY,QAEnE3J,EAAAA,GAAAA,KAACuJ,GAAO,CAAAzJ,SAAC,gBAGbD,EAAAA,GAAAA,MAAC2J,GAAc,CACbvJ,QAAS,WA7BbkI,GAAe,EA+BX,EAAErI,SAAA,EAEFE,EAAAA,GAAAA,KAAC1E,GAAI,CAAAwE,UACHE,EAAAA,GAAAA,KAAA,OAAKI,KAAI,GAAAuD,OAAKtD,EAAAA,EAAK,wBACd,eAGR6H,IACClI,EAAAA,GAAAA,KAAC8E,GAAc,CACb7D,QAAS,WApCfkH,GAAe,EAsCT,EACAoC,OAAQrC,MAKlB,E,4CC9EasC,I,QAbe/Q,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wQAaVF,EAAAA,QAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gMAWzB8Q,GAAQhR,EAAAA,QAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mmBA6BlB+Q,GAASjR,EAAAA,QAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iCAGnBW,GAAcb,EAAAA,QAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wUAkB3BO,GAAcT,EAAAA,QAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,qJAOxBgR,GAAclR,EAAAA,QAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oGAOxBiR,GAAanR,EAAAA,QAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,8HAQvBkR,GAAYpR,EAAAA,QAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,qJAOtBmR,GAAYrR,EAAAA,QAAAA,IAAUwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,0KAQtBoR,GAAetR,EAAAA,QAAAA,IAAU0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,0RAezBqR,GAAavR,EAAAA,QAAAA,IAAU4B,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,uVAkBvBsR,GAAiBxR,EAAAA,QAAAA,IAAU8B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,yKAQ3BuR,GAAczR,EAAAA,QAAAA,KAAWgC,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,oJAOzBwR,GAAc1R,EAAAA,QAAAA,IAAUkC,KAAAA,IAAAhC,EAAAA,EAAAA,GAAA,kIAOxByR,GAAc3R,EAAAA,QAAAA,IAAUoC,KAAAA,IAAAlC,EAAAA,EAAAA,GAAA,0KAQxB0R,GAAiB5R,EAAAA,QAAAA,MAAYsC,KAAAA,IAAApC,EAAAA,EAAAA,GAAA,2TA4B7B2R,IAdwB7R,EAAAA,QAAAA,MAAYwC,KAAAA,IAAAtC,EAAAA,EAAAA,GAAA,4TAcjBF,EAAAA,QAAAA,IAAU8R,KAAAA,IAAA5R,EAAAA,EAAAA,GAAA,0EAK7B6R,GAAgB/R,EAAAA,QAAAA,IAAUgS,KAAAA,IAAA9R,EAAAA,EAAAA,GAAA,yKAQ1B+R,GAAajS,EAAAA,QAAAA,OAAakS,KAAAA,IAAAhS,EAAAA,EAAAA,GAAA,wlCAkD1BiS,GAAcnS,EAAAA,QAAAA,IAAUoS,KAAAA,IAAAlS,EAAAA,EAAAA,GAAA,o0BAgDxBmS,GAAgBrS,EAAAA,QAAAA,IAAUsS,KAAAA,IAAApS,EAAAA,EAAAA,GAAA,iVAmB1BqS,GAAYvS,EAAAA,QAAAA,IAAUwS,KAAAA,IAAAtS,EAAAA,EAAAA,GAAA,sKAStBuS,GAAsBzS,EAAAA,QAAAA,IAAU0S,KAAAA,IAAAxS,EAAAA,EAAAA,GAAA,oJAQhCyS,GAAY3S,EAAAA,QAAAA,IAAU4S,KAAAA,IAAA1S,EAAAA,EAAAA,GAAA,uFAOtB2S,GAAkB7S,EAAAA,QAAAA,OAAa8S,KAAAA,IAAA5S,EAAAA,EAAAA,GAAA,kPCnE5C,GArQ0B,SAAH6J,GAQd,IAPLvC,EAAOuC,EAAPvC,QACAuL,EAAUhJ,EAAVgJ,WACAC,EAAUjJ,EAAViJ,WACAC,EAAgBlJ,EAAhBkJ,iBACAC,EAAcnJ,EAAdmJ,eACAC,EAAapJ,EAAboJ,cAGMvN,GAFAmE,EAANqJ,QAEiBvN,EAAAA,GAAAA,OAEjBjB,GAA4BC,EAAAA,EAAAA,UAASkO,GAAWhO,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzCyO,EAAMtO,EAAA,GAAEuO,EAASvO,EAAA,GACxBG,GAA4BL,EAAAA,EAAAA,UAASmO,GAAW7N,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzCqO,EAAMpO,EAAA,GAAEqO,EAASrO,EAAA,GACxB0J,GAAwChK,EAAAA,EAAAA,UAASoO,GAAiBnE,GAAA9J,EAAAA,EAAAA,GAAA6J,EAAA,GAA3D4E,EAAY3E,EAAA,GAAE4E,EAAe5E,EAAA,GACpC6E,GAAoC9O,EAAAA,EAAAA,UAASqO,GAAeU,GAAA5O,EAAAA,EAAAA,GAAA2O,EAAA,GAArDnL,EAAUoL,EAAA,GAAEC,EAAaD,EAAA,GAChCE,GAAkCjP,EAAAA,EAAAA,UAASsO,GAAcY,GAAA/O,EAAAA,EAAAA,GAAA8O,EAAA,GAAlDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,GAAiBC,EAAAA,EAAAA,QAAO,MACxBC,GAAuBD,EAAAA,EAAAA,QAAO,MAC9BE,GAAoBF,EAAAA,EAAAA,QAAO,MAE3BG,EAAqB,SAACC,GAC1BjB,EAAUiB,GACVC,GACF,EAoEMA,GAAsBC,EAAAA,EAAAA,cAAY,WACtC,IAAMC,EAAa5H,WAAWyG,GACxBoB,EAAe7H,WAAW2G,GAEhC,GAAIjH,MAAMkI,IAAelI,MAAMmI,GAC7Bd,EAAe,GAAKnL,QAAQ,QAD9B,CAKA,IAEIkM,EAAgBF,GAFY,UAAXrB,EAAqB,IAAO,KAEDsB,GADd,UAAXtB,EAAqB,GAAM,IAKlDQ,GAFAe,EAAkC,IAAlBA,EAAsB,EAAMA,GAEd,GAAK,GAAKA,EAAclM,QAAQ,GAR9D,CASF,GAAG,CAAC2K,EAAQE,EAAQE,KAEpB3N,EAAAA,EAAAA,YAAU,WACR0O,GACF,GAAG,CAACA,KAEJ1O,EAAAA,EAAAA,YAAU,WACR,IAAMgG,EAAgB,SAAA5C,GACL,WAAXA,EAAE6C,MACJvE,GAEJ,EAGA,OADAwE,OAAOC,iBAAiB,UAAWH,GAC5B,WACLE,OAAOE,oBAAoB,UAAWJ,EACxC,CACF,GAAG,CAACtE,IAEN,IAMMqN,EAAU,eAAAC,GAAAC,EAAAA,GAAAA,GAAAC,KAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACXH,EAAc,CAElB7B,OAAQA,EACRE,OAAQzG,WAAWyG,GACnBE,aAAc3G,WAAW2G,GACzBO,UAAWlH,WAAuB,IAAZkH,GACtBxL,WAAYsE,WAAwB,IAAbtE,IAEzB5C,GAAS0P,EAAAA,GAAAA,GAAiBJ,IAC1B1N,IAAU,wBAAA2N,EAAAI,OAAA,GAAAN,EAAA,KACX,kBAXe,OAAAH,EAAAU,MAAA,KAAAC,UAAA,KAalB,OACIlP,EAAAA,GAAAA,KAACwK,GAAY,CAAC2E,YApBY,SAAAxM,GACtBA,EAAEC,SAAWD,EAAEyM,eAA8B,IAAbzM,EAAE0M,QACpCpO,GAEJ,EAgBiDnB,UAC7CD,EAAAA,GAAAA,MAAC4K,GAAK,CAAC1K,UAAU,yBAAwBD,SAAA,EACvCD,EAAAA,GAAAA,MAAC6K,GAAM,CAAA5K,SAAA,EACLE,EAAAA,GAAAA,KAAC9F,GAAW,CAAC6F,UAAU,wBAAuBD,SAAC,oBAC/CE,EAAAA,GAAAA,KAAC1F,GAAW,CAAC2F,QAASgB,EAAQnB,SAAC,eAGjCD,EAAAA,GAAAA,MAAC8K,GAAW,CAAA7K,SAAA,EACVD,EAAAA,GAAAA,MAAC+K,GAAU,CAAA9K,SAAA,EACTE,EAAAA,GAAAA,KAAC6K,GAAS,CAAC9K,UAAU,wBAAuBD,SAAC,aAC7CE,EAAAA,GAAAA,KAACiL,GAAc,CAAAnL,SAAC,6BAElBD,EAAAA,GAAAA,MAAC+K,GAAU,CAAA9K,SAAA,EACTE,EAAAA,GAAAA,KAAC6K,GAAS,CAAC9K,UAAU,wBAAuBD,SAAC,WAC7CE,EAAAA,GAAAA,KAACiL,GAAc,CAAAnL,SAAC,gCAIpBE,EAAAA,GAAAA,KAACgL,GAAU,CAAAlL,UACTD,EAAAA,GAAAA,MAACsL,GAAW,CAAArL,SAAA,EACVE,EAAAA,GAAAA,KAACkL,GAAW,CAAApL,SAAC,MAAe,0NAKhCD,EAAAA,GAAAA,MAAA,QAAAC,SAAA,EACEE,EAAAA,GAAAA,KAACoL,GAAW,CAACrL,UAAU,wBAAuBD,SAAC,0BAE/CD,EAAAA,GAAAA,MAAC+L,GAAW,CAAA9L,SAAA,EACVE,EAAAA,GAAAA,KAAA,SACEkG,KAAK,QACLrF,GAAG,QACHyO,KAAK,SACLnJ,MAAM,QACNoJ,QAAoB,UAAXzC,EACT1G,SAAU,kBAAM2H,EAAmB,QAAQ,KAE7C/N,EAAAA,GAAAA,KAAA,SAAOwP,QAAQ,QAAO1P,UACpBE,EAAAA,GAAAA,KAAC6K,GAAS,CAAC9K,UAAU,wBAAuBD,SAAC,cAG/CE,EAAAA,GAAAA,KAAA,SACEkG,KAAK,QACLrF,GAAG,MACHyO,KAAK,SACLnJ,MAAM,MACNoJ,QAAoB,QAAXzC,EACT1G,SAAU,kBAAM2H,EAAmB,MAAM,KAE3C/N,EAAAA,GAAAA,KAAA,SAAOwP,QAAQ,MAAK1P,UAClBE,EAAAA,GAAAA,KAAC6K,GAAS,CAAC9K,UAAU,wBAAuBD,SAAC,eAIjDE,EAAAA,GAAAA,KAAA,SAAAF,UACEE,EAAAA,GAAAA,KAAC8K,GAAS,CAAC/K,UAAU,wBAAuBD,SAAC,iCAE7CE,EAAAA,GAAAA,KAACqL,GAAc,CACbnF,KAAK,OACLC,MAAO6G,EACP5G,SArLiB,SAACzD,GAC1B,IAAI8M,EAAe9M,EAAEC,OAAOuD,MAAMuJ,QAAQ,YAAa,IACnDD,GAAgB,MAClBA,EAAe,KAEjBxC,EAAUwC,EACZ,EAgLUE,QA9JgB,WACG,IAAvBpJ,WAAWyG,KACbW,EAAeiC,QAAQzJ,MAAQ,GAEnC,EA2JUM,OA7Ie,WACR,KAAXuG,GAAwC,IAAvBzG,WAAWyG,KAC9BW,EAAeiC,QAAQzJ,MAAQ,EAC/B8G,EAAU,IAEZgB,GACF,EAwIU4B,IAAKlC,EACLmC,aAAyB,IAAX9C,EAAe,GAAKA,EAClC+C,UAAW,EAEXC,UAAW,SAACrN,GAAC,MAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKsN,SAAStN,EAAEuN,MAAQvN,EAAEwN,gBAAgB,KAGpFnQ,EAAAA,GAAAA,KAAA,SAAAF,UACEE,EAAAA,GAAAA,KAAC8K,GAAS,CAAC/K,UAAU,wBAAuBD,SAAC,0GAE7CE,EAAAA,GAAAA,KAACqL,GAAc,CACbnF,KAAK,OACLC,MAAO+G,EACP9G,SA7LuB,SAACzD,GAChC,IAAI8M,EAAe9M,EAAEC,OAAOuD,MAAMuJ,QAAQ,YAAa,IACnDD,GAAgB,KAClBA,EAAe,IAEjBtC,EAAgBsC,EAClB,EAwLUE,QAxKsB,WACG,IAA7BpJ,WAAW2G,KACbW,EAAqB+B,QAAQzJ,MAAQ,GAEzC,EAqKUM,OArJqB,WACR,KAAjByG,GAAoD,IAA7B3G,WAAW2G,KACpCW,EAAqB+B,QAAQzJ,MAAQ,EACrCgH,EAAgB,IAElBc,GACF,EAgJU4B,IAAKhC,EACLiC,aAA+B,IAAjB5C,EAAqB,GAAKA,EACxC6C,UAAW,EAEXC,UAAW,SAACrN,GAAC,MAAI,CAAC,IAAK,IAAK,IAAK,KAAKsN,SAAStN,EAAEuN,MAAQvN,EAAEwN,gBAAgB,KAG/EtQ,EAAAA,GAAAA,MAACyL,GAAgB,CAAAxL,SAAA,EACfE,EAAAA,GAAAA,KAAC+K,GAAY,CAAChL,UAAU,wBAAuBD,SAAC,qDAChDD,EAAAA,GAAAA,MAAC2L,GAAa,CAAA1L,SAAA,CAAEmC,EAAW,YAG7BjC,EAAAA,GAAAA,KAACoL,GAAW,CAACrL,UAAU,wBAAuBD,SAAC,+CAC/CE,EAAAA,GAAAA,KAACqL,GAAc,CACbnF,KAAK,OACLC,MAAOsH,EACPrH,SAxMsB,SAACzD,GAC7B,IAAI8M,EAAe9M,EAAEC,OAAOuD,MAAMuJ,QAAQ,YAAa,IACnDD,GAAgB,KAClBA,EAAe,IAEjB/B,EAAa+B,EACf,EAmMQE,QArLqB,WACG,IAA1BpJ,WAAWkH,KACbK,EAAkB8B,QAAQzJ,MAAQ,GAEtC,EAkLQM,OAhKoB,WACR,KAAdgH,GAA8C,IAA1BlH,WAAWkH,KACjCK,EAAkB8B,QAAQzJ,MAAQ,EAClCuH,EAAa,IAEfO,GACF,EA2JQ4B,IAAK/B,EACLgC,aAA4B,IAAdrC,EAAkB,GAAKA,EAErCsC,UAAW,EAEXC,UAAW,SAACrN,GAAC,MAAI,CAAC,IAAK,IAAK,IAAK,KAAKsN,SAAStN,EAAEuN,MAAQvN,EAAEwN,gBAAgB,KAI7EnQ,EAAAA,GAAAA,KAAC0L,GAAU,CAACxF,KAAK,SAASjG,QAASqO,EAAWxO,SAAC,gBAKzD,E,WCjSasQ,GAAuB,SAAAnS,GAAK,OAAIA,EAAMgE,WAAWA,UAAW,EAC5DoO,GAAyB,SAAApS,GAAK,OAAIA,EAAMgE,WAAW+K,MAAO,EAC1DsD,GAAyB,SAAArS,GAAK,OAAIA,EAAMgE,WAAW6K,MAAO,EAC1DyD,GAA2B,SAAAtS,GAAK,OAAIA,EAAMgE,WAAWiL,YAAa,EAClEsD,GAA4B,SAAAvS,GAAK,OAAIA,EAAMgE,WAAWwL,SAAU,ECgBhEgD,GAAa,WACxB,IAAMpR,GAAWC,EAAAA,GAAAA,MACjBjB,GAAsCC,EAAAA,EAAAA,WAAS,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA9C6J,EAAW1J,EAAA,GAAE2J,EAAc3J,EAAA,GAClCG,GAAoCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAxCsD,EAAUrD,EAAA,GAAE0O,EAAa1O,EAAA,GAC1BiO,GAAS7N,EAAAA,GAAAA,IAAY0R,GAAAA,IACrBlE,GAAaxN,EAAAA,GAAAA,IAAYsR,IACzB7D,GAAazN,EAAAA,GAAAA,IAAYqR,IACzB3D,GAAmB1N,EAAAA,GAAAA,IAAYuR,IAC/B5D,GAAiB3N,EAAAA,GAAAA,IAAYoR,IAC7BxD,GAAgB5N,EAAAA,GAAAA,IAAYwR,KAElCjR,EAAAA,EAAAA,YAAU,WACRF,GAASsR,EAAAA,GAAAA,GAAc9D,EAAO7K,MAC9B,IAAM4O,EAAoBjE,EAC1B1N,QAAQC,IAAI0R,GACZ,IAAMC,EAAkBtK,WAAWqK,EAAoB,KAAMzO,QAAQ,GACrElD,QAAQC,IAAI2R,GACZvD,EAAcuD,EAChB,GAAG,CAACxR,EAAUwN,EAAO7K,IAAK2K,IAe1B,OACE9M,EAAAA,GAAAA,MAACiM,GAAa,CAAC/L,UAAU,uBAAsBD,SAAA,EAC7CE,EAAAA,GAAAA,KAACgM,GAAS,CAACjM,UAAU,wBAAuBD,SAAC,oBAC7CD,EAAAA,GAAAA,MAACuM,GAAS,CAAAtM,SAAA,EACRD,EAAAA,GAAAA,MAACqM,GAAmB,CAAApM,SAAA,CAAEmC,EAAW,SACjCjC,EAAAA,GAAAA,KAACsM,GAAe,CAACrM,QAlBC,WACtBkI,GAAe,EACjB,EAgBgDrI,SAAC,YAG5CoI,IACClI,EAAAA,GAAAA,KAACyK,GAAK,CACJxJ,QAnBiB,WACvBkH,GAAe,EACjB,EAkBQqE,WAAYA,EACZC,WAAYA,EACZC,iBAAkBA,EAClBC,eAAgBA,EAChBC,cAAeA,EACfC,OAAQA,EAAO7K,QAKzB,E,0CCnEa8O,GAAkBrX,EAAAA,QAAAA,QAAcC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,66CAkBfoX,GAAAA,EAuBAC,GAAAA,EAoBAC,GAAAA,GAQjBC,GAAiBzX,EAAAA,QAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,khCA8C3BwX,GAAY1X,EAAAA,QAAAA,IAAUM,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,87BAUPyX,GAAAA,EAaAA,GAAAA,EAaAA,GAAAA,GCrI5B,GAlBiB,WACf,OACEpR,EAAAA,GAAAA,KAAA0D,GAAAA,SAAA,CAAA5D,UACED,EAAAA,GAAAA,MAACiR,GAAe,CAAAhR,SAAA,EACdD,EAAAA,GAAAA,MAACqR,GAAc,CAAApR,SAAA,EACbE,EAAAA,GAAAA,KAACyQ,GAAU,KACXzQ,EAAAA,GAAAA,KAACmR,GAAS,CAACpR,UAAU,2BACrBC,EAAAA,GAAAA,KAACyJ,GAAe,QAElB5J,EAAAA,GAAAA,MAACqR,GAAc,CAACnR,UAAU,cAAaD,SAAA,EACrCE,EAAAA,GAAAA,KAACiI,GAAc,KACfjI,EAAAA,GAAAA,KAACqR,GAAe,WAK1B,C","sources":["components/DeleteWaterModal/DeleteWaterModal.styled.js","components/TodayListModal/TodayListModal.styled.js","components/MonthStatsTable/MonthStatsTable.styled.js","../node_modules/date-fns/startOfMonth.mjs","../node_modules/date-fns/endOfMonth.mjs","../node_modules/date-fns/eachDayOfInterval.mjs","redux/monthWater/monthWaterselectors.js","components/MonthStatsTable/MonthStatsTable.jsx","redux/waterDetails/waterSelectors.js","components/DeleteWaterModal/DeleteWaterModal.jsx","components/TodayWaterList/TodayWaterList.styled.js","components/TodayListModal/TodayListModal.jsx","components/TodayWaterList/TodayWaterList.jsx","components/WaterRatioPanel/WaterRatioPanel.styled.js","components/WaterRatioPanel/WaterRatioPanel.jsx","components/DailyNorma/dailyNorma.styled.js","components/DailyNorma/dailyNormaModal.jsx","redux/dailyNorma/dailyNorma.selectors.js","components/DailyNorma/dailyNorma.jsx","page/HomePage.styled.js","page/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BoxModal = styled.div`\n  padding: 0 24px 32px;\n`;\n\nexport const ButtonStyle = styled.button`\n  display: inline-block;\n  width: 100%;\n  padding: 8px 30px;\n  color: #fff;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  background-color: var(--btn-color-red);\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n  &:active {\n    box-shadow: none;\n  }\n\n  &:last-of-type {\n    color: var(--primery-color-blue);\n    background-color: var(--btn-color-light-blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    padding: 10px 30px;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n  }\n`;\n\nexport const TextStyle = styled.p`\n  font-size: 18px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-weight: 500;\n  margin-bottom: 24px;\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 32px 24px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  position: fixed;\n  padding: 0;\n  margin: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  &.base-modal-enter {\n    opacity: 0;\n  }\n\n  &.base-modal-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in-out;\n  }\n\n  &.base-modal-exit {\n    opacity: 1;\n  }\n\n  &.base-modal-exit-active {\n    opacity: 0;\n    transition: opacity 300ms ease-in-out 200ms;\n  }\n`;\nexport const ModalContent = styled.div`\n  translate: -50% -50%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  min-width: 280px;\n  max-height: 90vh;\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: auto;\n  z-index: 1200;\n\n  @media screen and (min-width: 768px) {\n    min-width: 592px;\n  }\n\n  &.modal-content-enter {\n    opacity: 0;\n    scale: 0.5;\n  }\n\n  &.modal-content-enter-active {\n    opacity: 1;\n    scale: 1;\n    transition: opacity 300ms ease-in-out 200ms, scale 200ms ease-in-out 200ms;\n  }\n\n  &.modal-content-exit {\n    opacity: 1;\n    scale: 1;\n  }\n\n  &.modal-content-exit-active {\n    opacity: 0;\n    scale: 0.5;\n    transition: opacity 300ms ease-in-out, scale 200ms ease-in-out;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 12px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 100%;\n  height: 100%;\n  stroke: var(--primery-color-blue);\n\n  &:hover,\n  &:focus {\n    stroke: var(--secondary-yellow);\n  }\n`;\n\nexport const BoxAddModal = styled.div`\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n\n  h3 {\n    margin-bottom: 16px;\n    color: var(--primery-color-black);\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.1;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 704px;\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-width: 592px;\n  }\n`;\n\nexport const PreviousInfo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 24px;\n  gap: 12px;\n  border-radius: 10px;\n  background-color: var(--bg-color-light-blue);\n  width: 254px;\n  margin-bottom: 24px;\n`;\n\nexport const AddParagraph = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 12px;\n`;\n\nexport const AddWater = styled.div`\n  margin-bottom: 24px;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const Water = styled.p`\n  color: var(--primery-color-blue);\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  width: 92px;\n  height: 36px;\n`;\n\nexport const Label = styled.div`\n  border-radius: 40px;\n  background: var(--btn-color-light-blue);\n  padding-left: 10px;\n  padding-right: 16px;\n  margin-left: 10px;\n  margin-right: 10px;\n`;\n\nexport const ButtonMl = styled.button`\n  background-color: var(--primery-color-white);\n  color: var(--primery-color-blue);\n  border-radius: 30px;\n  border: 1px solid var(--secondary-color-blue);\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  padding: 4px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover &:focus {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--primery-color-blue);\n`;\n\nexport const AddTime = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const InputTime = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  &::placeholder {\n    color: var(--primery-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const Input = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &::placeholder {\n    color: var(--secondary-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const FooterModal = styled.div`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  span {\n    color: var(--primery-color-blue);\n    text-align: center;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.33;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: end;\n    align-items: center;\n    gap: 24px;\n    margin-top: 24px;\n  }\n`;\n\nexport const AddButtonSave = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  background-color: var(--primery-color-blue);\n  color: #fff;\n  padding: 10px 30px;\n  border-radius: 10px;\n  font-size: 18px;\n  width: 100%;\n  height: 44px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: background-color 250ms cubic-bezier(0.165, 0.84, 0.44, 1.03);\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CalendarStyle = styled.div`\n  @media screen and (min-width: 320px) {\n    .header {\n      display: flex;\n      justify-content: space-between;\n      padding-bottom: 16px;\n    }\n\n    .sectionText {\n      color: var(--primery-color-black);\n      font-size: 24px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 30px;\n    }\n    .month {\n      display: grid;\n      grid-template-columns: repeat(5, 1fr);\n      grid-template-rows: repeat(7, 0.5fr);\n      gap: 10px;\n    }\n    .monthNav {\n      display: flex;\n      align-items: center;\n    }\n\n    .navBtn {\n      display: flex;\n      border: none;\n      background-color: transparent;\n      justify-content: center;\n    }\n\n    .dateText {\n      color: var(--primery-color-blue);\n      width: 130px;\n      text-align: center;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .calendarDayBtn {\n      width: 34px;\n      height: 34px;\n      border-radius: 20px;\n      border: none;\n      background-color: var(--primery-color-white);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .day {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n    .progressWaterText {\n      color: var(--secondary-color-blue);\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n\n    .border {\n      border: 1px solid var(--calendar-color-orange);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .month {\n      grid-template-columns: repeat(10, 1fr);\n      grid-template-rows: repeat(4, 1fr);\n    }\n    .sectionText {\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const ContentPopover = styled.div`\n  @media screen and (min-width: 320px) {\n    position: relative;\n    display: inline-flex;\n    padding: 24px 13px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n\n    .closeBtnPopover {\n      position: absolute;\n      top: 26px;\n      right: 13px;\n      border: none;\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n    }\n    .datePopover {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .datePopoverText {\n      color: var(--primery-color-black);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .popoverColorText {\n      color: var(--primery-color-blue);\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 24px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const LoaderMonthWrapper = styled.div`\n  position: relative;\n  height: 262px;\n`;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date) {\n  const _date = toDate(date);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link eachDayOfInterval} function options.\n */\n\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of days from the day of the interval start to the day of the interval end\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport function eachDayOfInterval(interval, options) {\n  const startDate = toDate(interval.start);\n  const endDate = toDate(interval.end);\n\n  let reversed = +startDate > +endDate;\n  const endTime = reversed ? +startDate : +endDate;\n  const currentDate = reversed ? endDate : startDate;\n  currentDate.setHours(0, 0, 0, 0);\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+currentDate <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachDayOfInterval;\n","export const selectMonthWaterDetails = state => state.monthWater.month;\nexport const selectIsLoadingMonthWater = state => state.monthWater.isLoading;\n","import React, { useState, useEffect } from 'react';\nimport { CalendarStyle, ContentPopover, LoaderMonthWrapper } from './MonthStatsTable.styled';\nimport icons from '../../img/icons.svg';\nimport { Popover } from '@mui/material';\nimport { format, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\nimport { getMonthWater } from 'redux/monthWater/monthWaterThunk';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoadingMonthWater,\n  selectMonthWaterDetails,\n} from 'redux/monthWater/monthWaterselectors';\nimport { formatDate } from 'redux/waterDetails/helpers';\nimport Loader from 'components/Loader/Loader';\n\nconst MonthStatsTable = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  const isLoadingMonth = useSelector(selectIsLoadingMonthWater);\n  const monthWater = useSelector(selectMonthWaterDetails);\n  console.log(monthWater);\n\n  const d = formatDate(currentDate);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMonthWater(d));\n  }, [dispatch, d]);\n\n  const handleChangeMonth = offset => {\n    setCurrentDate(prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() + offset));\n  };\n\n  const getMonthBounds = date => {\n    return {\n      start: startOfMonth(date),\n      end: endOfMonth(date),\n    };\n  };\n\n  const getMonthDays = date => {\n    const { start, end } = getMonthBounds(date);\n\n    return eachDayOfInterval({ start, end });\n  };\n  const getFormattedDateWithTime = date => formatDate(new Date(date.setHours(0, 0, 0, 0)));\n\n  const renderPopover = data => {\n    const dateText = selectedDate.textContent;\n    const dateObj = new Date(currentDate.getFullYear(), currentDate.getMonth(), dateText);\n    const formattedDateWithTime = getFormattedDateWithTime(dateObj);\n\n    if (!data || data.length === 0) {\n      return (\n        <ContentPopover>\n          <h3>{format(dateObj, 'd MMMM yyyy')}</h3>\n          <p>No information</p>\n          <button className=\"closeBtnPopover\" onClick={() => setSelectedDate(null)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-close-day-details'}></use>{' '}\n            </svg>\n          </button>\n        </ContentPopover>\n      );\n    }\n\n    const waterInfo = data.find(\n      item => getFormattedDateWithTime(new Date(item._id)) === formattedDateWithTime\n    );\n    if (waterInfo) {\n      return (\n        <ContentPopover>\n          <p className=\"datePopover\">{format(dateObj, 'd,MMMM')}</p>\n          <p className=\"datePopoverText\">\n            Daily norma: <span className=\"popoverColorText\">{waterInfo.dailyNorma}L</span>\n          </p>\n          <p className=\"datePopoverText\">\n            Fulfillment of the daily norm:{' '}\n            <span className=\"popoverColorText\">{waterInfo.persent.toFixed(0)}%</span>\n          </p>\n          <p className=\"datePopoverText\">\n            How many servings of water: <span className=\"popoverColorText\">{waterInfo.perDay}</span>\n          </p>\n          <button className=\"closeBtnPopover\" onClick={() => setSelectedDate(null)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-close-day-details'}></use>{' '}\n            </svg>\n          </button>\n        </ContentPopover>\n      );\n    } else {\n      return (\n        <ContentPopover>\n          <h3>{format(dateObj, 'd MMMM yyyy')}</h3>\n          <p>No information</p>\n          <button className=\"closeBtnPopover\" onClick={() => setSelectedDate(null)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-close-day-details'}></use>{' '}\n            </svg>\n          </button>\n        </ContentPopover>\n      );\n    }\n  };\n\n  return (\n    <CalendarStyle>\n      <div className=\"header\">\n        <span className=\"sectionText\">Month</span>\n        <div className=\"monthNav\">\n          <button className=\"navBtn\" onClick={() => handleChangeMonth(-1)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-left'}></use>\n            </svg>\n          </button>\n          <h2 className=\"dateText\">{format(currentDate, 'LLLL, yyyy')}</h2>\n          <button className=\"navBtn\" onClick={() => handleChangeMonth(1)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-right'}></use>{' '}\n            </svg>\n          </button>\n        </div>\n      </div>\n      {isLoadingMonth ? (\n        <LoaderMonthWrapper>\n          <Loader />\n        </LoaderMonthWrapper>\n      ) : (\n        <ul className=\"month\">\n          <Popover\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            id=\"alex\"\n            open={Boolean(selectedDate)}\n            anchorEl={selectedDate}\n            onClose={() => setSelectedDate(null)}\n            PaperProps={{ elevation: 3 }}\n            transitionDuration={{ enter: 500, exit: 500 }}\n          >\n            {selectedDate && renderPopover(monthWater)}\n          </Popover>\n          {getMonthDays(currentDate).map(date => (\n            <li key={format(date, 'yyyy-MM-dd')} className=\"day\">\n              <button className=\"calendarDayBtn\" onClick={e => setSelectedDate(e.target)}>\n                {format(date, 'd')}\n              </button>\n              <p className=\"progressWaterText\">\n                {monthWater\n                  .find(\n                    item =>\n                      getFormattedDateWithTime(new Date(item._id)) ===\n                      getFormattedDateWithTime(date)\n                  )\n                  ?.persent.toFixed(0) || 0}\n                %\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </CalendarStyle>\n  );\n};\n\nexport default MonthStatsTable;\n","export const selectTodayWater = state => state.waterDetails.today;\nexport const selectMonthWater = state => state.waterDetails.month;\nexport const selectDailyDrank = state => state.waterDetails.dailyDrank;\nexport const selectIsLoadingList = state => state.waterDetails.isLoading;\nexport const selectOwnerId = state => state.waterDetails.ownerId;\nexport const selectNorma = state => state.waterDetails.waterNorma;\n","import { useDispatch } from 'react-redux';\nimport { deleteWaterThunk } from 'redux/waterDetails/waterThunk';\nimport {\n  BoxModal,\n  ButtonBox,\n  ButtonStyle,\n  TextStyle,\n  ModalHeader,\n} from './DeleteWaterModal.styled';\nimport icons from '../../img/icons.svg';\nimport {\n  Overlay,\n  ModalContent,\n  CloseButton,\n  CloseIcon,\n} from 'components/TodayListModal/TodayListModal.styled';\n\nexport const DeleteWaterModal = ({ onClose, recordId, ownerId }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    console.log(ownerId);\n    const dataDelete = {\n      id: recordId,\n      _id: ownerId,\n    };\n    dispatch(deleteWaterThunk(dataDelete)).then(data => {\n      if (!data.error) onClose();\n    });\n  };\n  return (\n    <>\n      <Overlay onClick={onClose} />\n      <ModalContent className='dark-delete-modal'>\n        <ModalHeader>\n          <h2>Delete entry</h2>\n          <CloseButton onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxModal>\n            <TextStyle className='dark-delete-modal-text'>Are you sure you want to delete the entry?</TextStyle>\n            <ButtonBox>\n              <ButtonStyle className=\"dark-delete-button\" onClick={handleDelete}>Delete</ButtonStyle>\n              <ButtonStyle onClick={onClose}>Cancel</ButtonStyle>\n            </ButtonBox>\n          </BoxModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TodayWrapper = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const TodayItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 0;\n  align-items: center;\n  border-bottom: 1px solid var(--btn-color-light-blue);\n`;\n\nexport const TodayInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TodayTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n\nexport const Forget = styled.p`\n  color: var(--secondary-color-blue);\n`;\n\nexport const TodayList = styled.ul`\n  height: 212px;\n  overflow: auto;\n`;\n\nexport const TodayVolume = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.33;\n  color: var(--primery-color-blue);\n  margin-right: 16px;\n`;\n\nexport const TodayTime = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 2;\n  color: var(--primery-color-black);\n`;\n\nexport const IconGlass = styled.svg`\n  width: 26px;\n  height: 26px;\n  margin-right: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 36px;\n    height: 36px;\n  }\n`;\n\nexport const TodayTools = styled.div`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ButtonChange = styled.button`\n  background-color: transparent;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n\n  & svg {\n    stroke: var(--secondary-color-blue);\n    fill: transparent;\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    border-bottom: 1px solid var(--secondary-color-blue);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  background-color: transparent;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n\n  & svg {\n    stroke: var(--btn-color-red);\n    fill: transparent;\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    border-bottom: 1px solid var(--btn-color-red);\n  }\n`;\n\nexport const AddWaterBtn = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: transparent;\n  color: var(--primery-color-blue);\n  border: none;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  stroke: var(--primery-color-blue);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    fill: transparent;\n  }\n\n  &:hover {\n    color: var(--secondary-yellow);\n    stroke: var(--secondary-yellow);\n  }\n`;\n\nexport const LoaderWrapper = styled.div`\n  height: 212px;\n  position: relative;\n`;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\nimport { formatTime } from 'redux/waterDetails/helpers';\nimport {\n  Overlay,\n  ModalContent,\n  ModalHeader,\n  CloseButton,\n  CloseIcon,\n  BoxAddModal,\n  PreviousInfo,\n  AddParagraph,\n  AddWater,\n  Water,\n  Label,\n  ButtonMl,\n  Icon,\n  AddTime,\n  InputTime,\n  Input,\n  FooterModal,\n  AddButtonSave,\n} from './TodayListModal.styled';\nimport { IconGlass, TodayTime, TodayVolume } from '../TodayWaterList/TodayWaterList.styled';\nimport icons from '../../img/icons.svg';\nimport { addWatersThunk, editWaterThunk } from 'redux/waterDetails/waterThunk';\n\nexport const TodayListModal = ({\n  onClose,\n  isEditing,\n  initialAmount,\n  initialTime,\n  existingRecordId,\n  ownerId,\n}) => {\n  const [amount, setAmount] = useState(initialAmount || 0);\n  const [times, setTime] = useState(\n    isEditing && initialTime ? format(new Date(initialTime), 'HH:mm') : format(new Date(), 'HH:mm')\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n  const increaseAmount = () => {\n    setAmount(prevAmount => prevAmount + 50);\n  };\n\n  const decreaseAmount = () => setAmount(prevAmount => (prevAmount > 0 ? prevAmount - 50 : 0));\n\n  const handleAmountChange = e => {\n    let newValue = e.target.value;\n\n    if (newValue.startsWith('0') && newValue.length > 1) {\n      newValue = parseFloat(newValue.substring(1));\n    }\n    setAmount(parseFloat(newValue));\n  };\n\n  useEffect(() => {\n    if (isEditing) {\n      setAmount(initialAmount || 0);\n      setTime(formatTime(initialTime, 'HH:mm'));\n    } else {\n      setAmount(0);\n      setTime(format(new Date(), 'HH:mm'));\n    }\n  }, [isEditing, initialAmount, initialTime]);\n\n  const handleSubmit = () => {\n    let isoDate;\n    if (isEditing) {\n      isoDate = initialTime\n        ? new Date(initialTime).toISOString().slice(0, 16)\n        : new Date().toISOString();\n    } else if (times) {\n      const currentDate = new Date();\n      const [hours, minutes] = times.split(':');\n      currentDate.setHours(hours, minutes);\n      isoDate = currentDate.toISOString().slice(0, 16);\n\n      const currentDate2 = new Date(isoDate);\n\n      const newDate = new Date(currentDate2);\n      newDate.setHours(currentDate2.getHours() + 2);\n\n      const formattedNewDate =\n        newDate.getFullYear() +\n        '-' +\n        ('0' + (newDate.getMonth() + 1)).slice(-2) +\n        '-' +\n        ('0' + newDate.getDate()).slice(-2) +\n        'T' +\n        ('0' + newDate.getHours()).slice(-2) +\n        ':' +\n        ('0' + newDate.getMinutes()).slice(-2);\n      isoDate = formattedNewDate;\n    }\n\n    const waterData = {\n      waterVolume: amount,\n      time: isoDate,\n    };\n\n    if (isEditing) {\n      dispatch(editWaterThunk({ _id: ownerId, id: existingRecordId, ...waterData })).then(data => {\n        if (!data.error) onClose();\n      });\n    } else {\n      dispatch(addWatersThunk(waterData)).then(data => {\n        if (!data.error) {\n          onClose();\n          setAmount(0);\n        }\n      });\n    }\n    onClose();\n  };\n\n  const handleOnClose = () => {\n    if (isEditing) {\n      onClose();\n      return;\n    }\n    onClose();\n    setAmount(0);\n  };\n\n  const title = isEditing ? 'Edit the entered amount of water' : 'Add water';\n\n  const displayTime = isEditing && initialTime ? formatTime(initialTime) : '';\n\n  return (\n    <>\n      <Overlay onClick={handleOnClose} />\n      <ModalContent className='dark-water-modal'>\n        <ModalHeader>\n          <h2>{title}</h2>\n          <CloseButton onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxAddModal>\n            {isEditing && (\n              <PreviousInfo>\n                <IconGlass>\n                  <use href={`${icons}#icon-glass`}></use>\n                </IconGlass>\n                <TodayVolume>{initialAmount ? `${initialAmount} ml` : 'No notes yet'}</TodayVolume>\n                <TodayTime>{initialTime ? `${displayTime}` : ''}</TodayTime>\n              </PreviousInfo>\n            )}\n            <h3>{isEditing ? 'Correct entered data:' : 'Choose a value:'}</h3>\n            <AddWater>\n              <AddParagraph className='dark-modal-text'>Amount of water:</AddParagraph>\n              <div>\n                <ButtonMl onClick={decreaseAmount}>\n                  <Icon>\n                    <use href={`${icons}#icon-decrement-outline`}></use>\n                  </Icon>\n                </ButtonMl>\n                <Label className='dark-water-modal-button'>\n                  <Water>{Number.isNaN(amount) ? '0' : `${amount}`} ml</Water>\n                </Label>\n                <ButtonMl onClick={increaseAmount}>\n                  <Icon>\n                    <use href={`${icons}#icon-add`}></use>\n                  </Icon>\n                </ButtonMl>\n              </div>\n            </AddWater>\n            <AddTime>\n              <AddParagraph className='dark-modal-text'>Recording time:</AddParagraph>\n              <InputTime\n                type=\"time\"\n                value={times}\n                onChange={e => setTime(e.target.value)}\n                step=\"300\"\n              />\n            </AddTime>\n            <div>\n              <h3>Enter the value of the water used:</h3>\n              <Input\n                type=\"number\"\n                value={Number.isNaN(amount) ? '0' : `${amount}`}\n                onChange={handleAmountChange}\n                onBlur={() => setAmount(prevAmount => prevAmount || initialAmount || 0)}\n              />\n            </div>\n            <FooterModal>\n              <span>{Number.isNaN(amount) ? `0` : `${amount}`}ml</span>\n              <AddButtonSave onClick={handleSubmit}>Save</AddButtonSave>\n            </FooterModal>\n          </BoxAddModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoadingList,\n  selectOwnerId,\n  selectTodayWater,\n} from 'redux/waterDetails/waterSelectors';\nimport { DeleteWaterModal } from '../DeleteWaterModal/DeleteWaterModal';\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\nimport icons from '../../img/icons.svg';\nimport { getTodayWater } from 'redux/waterDetails/waterThunk';\nimport {\n  AddWaterBtn,\n  ButtonChange,\n  ButtonDelete,\n  IconGlass,\n  TodayInfo,\n  TodayItem,\n  TodayList,\n  TodayTime,\n  TodayTitle,\n  TodayTools,\n  TodayVolume,\n  TodayWrapper,\n  Forget,\n  LoaderWrapper,\n} from './TodayWaterList.styled';\nimport { formatTime } from 'redux/waterDetails/helpers';\nimport Loader from 'components/Loader/Loader';\n\nconst iconsList = {\n  edit: `${icons}#icon-edit`,\n  delete: `${icons}#icon-delete`,\n  glass: `${icons}#icon-glass`,\n  add: `${icons}#icon-add`,\n};\n\nexport const TodayWaterList = () => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedWaterItem, setSelectedWaterItem] = useState(null);\n  const [isDeleteWaterModalOpen, setDeleteWaterModalOpen] = useState(false);\n  const { waterlist } = useSelector(selectTodayWater);\n  const isLoadingList = useSelector(selectIsLoadingList);\n  const ownerId = useSelector(selectOwnerId);\n\n  useEffect(() => {\n    dispatch(getTodayWater());\n  }, [dispatch]);\n\n  const openModalToAdd = () => {\n    setSelectedWaterItem(null);\n    setIsModalOpen(true);\n  };\n\n  const openModalToDelete = item => {\n    setSelectedWaterItem(item);\n    setDeleteWaterModalOpen(true);\n  };\n\n  const openModalToEdit = item => {\n    setSelectedWaterItem(item);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <TodayWrapper>\n      <TodayTitle>Today</TodayTitle>\n      {isLoadingList ? (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      ) : (\n        <TodayList>\n          {waterlist?.length === 0 || waterlist === undefined ? (\n            <Forget>You haven't drunk water yet. Don't forget to meet your daily norma! </Forget>\n          ) : (\n            waterlist?.map(item => (\n              <TodayItem key={item.id}>\n                <TodayInfo>\n                  <IconGlass>\n                    <use href={iconsList.glass}></use>\n                  </IconGlass>\n                  <TodayVolume>{item.waterVolume} ml</TodayVolume>\n                  <TodayTime>{formatTime(item.time)}</TodayTime>\n                </TodayInfo>\n                <TodayTools>\n                  <ButtonChange onClick={() => openModalToEdit(item)}>\n                    <svg>\n                      <use href={iconsList.edit}></use>\n                    </svg>\n                  </ButtonChange>\n                  <ButtonDelete onClick={() => openModalToDelete(item)}>\n                    <svg>\n                      <use href={iconsList.delete}></use>\n                    </svg>\n                  </ButtonDelete>\n                </TodayTools>\n              </TodayItem>\n            ))\n          )}\n        </TodayList>\n      )}\n      <AddWaterBtn onClick={openModalToAdd}>\n        <svg>\n          <use href={iconsList.add}></use>\n        </svg>\n        Add Water\n      </AddWaterBtn>\n      {isDeleteWaterModalOpen && (\n        <DeleteWaterModal\n          onClose={() => setDeleteWaterModalOpen(false)}\n          recordId={selectedWaterItem?.id}\n          ownerId={ownerId}\n        />\n      )}\n      {isModalOpen && (\n        <TodayListModal\n          initialAmount={selectedWaterItem?.waterVolume}\n          initialTime={selectedWaterItem?.time}\n          isEditing={selectedWaterItem !== null}\n          existingRecordId={selectedWaterItem?.id}\n          onClose={() => setIsModalOpen(false)}\n          ownerId={ownerId}\n        />\n      )}\n    </TodayWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WaterRatioPanelContainer = styled.div`\n  width: 280px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px} {\n    width: 704px;\n    gap: 24px;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    gap: 32px;\n  }\n`;\n\nexport const WaterRange = styled.input`\n  &[type='range'] {\n    appearance: none;\n    width: 100%;\n    border-radius: 10px;\n    background-color: #d7e3ff;\n    background-image: linear-gradient(to right, #9ebbff, #9ebbff);\n    background-repeat: no-repeat;\n  }\n\n  &[type='range']:focus {\n    outline: none;\n  }\n\n  &[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8px;\n    animation: 0.2s;\n    border-radius: 10px;\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &[type='range']::-webkit-slider-thumb {\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: solid 1px #407bff;\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n`;\n\nexport const WaterRangeHeader = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  margin-bottom: 16px;\n  color: #407bff;\n`;\nexport const WaterRangeContainer = styled.div`\n  position: relative;\n  height: 102px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n  }\n`;\n\nexport const RateContainer = styled.div`\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const MiddleMark = styled.span`\n  position: absolute;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  text-align: center;\n  margin-bottom: 4px;\n  gap: 4px;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const StartMark = styled.span`\n  transform: translateX(-50%);\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n    color: #9ebbff;\n  }\n`;\n\nexport const EndMark = styled.span`\n  transform: translateX(50%);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const AddWaterButton = styled.button`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  padding: 6px 76px 6px 76px;\n  background-color: #407bff;\n  color: #fff;\n  border: none;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: '0 4px 14px rgba(64, 123, 255, 0.54)';\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    padding: 10px 104px 10px 104px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 178px;\n    height: 44px;\n    padding: 10px 30px 10px 30px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: transparent;\n  stroke: #ffffff;\n`;\n","import {\n  Icon,\n  AddWaterButton,\n  StartMark,\n  MiddleMark,\n  RateContainer,\n  EndMark,\n  WaterRange,\n  WaterRangeContainer,\n  WaterRangeHeader,\n  WaterRatioPanelContainer,\n} from './WaterRatioPanel.styled';\n\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\n\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport icons from '../../img/icons.svg';\nimport { selectDailyDrank, selectNorma } from 'redux/waterDetails/waterSelectors';\n\nexport const WaterRatioPanel = () => {\n  const dailyNorm = useSelector(selectNorma);\n  const dailyDrank = useSelector(selectDailyDrank);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const waterPercent = Math.round((100 * dailyDrank) / dailyNorm);\n\n  const getBackgroundSize = () => {\n    if (Number.isNaN(waterPercent)) {\n      return { backgroundSize: `${0}` };\n    }\n    return {\n      backgroundSize: `${waterPercent}%`,\n    };\n  };\n\n  const getPosition = () => {\n    const limit = Math.min(100, Math.max(0, waterPercent));\n    return {\n      left: `calc(${limit}% - 2px)`,\n    };\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const isShow = waterPercent > 0 && waterPercent <= 100;\n\n  return (\n    <WaterRatioPanelContainer>\n      <WaterRangeContainer>\n        <WaterRangeHeader>Today</WaterRangeHeader>\n        <WaterRange\n          type=\"range\"\n          value={Number.isNaN(waterPercent) ? `0` : waterPercent}\n          readOnly={true}\n          style={getBackgroundSize()}\n          aria-label=\"Water range\"\n        />\n        <RateContainer>\n          <StartMark>0%</StartMark>\n          {isShow && (\n            <MiddleMark id=\"waterMark\" style={getPosition()}>{`${waterPercent}%`}</MiddleMark>\n          )}\n          <EndMark>100%</EndMark>\n        </RateContainer>\n      </WaterRangeContainer>\n      <AddWaterButton\n        onClick={() => {\n          openModal();\n        }}\n      >\n        <Icon>\n          <use href={`${icons}#icon-add-button`}></use>\n        </Icon>\n        Add Water\n      </AddWaterButton>\n      {isModalOpen && (\n        <TodayListModal\n          onClose={() => {\n            closeModal();\n          }}\n          onShow={isModalOpen}\n        />\n      )}\n    </WaterRatioPanelContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const GlobalStyles = styled.div`\n  @media screen and (min-width: 768px) {\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    input[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n`;\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Modal = styled.div`\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  @media screen and (max-width: 319px) {\n    padding: 24px 12px;\n    max-width: 280px;\n  }\n  @media screen and (min-width: 320px) {\n    padding: 24px 12px;\n    max-width: 280px;\n    max-height: 816px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n    max-width: 704px;\n    max-height: 696px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 592px;\n    max-height: 712px;\n  }\n`;\nexport const TopDiv = styled.div`\n  position: relative;\n`;\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: large;\n  font-weight: 900;\n  color: var(--primery-color-blue);\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: var(--btn-color-red);\n  }\n`;\nexport const ModalHeader = styled.div`\n  color: var(--primery-color-black);\n  line-height: 32px;\n  font-size: 26px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const FormulasBox = styled.div`\n  margin-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\nexport const FormulaBox = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 24px;\n  }\n`;\nexport const LabelText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n`;\nexport const InputText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n\n  @media screen and (min-width: 320px) {\n    width: 190px;\n  }\n  @media screen and (min-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const CaptionBox = styled.div`\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 10px;\n  padding: 10px;\n  margin-top: 12px;\n  width: 100%;\n\n  @media screen and (min-width: 320px) {\n    height: 100px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n  }\n  @media screen and (min-width: 1440px) {\n    height: 68px;\n  }\n`;\nexport const ColoredFormula = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-left: 4px;\n`;\nexport const CaptionMark = styled.span`\n  color: var(--primery-color-blue);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const CaptionText = styled.div`\n  color: #8f8f8f;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const FormBigText = styled.div`\n  margin-top: 24px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-size: 18px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const WaterFormInput = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 8px;\n`;\nexport const WaterFormInputSpecial = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredWaterBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 16px;\n`;\nexport const RequiredWater = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 900;\n  margin-left: 6px;\n`;\nexport const SaveButton = styled.button`\n  border-radius: 10px;\n  border: none;\n  background-color: var(--primery-color-blue);\n  color: var(--primery-color-white);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  padding: 10px 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: box-shadow 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:focus {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  }\n\n  @media screen and (max-width: 319px) {\n    width: calc(100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n  @media screen and (min-width: 320px) {\n    width: calc(100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    font-size: 18px;\n    line-height: 24px;\n    position: absolute;\n    right: 24px;\n    bottom: 32px;\n  }\n`;\nexport const RadioButton = styled.div`\n  input {\n    display: none;\n  }\n\n  margin-top: 16px;\n\n  label {\n    display: inline-block;\n    position: relative;\n    padding-left: 22px;\n    margin-right: 24px;\n    cursor: pointer;\n  }\n\n  label::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 14px;\n    height: 14px;\n    border: 1px solid var(--primery-color-blue);\n    border-radius: 50%;\n    background-color: var(--primery-color-white);\n    box-sizing: border-box;\n  }\n\n  label::after {\n    content: '';\n    position: absolute;\n    left: 4px;\n    top: 7px;\n    width: 6px;\n    height: 6px;\n    border: none;\n    border-radius: 50%;\n    background-color: transparent;\n    box-sizing: border-box;\n  }\n\n  input:checked + label::after {\n    background-color: var(--primery-color-blue);\n  }\n`;\n\n// DAILY NORMA PANEL\n\nexport const DailyNormaBox = styled.div`\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 8px 20px;\n  height: 76px;\n  width: 164px;\n  border-radius: 10px;\n  border: 1px solid var(--bg-color-light-blue);\n  box-shadow: 0 4px 8px 0 rgba(158, 187, 255, 0.12);\n\n\n  &:hover {\n    // box-shadow: 0 4px 4px 0 rgba(158, 187, 255, 0.3);\n  }\n\n\n`;\n\nexport const DailyText = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-black);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  width: 124px;\n`;\n\nexport const RequiredWaterHeader = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-blue);\n  font-weight: 900;\n  line-height: 24px;\n  font-size: 24px;\n`;\n\nexport const BottomBox = styled.div`\n  display: flex;\n  margin-bottom: 0;\n  margin-top: auto;\n  height: 24px;\n`;\n\nexport const EditWaterButton = styled.button`\n  width: 28px;\n  height: 20px;\n  background-color: transparent;\n  color: var(--secondary-color-blue);\n  border: none;\n  cursor: pointer;\n\n  margin-top: 5px;\n  margin-right: 10px;\n  margin-left: auto;\n\n\n  &:hover {\n  }\n`;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { updateDailyNorma } from '../../redux/dailyNorma/dailyNormaThunk';\nimport { useDispatch} from 'react-redux';\n// import { toast } from 'react-toastify';\nimport '../../index.css';\n// import { selectAuthUserData } from 'redux/auth/auth.selectors';\n\nimport {\n    ModalOverlay,\n    Modal,\n    TopDiv,\n    CloseButton,\n    ModalHeader,\n    FormulasBox,\n    FormulaBox,\n    ColoredFormula,\n    CaptionBox,\n    CaptionText,\n    CaptionMark,\n    FormBigText,\n    RadioButton,\n    RequiredText,\n    InputText,\n    WaterFormInput,\n    RequiredWaterBox,\n    RequiredWater,\n    SaveButton,\n    LabelText,\n  } from './dailyNorma.styled';\n\n  const DailyNormaModal = ({\n    onClose,\n    genderData,\n    weightData,\n    activityTimeData,\n    dailyNormaData,\n    willDrinkData,\n    userId,\n  }) => {\n    const dispatch = useDispatch();\n  \n    const [gender, setGender] = useState(genderData);\n    const [weight, setWeight] = useState(weightData);\n    const [activityTime, setActivityTime] = useState(activityTimeData);\n    const [dailyNorma, setDailyNorma] = useState(dailyNormaData);\n    const [willDrink, setWillDrink] = useState(willDrinkData);\n  \n    const weightInputRef = useRef(null);\n    const activityTimeInputRef = useRef(null);\n    const willDrinkInputRef = useRef(null);\n\n    const handleGenderChange = (selectedGender) => {\n      setGender(selectedGender);\n      calculateDailyNorma();\n    };\n  \n    const handleWeightChange = (e) => {\n      let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n      if (numericValue >= 250){\n        numericValue = 250;\n      }\n      setWeight(numericValue);\n    };\n  \n    const handleActivityTimeChange = (e) => {\n      let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n      if (numericValue >= 16){\n        numericValue = 16;\n      }\n      setActivityTime(numericValue);\n    };\n  \n    const handleWillDrinkChange = (e) => {\n      let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n      if (numericValue >= 15){\n        numericValue = 15;\n      }\n      setWillDrink(numericValue);\n    };\n  \n    const handleWeightFocus = () => {\n      if (parseFloat(weight) === 0) {\n        weightInputRef.current.value = '';\n      }\n    };\n  \n    const handleActivityTimeFocus = () => {\n      if (parseFloat(activityTime) === 0) {\n        activityTimeInputRef.current.value = '';\n      }\n    };\n  \n    const handleWillDrinkFocus = () => {\n      if (parseFloat(willDrink) === 0) {\n        willDrinkInputRef.current.value = '';\n      }\n    };\n  \n    const handleWeightBlur = () => {\n      if (weight === '' || parseFloat(weight) === 0) {\n        weightInputRef.current.value = 0;\n        setWeight(0);\n      }\n      calculateDailyNorma();\n    };\n  \n    const handleActivityTimeBlur = () => {\n      if (activityTime === '' || parseFloat(activityTime) === 0) {\n        activityTimeInputRef.current.value = 0;\n        setActivityTime(0);\n      }\n      calculateDailyNorma();\n    };\n  \n    const handleWillDrinkBlur = () => {\n      if (willDrink === '' || parseFloat(willDrink) === 0) {\n        willDrinkInputRef.current.value = 0;\n        setWillDrink(0);\n      }\n      calculateDailyNorma();\n    };\n\n    const calculateDailyNorma = useCallback(() => {\n      const userWeight = parseFloat(weight);\n      const userActivity = parseFloat(activityTime);\n  \n      if (isNaN(userWeight) || isNaN(userActivity)) {\n        setDailyNorma((2.0).toFixed(1));\n        return;\n      }\n  \n      const genderWeight = gender === 'woman' ? 0.03 : 0.04;\n      const genderActivity = gender === 'woman' ? 0.4 : 0.6;\n      let formulaResult = userWeight * genderWeight + userActivity * genderActivity;\n  \n      formulaResult = formulaResult === 0 ? 2.0 : formulaResult;\n  \n      setDailyNorma(formulaResult > 15 ? 15 : formulaResult.toFixed(1));\n    }, [gender, weight, activityTime]);\n  \n    useEffect(() => {\n      calculateDailyNorma();\n    }, [calculateDailyNorma]);\n  \n    useEffect(() => {\n      const handleKeyDown = e => {\n        if (e.code === 'Escape') {\n          onClose();\n        }\n      };\n  \n      window.addEventListener('keydown', handleKeyDown);\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget && e.button === 0) {\n      onClose();\n    }\n  };\n\n  const handleSave = async () => {\n    const requestData = {\n      // id: userId,\n      gender: gender,\n      weight: parseFloat(weight),\n      activityTime: parseFloat(activityTime),\n      willDrink: parseFloat(willDrink * 1000),\n      dailyNorma: parseFloat(dailyNorma * 1000),\n    };\n    dispatch(updateDailyNorma(requestData));\n    onClose();\n  };\n\nreturn (\n    <ModalOverlay onMouseDown={handleBackdropClick}>\n      <Modal className='dark-daily-norma-modal'>\n        <TopDiv>\n          <ModalHeader className='dark-daily-norma-text'>My daily norma</ModalHeader>\n          <CloseButton onClick={onClose}>&#10005;</CloseButton>\n        </TopDiv>\n\n        <FormulasBox>\n          <FormulaBox>\n            <LabelText className='dark-daily-norma-text'>Female:</LabelText>\n            <ColoredFormula>V=(M*0.03) + (T*0.4)</ColoredFormula>\n          </FormulaBox>\n          <FormulaBox>\n            <LabelText className='dark-daily-norma-text'>Male:</LabelText>\n            <ColoredFormula>V=(M*0.04) + (T*0.6)</ColoredFormula>\n          </FormulaBox>\n        </FormulasBox>\n\n        <CaptionBox>\n          <CaptionText>\n            <CaptionMark>*</CaptionMark> V is the volume of the water norm in liters per day, M is your body weight, T is the time\n            of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n          </CaptionText>\n        </CaptionBox>\n\n        <form>\n          <FormBigText className='dark-daily-norma-text'>Calculate your rate:</FormBigText>\n\n          <RadioButton>\n            <input\n              type=\"radio\"\n              id=\"woman\"\n              name=\"gender\"\n              value=\"woman\"\n              checked={gender === 'woman'}\n              onChange={() => handleGenderChange('woman')}\n            />\n            <label htmlFor=\"woman\">\n              <LabelText className='dark-daily-norma-text'>Female</LabelText>\n            </label>\n\n            <input\n              type=\"radio\"\n              id=\"man\"\n              name=\"gender\"\n              value=\"man\"\n              checked={gender === 'man'}\n              onChange={() => handleGenderChange('man')}\n            />\n            <label htmlFor=\"man\">\n              <LabelText className='dark-daily-norma-text'>Male</LabelText>\n            </label>\n          </RadioButton>\n\n          <label>\n            <InputText className='dark-daily-norma-text'>Your weight in kilograms:</InputText>\n          </label>\n            <WaterFormInput\n              type=\"text\"\n              value={weight}\n              onChange={handleWeightChange}\n              onFocus={handleWeightFocus}\n              onBlur={handleWeightBlur}\n              ref={weightInputRef}\n              defaultValue={weight === 0 ? '' : weight}\n              maxLength={4}\n\n              onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\", \"=\"].includes(e.key) && e.preventDefault()}\n            />\n\n          <label>\n            <InputText className='dark-daily-norma-text'>The time of active participation in sports or other activities with a high physical load in hours:</InputText>\n          </label>\n            <WaterFormInput\n              type=\"text\"\n              value={activityTime}\n              onChange={handleActivityTimeChange}\n              onFocus={handleActivityTimeFocus}\n              onBlur={handleActivityTimeBlur}\n              ref={activityTimeInputRef}\n              defaultValue={activityTime === 0 ? '' : activityTime}\n              maxLength={3}\n\n              onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n            />\n\n          <RequiredWaterBox>\n            <RequiredText className='dark-daily-norma-text'>The required amount of water in liters per day:</RequiredText>\n            <RequiredWater>{dailyNorma} L</RequiredWater>\n          </RequiredWaterBox>\n\n          <FormBigText className='dark-daily-norma-text'>Write down how much water you will drink:</FormBigText>\n          <WaterFormInput\n            type=\"text\"\n            value={willDrink}\n            onChange={handleWillDrinkChange}\n            onFocus={handleWillDrinkFocus}\n            onBlur={handleWillDrinkBlur}\n            ref={willDrinkInputRef}\n            defaultValue={willDrink === 0 ? '' : willDrink}\n            \n            maxLength={3}\n            \n            onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n          />\n          \n\n          <SaveButton type=\"button\" onClick={handleSave}>Save</SaveButton>\n        </form>\n      </Modal>\n    </ModalOverlay>\n  );\n};\n\nexport default DailyNormaModal;","export const selectDailyNormaData = state => state.dailyNorma.dailyNorma;\nexport const selectDailyNormaWeight = state => state.dailyNorma.weight;\nexport const selectDailyNormaGender = state => state.dailyNorma.gender;\nexport const selectDailyNormaActivity = state => state.dailyNorma.activityTime;\nexport const selectDailyNormaWillDrink = state => state.dailyNorma.willDrink;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './dailyNormaModal';\nimport { getDailyNorma } from '../../redux/dailyNorma/dailyNormaThunk';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DailyNormaBox,\n  DailyText,\n  RequiredWaterHeader,\n  BottomBox,\n  EditWaterButton,\n} from './dailyNorma.styled';\nimport { selectAuthUserData } from 'redux/auth/auth.selectors';\nimport {\n  selectDailyNormaActivity,\n  selectDailyNormaData,\n  selectDailyNormaGender,\n  selectDailyNormaWeight,\n  selectDailyNormaWillDrink,\n} from 'redux/dailyNorma/dailyNorma.selectors';\n\nexport const DailyNorma = () => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [dailyNorma, setDailyNorma] = useState(0);\n  const userId = useSelector(selectAuthUserData);\n  const genderData = useSelector(selectDailyNormaGender);\n  const weightData = useSelector(selectDailyNormaWeight);\n  const activityTimeData = useSelector(selectDailyNormaActivity);\n  const dailyNormaData = useSelector(selectDailyNormaData);\n  const willDrinkData = useSelector(selectDailyNormaWillDrink);\n\n  useEffect(() => {\n    dispatch(getDailyNorma(userId._id));\n    const fetchedDailyNorma = dailyNormaData;\n    console.log(fetchedDailyNorma);\n    const formattedAmount = parseFloat(fetchedDailyNorma / 1000).toFixed(1);\n    console.log(formattedAmount);\n    setDailyNorma(formattedAmount);\n  }, [dispatch, userId._id, dailyNormaData]);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  // let displayAmount = dailyNorma;\n  // if (dailyNorma >= 15) {\n  //   displayAmount = '99+';\n  // }\n\n  return (\n    <DailyNormaBox className=\"dark-daily-norma-box\">\n      <DailyText className=\"dark-daily-norma-text\">My daily norma</DailyText>\n      <BottomBox>\n        <RequiredWaterHeader>{dailyNorma} L</RequiredWaterHeader>\n        <EditWaterButton onClick={handleModalOpen}>Edit</EditWaterButton>\n      </BottomBox>\n\n      {isModalOpen && (\n        <Modal\n          onClose={handleModalClose}\n          genderData={genderData}\n          weightData={weightData}\n          activityTimeData={activityTimeData}\n          dailyNormaData={dailyNormaData}\n          willDrinkData={willDrinkData}\n          userId={userId._id}\n        />\n      )}\n    </DailyNormaBox>\n  );\n};\n","import styled from 'styled-components';\n\nimport mobile from '../img/home-background-mobile.svg';\nimport tablet from '../img/home-background-tablet.svg';\nimport desktop from '../img/home-background-desktop.svg';\nimport bottle from '../img/bottle.svg';\n\nexport const HomePageSection = styled.section`\n  @media screen and (max-width: 767px) {\n    padding: 0 20px;\n    position: relative;\n    height: 100%;\n\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -9;\n      background-image: url(${mobile});\n      background-repeat: no-repeat;\n\n      background-size: cover;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 44px 32px;\n    position: relative;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -10;\n      background-image: url(${tablet});\n      background-repeat: no-repeat;\n      background-size: cover;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    display: flex;\n    flex-direction: row;\n    overflow: hidden;\n    justify-content: space-between;\n    padding: 0 112px 40px 112px;\n    max-height: 100%;\n    &::before {\n      content: '';\n      position: absolute;\n      top: -170px;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -11;\n      background-image: url(${desktop});\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  @media screen and (max-width: 767px) {\n    position: relative;\n    min-height: 440px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 836px;\n\n      padding: 24px 8px;\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    min-height: 498px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 688px;\n\n      padding: 32px 24px;\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    position: relative;\n    width: 592px;\n    max-height: 680px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 680px;\n\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport const BottleImg = styled.div`\n  @media screen and (max-width: 767px) {\n    width: 218px;\n    height: 190px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n  @media screen and (min-width: 768px) {\n    width: 402px;\n    height: 352px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 570px;\n    height: 500px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n`;\n","import MonthStatsTable from 'components/MonthStatsTable/MonthStatsTable';\n\nimport { TodayWaterList } from 'components/TodayWaterList/TodayWaterList';\nimport { WaterRatioPanel } from 'components/WaterRatioPanel/WaterRatioPanel';\nimport { DailyNorma } from 'components/DailyNorma/dailyNorma';\nimport { BottleImg, ContentWrapper, HomePageSection } from './HomePage.styled';\n\nconst HomePage = () => {\n  return (\n    <>\n      <HomePageSection>\n        <ContentWrapper>\n          <DailyNorma />\n          <BottleImg className='dark-home-page-bottle' />\n          <WaterRatioPanel />\n        </ContentWrapper>\n        <ContentWrapper className=\"right-panel\">\n          <TodayWaterList />\n          <MonthStatsTable />\n        </ContentWrapper>\n      </HomePageSection>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["BoxModal","styled","_templateObject","_taggedTemplateLiteral","ButtonStyle","_templateObject2","ButtonBox","_templateObject3","TextStyle","_templateObject4","ModalHeader","_templateObject5","Overlay","ModalContent","CloseButton","CloseIcon","BoxAddModal","_templateObject6","PreviousInfo","_templateObject7","AddParagraph","_templateObject8","AddWater","_templateObject9","Water","_templateObject10","Label","_templateObject11","ButtonMl","_templateObject12","Icon","_templateObject13","AddTime","_templateObject14","InputTime","_templateObject15","Input","_templateObject16","FooterModal","_templateObject17","AddButtonSave","_templateObject18","CalendarStyle","ContentPopover","LoaderMonthWrapper","startOfMonth","date","_date","toDate","setDate","setHours","endOfMonth","month","getMonth","setFullYear","getFullYear","eachDayOfInterval","interval","options","_options$step","startDate","start","endDate","end","reversed","endTime","currentDate","step","dates","push","getDate","reverse","selectMonthWaterDetails","state","monthWater","selectIsLoadingMonthWater","isLoading","_useState","useState","Date","_useState2","_slicedToArray","setCurrentDate","_useState3","_useState4","selectedDate","setSelectedDate","isLoadingMonth","useSelector","console","log","d","formatDate","dispatch","useDispatch","useEffect","getMonthWater","handleChangeMonth","offset","prevDate","getFormattedDateWithTime","_jsxs","children","className","_jsx","onClick","width","height","href","icons","format","Loader","Popover","anchorOrigin","vertical","horizontal","transformOrigin","id","open","Boolean","anchorEl","onClose","PaperProps","elevation","transitionDuration","enter","exit","data","dateText","textContent","dateObj","formattedDateWithTime","length","waterInfo","find","item","_id","dailyNorma","persent","toFixed","perDay","renderPopover","_getMonthBounds","getMonthBounds","getMonthDays","map","_monthWater$find","e","target","selectTodayWater","waterDetails","today","selectDailyDrank","dailyDrank","selectIsLoadingList","selectOwnerId","ownerId","selectNorma","waterNorma","DeleteWaterModal","_ref","recordId","_Fragment","concat","dataDelete","deleteWaterThunk","then","error","TodayWrapper","TodayItem","TodayInfo","TodayTitle","Forget","TodayList","TodayVolume","TodayTime","IconGlass","TodayTools","ButtonChange","ButtonDelete","AddWaterBtn","LoaderWrapper","TodayListModal","isEditing","initialAmount","initialTime","existingRecordId","amount","setAmount","times","setTime","handleKeyDown","code","window","addEventListener","removeEventListener","formatTime","title","displayTime","prevAmount","Number","isNaN","type","value","onChange","newValue","startsWith","parseFloat","substring","onBlur","isoDate","toISOString","slice","_times$split","split","_times$split2","hours","minutes","currentDate2","newDate","getHours","getMinutes","waterData","waterVolume","time","editWaterThunk","_objectSpread","addWatersThunk","iconsList","edit","delete","glass","add","TodayWaterList","isModalOpen","setIsModalOpen","selectedWaterItem","setSelectedWaterItem","_useState5","_useState6","isDeleteWaterModalOpen","setDeleteWaterModalOpen","waterlist","isLoadingList","getTodayWater","undefined","openModalToEdit","openModalToDelete","WaterRatioPanelContainer","WaterRange","WaterRangeHeader","WaterRangeContainer","RateContainer","MiddleMark","StartMark","EndMark","AddWaterButton","WaterRatioPanel","dailyNorm","waterPercent","Math","round","isShow","readOnly","style","backgroundSize","limit","min","max","left","getPosition","onShow","ModalOverlay","Modal","TopDiv","FormulasBox","FormulaBox","LabelText","InputText","RequiredText","CaptionBox","ColoredFormula","CaptionMark","CaptionText","FormBigText","WaterFormInput","RequiredWaterBox","_templateObject19","RequiredWater","_templateObject20","SaveButton","_templateObject21","RadioButton","_templateObject22","DailyNormaBox","_templateObject23","DailyText","_templateObject24","RequiredWaterHeader","_templateObject25","BottomBox","_templateObject26","EditWaterButton","_templateObject27","genderData","weightData","activityTimeData","dailyNormaData","willDrinkData","userId","gender","setGender","weight","setWeight","activityTime","setActivityTime","_useState7","_useState8","setDailyNorma","_useState9","_useState10","willDrink","setWillDrink","weightInputRef","useRef","activityTimeInputRef","willDrinkInputRef","handleGenderChange","selectedGender","calculateDailyNorma","useCallback","userWeight","userActivity","formulaResult","handleSave","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","requestData","_context","prev","next","updateDailyNorma","stop","apply","arguments","onMouseDown","currentTarget","button","name","checked","htmlFor","numericValue","replace","onFocus","current","ref","defaultValue","maxLength","onKeyDown","includes","key","preventDefault","selectDailyNormaData","selectDailyNormaWeight","selectDailyNormaGender","selectDailyNormaActivity","selectDailyNormaWillDrink","DailyNorma","selectAuthUserData","getDailyNorma","fetchedDailyNorma","formattedAmount","HomePageSection","mobile","tablet","desktop","ContentWrapper","BottleImg","bottle","MonthStatsTable"],"sourceRoot":""}