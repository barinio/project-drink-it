{"version":3,"file":"static/js/453.7a36754f.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/LogInForm/LogIn.styled.js","components/LogInForm/LogIn.jsx","page/LoginPage.styled.js","page/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport mobileImg from '../../img/home-background-mobile.svg';\nimport tabletImg from '../../img/home-background-tablet.svg';\nimport desktopImg from '../../img/home-background-desktop.svg';\nimport bottle from '../../img/bottle.svg';\nexport const SectionWrapper = styled.section`\n  @media screen and (max-width: 767px) {\n    position: fixed;\n    height: 100%;\n\n    width: 100%;\n    background-image: url(${mobileImg});\n    background-position: center;\n\n    background-size: cover;\n    background-repeat: no-repeat;\n    &::before {\n      content: '';\n      position: absolute;\n      background-image: url(${bottle});\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -10%);\n      width: 218px;\n      height: 190px;\n      background-size: contain;\n      background-repeat: no-repeat;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    background-image: url(${tabletImg});\n    background-repeat: no-repeat;\n    background-size: cover;\n    z-index: -10;\n    &::before {\n      content: '';\n      width: 570px;\n      height: 500px;\n      position: absolute;\n      background-image: url(${bottle});\n      top: 50%;\n      left: 50%;\n      transform: translate(-32%, -70%);\n      background-size: cover;\n      background-repeat: no-repeat;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-height: 100%;\n    background-image: url(${desktopImg});\n    background-position: top;\n    background-size: contain;\n    z-index: -21;\n    &::before {\n      width: 710px;\n      height: 620px;\n      position: absolute;\n      background-image: url(${bottle});\n      top: 50%;\n      left: 45%;\n      transform: translate(-85%, -60%);\n      background-size: cover;\n      background-repeat: no-repeat;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    max-height: 100%;\n    &::before {\n      width: 710px;\n      height: 620px;\n      position: absolute;\n      background-image: url(${bottle});\n      top: 50%;\n      left: 45%;\n      transform: translate(-85%, -60%);\n      background-size: cover;\n      background-repeat: no-repeat;\n    }\n  }\n`;\n","import { SectionWrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <h2>{title}</h2>\n      {children}\n    </SectionWrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const FormStyle = styled.form`\n  @media screen and (max-width: 319px) {\n    display: flex;\n    flex-direction: column;\n    max-width: 280px;\n    margin: 0 auto;\n    h3 {\n      margin: 0 0 16px 0;\n      font-family: 'Roboto', sans-serif;\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.2;\n      color: var(--primery-color-black);\n    }\n\n    label {\n      margin-bottom: 8px;\n      font-family: 'Roboto', sans-serif;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.3;\n      color: var(--primery-color-black);\n    }\n    input {\n      font-family: 'Roboto', sans-serif;\n      font-size: 16px;\n      color: var(--secondary-color-blue);\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25;\n      border: none;\n      max-width: 234px;\n    }\n    div {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 12px 10px;\n      border-radius: 6px;\n      border: 1px solid var(--btn-color-light-blue);\n\n      background-color: var(--primery-color-white);\n    }\n    input:focus {\n      color: var(--primery-color-blue);\n      outline: none;\n    }\n    input::placeholder {\n      color: var(--secondary-color-blue);\n    }\n\n    span {\n      font-family: 'Roboto', sans-serif;\n      font-size: 14px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.28;\n      color: var(--btn-color-red);\n    }\n    button {\n      cursor: pointer;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.25;\n      display: flex;\n      padding: 10px 30px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 10px;\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n      background-color: var(--primery-color-blue);\n      border: none;\n      color: var(--primery-color-white);\n      margin-bottom: 16px;\n    }\n    button:hover,\n    button:focus {\n      box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    }\n    button:active {\n      box-shadow: none;\n    }\n    .icon-wrapper,\n    .icon-wrapper:hover,\n    .icon-wrapper:focus {\n      box-shadow: none;\n    }\n    a {\n      color: var(--primery-color-blue);\n      text-decoration: none;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25;\n    }\n    a:hover,\n    a:focus {\n      color: #ff9d43;\n    }\n    .inputWrapper {\n      display: block;\n      background-color: transparent;\n      padding: 0;\n      border-radius: 0;\n      border: none;\n      margin-bottom: 16px;\n    }\n    .icon-wrapper {\n      cursor: pointer;\n      padding: 0;\n      border-radius: none;\n      border: none;\n      margin-bottom: 0;\n      background-color: var(--primery-color-white);\n    }\n  }\n\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    max-width: 280px;\n    margin: 0 auto;\n    h3 {\n      margin: 0 0 16px 0;\n      font-family: 'Roboto', sans-serif;\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.2;\n      color: var(--primery-color-black);\n    }\n\n    label {\n      margin-bottom: 8px;\n      font-family: 'Roboto', sans-serif;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.3;\n      color: var(--primery-color-black);\n    }\n    input {\n      font-family: 'Roboto', sans-serif;\n      font-size: 16px;\n      color: var(--secondary-color-blue);\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25;\n      border: none;\n      width: 234px;\n    }\n    div {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 12px 10px;\n      border-radius: 6px;\n      border: 1px solid var(--btn-color-light-blue);\n\n      background-color: var(--primery-color-white);\n    }\n    input:focus {\n      color: var(--primery-color-blue);\n      outline: none;\n    }\n    input::placeholder {\n      color: var(--secondary-color-blue);\n    }\n\n    span {\n      font-family: 'Roboto', sans-serif;\n      font-size: 14px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.28;\n      color: var(--btn-color-red);\n    }\n    button {\n      cursor: pointer;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.25;\n      display: flex;\n      padding: 10px 30px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 10px;\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n      background-color: var(--primery-color-blue);\n      border: none;\n      color: var(--primery-color-white);\n      margin-bottom: 16px;\n    }\n    button:hover,\n    button:focus {\n      box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    }\n    button:active {\n      box-shadow: none;\n    }\n    .icon-wrapper,\n    .icon-wrapper:hover,\n    .icon-wrapper:focus {\n      box-shadow: none;\n    }\n    a {\n      color: var(--primery-color-blue);\n      text-decoration: none;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25;\n    }\n    a:hover,\n    a:focus {\n      color: #ff9d43;\n    }\n    .inputWrapper {\n      display: block;\n      background-color: transparent;\n      padding: 0;\n      border-radius: 0;\n      border: none;\n      margin-bottom: 16px;\n    }\n    .icon-wrapper {\n      cursor: pointer;\n      padding: 0;\n      border-radius: none;\n      border: none;\n      margin-bottom: 0;\n      background-color: var(--primery-color-white);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    margin: 0;\n    input {\n      width: 290px;\n    }\n    button {\n      cursor: pointer;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.3;\n      display: flex;\n      padding: 10px 30px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 10px;\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n      background-color: var(--primery-color-blue);\n      border: none;\n      color: var(--primery-color-white);\n      margin-bottom: 16px;\n    }\n    .icon-wrapper,\n    .icon-wrapper:hover,\n    .icon-wrapper:focus {\n      box-shadow: none;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    min-width: 384px;\n    margin-top: 140px;\n\n    input {\n      width: 334px;\n    }\n    .icon-wrapper,\n    .icon-wrapper:hover,\n    .icon-wrapper:focus {\n      box-shadow: none;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { FormStyle } from './LogIn.styled';\nimport * as Yup from 'yup';\nimport { NavLink } from 'react-router-dom';\nimport icons from '../../img/icons.svg';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/thunk';\n\nconst LogInForm = () => {\n  const [visible, setVisible] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .required('Email is required')\n      .email('Invalid email address'),\n    password: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(64, 'Password is too long')\n      .required('Password is requird'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: (values, { resetForm }) => {\n      console.log('onSubmit', values);\n      dispatch(loginThunk(values));\n      resetForm();\n    },\n    validationSchema: validationSchema,\n  });\n  return (\n    <FormStyle onSubmit={formik.handleSubmit}>\n      <h3>Sing In</h3>\n      <div className=\"inputWrapper\">\n        <label>Enter your email</label>\n        <div\n          style={{\n            borderColor:\n              formik.errors.email && formik.touched.email\n                ? '#ef5050'\n                : '#9ebbff',\n            marginBottom: 4,\n            color: '#ef5050',\n          }}\n        >\n          <input\n            type=\"email\"\n            placeholder=\"E-mail\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            style={{\n              color:\n                formik.errors.email && formik.touched.email\n                  ? '#ef5050'\n                  : '#407bff',\n            }}\n          />\n        </div>\n        <span>\n          {formik.errors.email && formik.touched.email && formik.errors.email}\n        </span>\n      </div>\n      <div className=\"inputWrapper\">\n        <label>Enter your password</label>\n        <div\n          style={{\n            borderColor:\n              formik.errors.password && formik.touched.password\n                ? '#ef5050'\n                : '#9ebbff',\n            marginBottom: 4,\n            color: '#ef5050',\n          }}\n        >\n          <input\n            type={visible ? 'text' : 'password'}\n            placeholder=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            style={{\n              color:\n                formik.errors.password && formik.touched.password\n                  ? '#ef5050'\n                  : '#407bff',\n            }}\n          />\n          <button className=\"icon-wrapper\" onClick={() => setVisible(!visible)}>\n            <svg width=\"16\" height=\"16\">\n              <use\n                href={\n                  visible\n                    ? icons + '#icon-opend-eye'\n                    : icons + '#icon-closed-eye'\n                }\n              ></use>\n            </svg>\n          </button>\n        </div>\n        <span>\n          {formik.errors.password &&\n            formik.touched.password &&\n            formik.errors.password}\n        </span>\n      </div>\n      <button type=\"submit\">Sign In</button>\n      <NavLink to=\"/signup\">Sign up</NavLink>\n    </FormStyle>\n  );\n};\n\nexport default LogInForm;\n","import styled from 'styled-components';\nimport mobileImg from '../img/background-img-mobile.png';\nimport tabletImg from '../img/background-img-tablet.png';\nimport desktopImg from '../img/background-img-desktop.png';\n\nexport const LoginSection = styled.section`\n  @media screen and (max-width: 767px) {\n    background-image: url(${mobileImg});\n    background-repeat: no-repeat;\n    background-position: center top 27px;\n    height: 100vh;\n  }\n  @media screen and (min-width: 768px) {\n    position: relative;\n    height: 100vh;\n    &::before {\n      content: '';\n      position: absolute;\n      top: -107px;\n      bottom: 0px;\n      left: 0px;\n      right: 0px;\n      background-image: url(${tabletImg});\n      background-repeat: no-repeat;\n      background-size: auto;\n      z-index: -1;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    height: 100vh;\n    &::before {\n      top: -272px;\n      background-image: url(${desktopImg});\n      background-position: center;\n    }\n  }\n`;\n\nexport const LoginContainer = styled.div`\n  @media screen and (max-width: 767px) {\n    max-width: 320px;\n    padding: 0 20px;\n\n    margin: 0 auto;\n    height: 100vh;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 32px;\n    margin: 0;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n    padding: 0 104px;\n\n    display: flex;\n    justify-content: flex-end;\n    margin: 0 auto;\n  }\n`;\n","import LogInForm from 'components/LogInForm/LogIn';\nimport { Section } from 'components/Section/Section';\n// import { LoginSection, LoginContainer } from './LoginPage.styled';\nimport { LoginContainer } from './LoginPage.styled';\n\nconst LogInPage = () => {\n  return (\n    // <LoginSection>\n    <Section>\n      <LoginContainer>\n        <LogInForm />\n      </LoginContainer>\n    </Section>\n    // </LoginSection>\n  );\n};\n\nexport default LogInPage;\n"],"names":["SectionWrapper","styled","_templateObject","_taggedTemplateLiteral","mobileImg","bottle","tabletImg","desktopImg","Section","_ref","title","children","_jsxs","_jsx","FormStyle","_useState","useState","_useState2","_slicedToArray","visible","setVisible","dispatch","useDispatch","validationSchema","Yup","email","required","password","min","max","formik","useFormik","initialValues","onSubmit","values","resetForm","console","log","loginThunk","handleSubmit","className","style","borderColor","errors","touched","marginBottom","color","type","placeholder","name","value","onChange","handleChange","onBlur","handleBlur","onClick","width","height","href","icons","NavLink","to","LoginContainer","_templateObject2","LogInForm"],"sourceRoot":""}