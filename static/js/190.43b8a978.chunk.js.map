{"version":3,"file":"static/js/190.43b8a978.chunk.js","mappings":"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","sources":["components/SignUpForm/SignUp.styled.js","components/SignUpForm/SignUp.jsx","page/RegistrationPage.styled.js","page/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SignupForm = styled.form`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    max-width: 280px;\n    h3 {\n      color: var(--primery-color-black);\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.2;\n\n      margin-bottom: 16px;\n    }\n    label {\n      color: var(--primery-color-black);\n      font-size: 18px;\n      line-height: 1.3;\n\n      margin-bottom: 8px;\n    }\n    div {\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 16px;\n    }\n    .password-wrapper {\n      display: flex;\n      align-items: center;\n      flex-direction: row;\n      justify-content: space-between;\n\n      padding: 12px 10px;\n      margin: 0;\n\n      border-radius: 6px;\n      background: var(--primery-color-white);\n    }\n    input {\n      border: none;\n      width: 234px;\n\n      color: var(--primery-color-blue);\n      line-height: 1.2;\n    }\n    input:focus {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n\n      outline: none;\n    }\n    input::placeholder {\n      color: var(--secondary-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n    }\n    .eye-icon,\n    .eye-icon:hover,\n    .eye-icon:focus {\n      background-color: transparent;\n      box-shadow: none;\n      padding: 0;\n      margin: 0;\n    }\n    svg {\n      fill: var(--primery-color-blue);\n    }\n    button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n      padding: 8px 30px;\n\n      border: none;\n      border-radius: 10px;\n      background: var(--primery-color-blue);\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n      color: var(--primery-color-white);\n      line-height: 1.2;\n      font-weight: 500;\n\n      margin-bottom: 16px;\n    }\n    button:active {\n      box-shadow: none;\n    }\n    button:hover,\n    button:focus {\n      box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    }\n    a {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n    }\n    a:hover,\n    a:focus {\n      color: #ff9d43;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    input {\n      width: 290px;\n    }\n    button {\n      font-size: 18px;\n      padding: 10px 30px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    min-width: 384px;\n    margin: 140px 112px 0 0;\n    input {\n      width: 338px;\n    }\n  }\n`;\nexport const ErrorMessage = styled.span`\n  @media screen and (min-width: 320px) {\n    color: var(--btn-color-red);\n    font-size: 14px;\n    line-height: 1.2;\n\n    margin-top: 8px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\nimport { SignupForm, ErrorMessage } from \"./SignUp.styled\";\nimport icons from '../../img/icons.svg';\nimport { useDispatch } from \"react-redux\";\nimport { signupThunk } from \"redux/auth/thunk\";\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const validEmailDomains = ['gmail.com', 'i.ua', 'yahoo.com', 'ukr.net'];\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Email is required').matches(\n    new RegExp(`@(${validEmailDomains.join('|')})$`),\n    'Invalid email domain'),\n      password: Yup.string().required('Password is required').min(8, 'Password must be at least 8 characters')\n      .max(64, 'Password must be at most 64 characters'),\n      repeatPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Password is required'),\n    }),\n    onSubmit: async ({ email, password }) => {\n      try {\n        console.log('Form data submitted:', { email, password });\n        dispatch(signupThunk({ email, password }));\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n  });\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <SignupForm onSubmit={formik.handleSubmit}>\n      <h3>Sign Up</h3>\n      <label>Enter your email</label>\n      <div>\n        <div className=\"password-wrapper\" style={{\n              border: formik.touched.email && formik.errors.email ? '1px solid var(--btn-color-red)' : '1px solid var(--secondary-color-blue)',\n            }}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"E-mail\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            style={{\n              color: formik.touched.email && formik.errors.email ? 'var(--btn-color-red)' : 'var(--primery-color-blue)',\n            }}\n          />\n        </div>\n      {formik.touched.email && formik.errors.email ? (\n        <ErrorMessage>{formik.errors.email}</ErrorMessage>\n        ) : null}\n      </div>\n\n      <label>Enter your password</label>\n      <div>\n        <div className=\"password-wrapper\" style={{\n              border: formik.touched.password && formik.errors.password ? '1px solid var(--btn-color-red)' : '1px solid var(--secondary-color-blue)',\n            }}>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            style={{\n              color: formik.touched.password && formik.errors.password ? 'var(--btn-color-red)' : 'var(--primery-color-blue)',\n            }}\n            />\n          <button type=\"button\" className=\"eye-icon\" onClick={togglePasswordVisibility}>\n            <svg width=\"16\" height=\"16\">\n              <use href={showPassword ? icons + '#icon-opend-eye' : icons + '#icon-closed-eye'}></use>\n            </svg>\n          </button>\n        </div>\n        {formik.touched.password && formik.errors.password ? (\n          <ErrorMessage>{formik.touched.password && formik.errors.password}</ErrorMessage>\n          ) : null}\n      </div>\n\n      <label>Repeat password</label>\n      <div>\n        <div className=\"password-wrapper\" style={{\n              border: formik.touched.password && formik.errors.password ? '1px solid var(--btn-color-red)' : '1px solid var(--secondary-color-blue)',\n        }}>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            name=\"repeatPassword\"\n            placeholder=\"Repeat password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.repeatPassword}\n            style={{\n              color: formik.touched.repeatPassword && formik.errors.repeatPassword ? 'var(--btn-color-red)' : 'var(--primery-color-blue)',\n            }}\n          />\n          <button type=\"button\" className=\"eye-icon\" onClick={togglePasswordVisibility}>\n            <svg width=\"16\" height=\"16\">\n              <use href={showPassword ? icons + '#icon-opend-eye' : icons + '#icon-closed-eye'}></use>\n            </svg>\n          </button>\n        </div>\n        {formik.touched.repeatPassword && formik.errors.repeatPassword ? (\n          <ErrorMessage>{formik.errors.repeatPassword}</ErrorMessage>\n          ) : null}\n      </div>\n\n      <button type=\"submit\">Sign Up</button>\n    <NavLink to=\"/signin\">Sign in</NavLink>\n  </SignupForm>\n  )\n};\n\nexport default SignUpForm;","import styled from 'styled-components';\nexport const SignupPage = styled.div`\n  @media screen and (min-width: 320px) {\n    max-width: 280px;\n    height: 600px;\n    padding: 0 20px;\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    margin: 0;\n    padding: 0 0 0 32px;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n    // padding: 60px 216px 0 600px;\n    // padding: 100px 104px 0 104px;\n    padding: 0 104px;\n    display: flex;\n    justify-content: flex-end;\n    margin: 0 auto;\n  }\n`;\n","import { Section } from 'components/Section/Section';\nimport SignUpForm from 'components/SignUpForm/SignUp';\nimport { SignupPage } from './RegistrationPage.styled';\n\nconst RegistrationPage = () => {\n  return (\n    <Section>\n      {/* <SignupWrapper> */}\n        <SignupPage>\n          <SignUpForm />\n        </SignupPage>\n      {/* </SignupWrapper> */}\n    </Section>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["SignupForm","styled","_templateObject","_taggedTemplateLiteral","ErrorMessage","_templateObject2","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","formik","useFormik","initialValues","email","password","repeatPassword","validationSchema","Yup","required","matches","RegExp","concat","join","min","max","oneOf","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","_context","prev","next","console","log","signupThunk","error","stop","_x","apply","arguments","togglePasswordVisibility","_jsxs","handleSubmit","children","_jsx","className","style","border","touched","errors","type","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","color","onClick","width","height","href","icons","NavLink","to","SignupPage","Section","SignUpForm"],"sourceRoot":""}