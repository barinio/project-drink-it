{"version":3,"file":"static/js/521.2786dbdd.chunk.js","mappings":"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","sources":["components/DeleteWaterModal/DeleteWaterModal.styled.js","components/Header/Header.styled.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/menu-style.js","components/Setting/Setting.styled.js","components/Setting/SettingForm.jsx","components/Setting/Setting.jsx","components/LogOut/LogOut.jsx","components/UserMenu/UserMenu.jsx","components/ThemeSwitcher/ThemeSwitcher.styled.js","components/ThemeSwitcher/ThemeSwitcher.jsx","components/Header/Header.jsx","components/Layout/Layout.jsx","components/SignUpForm/SignUp.styled.js","components/TodayListModal/TodayListModal.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BoxModal = styled.div`\n  padding: 0 24px 32px;\n`;\n\nexport const ButtonStyle = styled.button`\n  display: inline-block;\n  width: 100%;\n  padding: 8px 30px;\n  color: #fff;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  background-color: var(--btn-color-red);\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n  &:active {\n    box-shadow: none;\n  }\n\n  &:last-of-type {\n    color: var(--primery-color-blue);\n    background-color: var(--btn-color-light-blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    padding: 10px 30px;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n  }\n`;\n\nexport const TextStyle = styled.p`\n  font-size: 18px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-weight: 500;\n  margin-bottom: 24px;\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 32px 24px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HeaderSection = styled.header`\n  margin-bottom: 24px;\n  padding-bottom: 17px;\n  border-bottom: 3px solid transparent;\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n  @media (min-width: 1200px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const PrivatNav = styled.div``;\n\nexport const HeaderContainer = styled.div`\n  margin: auto;\n  padding: 8px 20px 0;\n\n  nav {\n    display: flex;\n    justify-content: space-between;\n    color: var(--primery-color-blue);\n    align-items: center;\n  }\n\n  @media (min-width: 768px) {\n    padding: 16px 32px 0;\n  }\n  @media (min-width: 1200px) {\n    padding: 12px 112px 0;\n  }\n`;\n\nexport const NavLinkLogo = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.17;\n  text-transform: uppercase;\n\n  span {\n    width: 58px;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavLinkSignin = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  line-height: 1.25;\n  span {\n    margin-right: 8px;\n  }\n`;\n\nexport const UserContainer = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 1.25;\n  span {\n    margin-right: 8px;\n  }\n`;\n\nexport const UserSvg = styled.svg`\n  fill: none;\n  stroke: var(--primery-color-black);\n`;\n\nexport const Avatar = styled.img`\n  margin-left: 8px;\n  border-radius: 50%;\n`;\n\nexport const ArrowDownSvg = styled.svg`\n  fill: var(--primery-color-black);\n  stroke: none;\n  margin-left: 4px;\n\n  &:is(:hover, :focus) {\n    fill: var(--primery-color-blue);\n  }\n`;\nexport const SettingSvg = styled.svg`\n  fill: none;\n  stroke: var(--primery-color-blue);\n`;\n","export const menuStyle = {\n  overflow: 'visible',\n  mt: 1.5,\n  '& .MuiPaper-root': {\n    borderRadius: '10px',\n    p: '16px',\n  },\n  '& .MuiMenu-list': {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '16px',\n    padding: '0',\n  },\n  '& .MuiMenuItem-root': {\n    p: 0,\n    gap: '8px',\n    minHeight: '20px',\n    height: '20px',\n    lineHeight: '1.25',\n    color: 'var(--primery-color-blue)',\n    '&:hover': {\n      color: 'var(--primery-color-black)',\n      backgroundColor: 'white',\n    },\n    '&:hover svg': { stroke: 'var(--primery-color-black)' },\n  },\n};\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.8);\n  width: 100%;\n  height: 100%;\n  opacity: 1;\n  visibility: visible;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 3;\n  overflow-y: auto;\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nexport const WrapperModal = styled.div`\n  position: relative;\n  top: 0;\n  width: 100%;\n  min-height: 112%;\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 40px;\n  left: 50%;\n  min-width: 280px;\n  padding: 32px 12px;\n  border-radius: 10px;\n  transform: translate(-50%, 0) scale(1);\n  background-color: var(--primery-color-white);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  h3 {\n    color: var(--primery-color-black);\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.11;\n    margin-bottom: 8px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 32px 24px;\n    min-width: 704px;\n  }\n`;\nexport const CaptionBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  h2 {\n    color: var(--primery-color-black);\n    font-size: 26px;\n    font-weight: 500;\n    line-height: 1.23;\n  }\n\n  button {\n    display: flex;\n    background: none;\n    border: none;\n    &:is(:hover, :focus) svg {\n      stroke: var(--primery-color-black);\n    }\n  }\n\n  svg {\n    fill: none;\n    stroke: var(--primery-color-blue);\n  }\n`;\n\nexport const PhotoBlock = styled.div`\n  div {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 24px;\n  }\n  img {\n    width: 80px;\n    height: 80px;\n    object-fit: cover;\n    object-position: center;\n    border-radius: 50%;\n  }\n  button {\n    display: flex;\n    background: none;\n    border: none;\n    gap: 8px;\n    color: var(--primery-color-blue);\n\n    &:is(:hover, :focus) {\n      color: var(--primery-color-black);\n    }\n    &:is(:hover, :focus) svg {\n      stroke: var(--primery-color-black);\n    }\n  }\n  svg {\n    fill: none;\n    stroke: var(--primery-color-blue);\n  }\n`;\nexport const SettingFormik = styled.form``;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 24px;\n  & > div {\n    min-width: 392px;\n    width: 392px;\n  }\n  @media (min-width: 768px) {\n    width: 392px;\n  }\n  @media (min-width: 1440px) {\n    flex-direction: row;\n    width: 1008px;\n    align-items: flex-end;\n  }\n`;\n\nexport const GenderPart = styled.div`\n  & > div {\n    display: flex;\n    gap: 24px;\n  }\n  margin-bottom: 24px;\n\n  @media (min-width: 1440px) {\n    margin-bottom: 52px;\n\n    h3 {\n      margin-bottom: 12px;\n    }\n  }\n`;\n\nexport const RadioLabel = styled.div`\n  label {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    color: var(--primery-color-black);\n    font-size: 16px;\n    line-height: 1.25;\n  }\n`;\n\nexport const InputHidden = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n  & + label svg {\n    fill: none;\n  }\n  &:checked + label svg {\n    fill: var(--primery-color-blue);\n  }\n`;\n\nexport const ContainerUserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const UserInfoBox = styled.div`\n  input {\n    padding: 12px 10px;\n\n    border-radius: 6px;\n    border: 1px solid #d7e3ff;\n    line-height: 1.25;\n    font-size: 16px;\n    color: var(--primery-color-blue);\n    width: 100%;\n\n    &:is(:focus-visible) {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: var(--primery-color-blue);\n    }\n  }\n`;\n\nexport const PasswordBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  & > div {\n    display: flex;\n    flex-direction: column;\n  }\n  h3 {\n    margin-bottom: 0;\n  }\n  h4 {\n    color: var(--primery-color-black);\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.25;\n    margin-bottom: 8px;\n  }\n\n  button {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    right: 10px;\n    top: 12px;\n    background: var(--primery-color-white);\n    text-transform: uppercase;\n    border: none;\n  }\n  svg {\n    fill: none;\n    stroke: var(--primery-color-black);\n    &:is(:hover, :focus, :active) {\n      stroke: var(--primery-color-blue);\n    }\n  }\n`;\n\nexport const PasswordInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  input {\n    padding: 12px 10px;\n    border-radius: 6px;\n    border: 1px solid var(--btn-color-light-blue);\n    line-height: 1.25;\n    font-size: 16px;\n    color: var(--secondary-color-blue);\n    &:is(:focus-visible) {\n      outline: none;\n    }\n    &::placeholder {\n      color: var(--secondary-color-blue);\n    }\n  }\n`;\n\nexport const BtnSettingSave = styled.div`\n  button {\n    width: 100%;\n    padding: 8px 30px;\n\n    border-radius: 10px;\n    background: var(--primery-color-blue);\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n    color: var(--primery-color-white);\n    font-weight: 500;\n    line-height: 1.25;\n    border: none;\n\n    @media (min-width: 768px) {\n      width: 100px;\n      padding: 10px 30px;\n\n      font-size: 18px;\n      line-height: 1.33;\n    }\n  }\n\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\nexport const InputUpload = styled.input`\n  opacity: 0;\n  position: absolute;\n`;\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  SettingFormik,\n  FormWrapper,\n  GenderPart,\n  RadioLabel,\n  InputHidden,\n  ContainerUserInfo,\n  UserInfoBox,\n  PasswordBox,\n  BtnSettingSave,\n  PasswordInputContainer,\n} from './Setting.styled';\nimport { ErrorMessage } from 'components/SignUpForm/SignUp.styled';\n\nimport icons from '../../img/icons.svg';\nimport { selectAuthUserData } from 'redux/auth/auth.selectors';\nimport { updUserInfoThunk } from 'redux/auth/thunk';\n\nconst SettingForm = ({ onClose, avatarURL }) => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectAuthUserData);\n\n  const [isMan, setIsMan] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const validEmailDomains = ['gmail.com', 'i.ua', 'yahoo.com', 'ukr.net'];\n\n  const validationSchema = Yup.object({\n    userName: Yup.string()\n      .min(2, 'User name must be at least 2 characters')\n      .max(64, 'User name must be at most 64 characters')\n      .required('User name is required'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is required')\n      .matches(new RegExp(`@(${validEmailDomains.join('|')})$`), 'Invalid email domain'),\n    password: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(64, 'Password must be at most 64 characters'),\n    newPassword: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(64, 'Password must be at most 64 characters'),\n    repeatPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], 'Passwords must match'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      gender: user.gender,\n      userName: user.userName,\n      email: user.email,\n      password: '',\n      newPassword: '',\n      repeatPassword: '',\n    },\n    validationSchema,\n    onSubmit: values => {\n      if (values.password === '' || values.newPassword === '') {\n        const { gender, userName, email } = values;\n        const userBody = { gender, userName, email, avatarURL };\n        dispatch(updUserInfoThunk(userBody));\n        // URL.revokeObjectURL(avatarURL);\n\n        return;\n      }\n\n      dispatch(updUserInfoThunk(values));\n      onClose();\n    },\n  });\n\n  const togglePasswordVisibility = () => setShowPassword(!showPassword);\n\n  useEffect(() => {\n    user.gender === 'man' && setIsMan(true);\n  }, [user]);\n\n  useEffect(() => {\n    formik.values.gender = isMan ? 'man' : 'woman';\n  }, [formik, isMan]);\n\n  return (\n    <SettingFormik onSubmit={formik.handleSubmit}>\n      <FormWrapper>\n        <div>\n          <GenderPart>\n            <h3>Your gender identity</h3>\n            <div>\n              <RadioLabel>\n                <InputHidden\n                  type=\"radio\"\n                  id=\"woman\"\n                  name=\"gender\"\n                  value=\"woman\"\n                  checked={!isMan}\n                  onChange={() => setIsMan(!isMan)}\n                />\n                <label htmlFor=\"woman\">\n                  <svg width=\"14\" height=\"14\">\n                    <use href={icons + '#icon-checkbox'}></use>\n                  </svg>\n                  Woman\n                </label>\n              </RadioLabel>\n\n              <RadioLabel>\n                <InputHidden\n                  type=\"radio\"\n                  id=\"man\"\n                  name=\"gender\"\n                  value=\"man\"\n                  checked={isMan}\n                  onChange={() => setIsMan(!isMan)}\n                />\n                <label htmlFor=\"man\">\n                  <svg width=\"14\" height=\"14\">\n                    <use href={icons + '#icon-checkbox'}></use>\n                  </svg>\n                  Man\n                </label>\n              </RadioLabel>\n            </div>\n          </GenderPart>\n\n          <ContainerUserInfo>\n            <UserInfoBox>\n              <h3>Your name</h3>\n              <input\n                type=\"text\"\n                name=\"userName\"\n                placeholder=\"Name\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.userName}\n                style={{\n                  color:\n                    formik.touched.userName && formik.errors.userName\n                      ? 'var(--btn-color-red)'\n                      : 'var(--primery-color-blue)',\n                }}\n              />\n              {formik.touched.userName && formik.errors.userName ? (\n                <ErrorMessage>{formik.errors.userName}</ErrorMessage>\n              ) : null}\n            </UserInfoBox>\n            <UserInfoBox>\n              <h3>E-mail</h3>\n              <input\n                type=\"text\"\n                placeholder=\"E-mail\"\n                name=\"email\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n                style={{\n                  color:\n                    formik.touched.email && formik.errors.email\n                      ? 'var(--btn-color-red)'\n                      : 'var(--primery-color-blue)',\n                }}\n              />\n            </UserInfoBox>\n            {formik.touched.email && formik.errors.email ? (\n              <ErrorMessage>{formik.errors.email}</ErrorMessage>\n            ) : null}\n          </ContainerUserInfo>\n        </div>\n\n        <PasswordBox>\n          <h3>Password</h3>\n          <div>\n            <h4>Outdated password:</h4>\n            <PasswordInputContainer>\n              <button\n                className=\"dark-icon-wrapper\"\n                type=\"button\"\n                onClick={togglePasswordVisibility}\n              >\n                <svg width=\"16\" height=\"16\">\n                  <use href={icons + (showPassword ? '#icon-opend-eye' : '#icon-closed-eye')}></use>\n                </svg>\n              </button>\n              <input\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Password\"\n                name=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.password}\n                style={{\n                  color:\n                    formik.touched.password && formik.errors.password\n                      ? 'var(--btn-color-red)'\n                      : 'var(--primery-color-blue)',\n                }}\n              />\n              {formik.touched.password && formik.errors.password ? (\n                <ErrorMessage>{formik.touched.password && formik.errors.password}</ErrorMessage>\n              ) : null}\n            </PasswordInputContainer>\n          </div>\n          <div>\n            <h4>New Password:</h4>\n            <PasswordInputContainer>\n              <button\n                className=\"dark-icon-wrapper\"\n                type=\"button\"\n                onClick={togglePasswordVisibility}\n              >\n                <svg width=\"16\" height=\"16\">\n                  <use href={icons + (showPassword ? '#icon-opend-eye' : '#icon-closed-eye')}></use>\n                </svg>\n              </button>\n              <input\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Password\"\n                name=\"newPassword\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.newPassword}\n                style={{\n                  color:\n                    formik.touched.newPassword && formik.errors.newPassword\n                      ? 'var(--btn-color-red)'\n                      : 'var(--primery-color-blue)',\n                }}\n              />\n              {formik.touched.newPassword && formik.errors.newPassword ? (\n                <ErrorMessage>\n                  {formik.touched.newPassword && formik.errors.newPassword}\n                </ErrorMessage>\n              ) : null}\n            </PasswordInputContainer>\n          </div>\n          <div>\n            <h4>Repeat new password:</h4>\n            <PasswordInputContainer>\n              <button\n                className=\"dark-icon-wrapper\"\n                type=\"button\"\n                onClick={togglePasswordVisibility}\n              >\n                <svg width=\"16\" height=\"16\">\n                  <use href={icons + (showPassword ? '#icon-opend-eye' : '#icon-closed-eye')}></use>\n                </svg>\n              </button>\n              <input\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Password\"\n                name=\"repeatPassword\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.repeatPassword}\n                style={{\n                  color:\n                    formik.touched.repeatPassword && formik.errors.repeatPassword\n                      ? 'var(--btn-color-red)'\n                      : 'var(--primery-color-blue)',\n                }}\n              />\n              {formik.touched.repeatPassword && formik.errors.repeatPassword ? (\n                <ErrorMessage>\n                  {formik.touched.repeatPassword && formik.errors.repeatPassword}\n                </ErrorMessage>\n              ) : null}\n            </PasswordInputContainer>\n          </div>\n        </PasswordBox>\n      </FormWrapper>\n      <BtnSettingSave>\n        <button type=\"submit\">Save</button>\n      </BtnSettingSave>\n    </SettingFormik>\n  );\n};\n\nexport default SettingForm;\n","import {\n  Backdrop,\n  WrapperModal,\n  Modal,\n  CaptionBlock,\n  PhotoBlock,\n  InputUpload,\n} from './Setting.styled';\n\nimport icons from '../../img/icons.svg';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAuthUserData } from 'redux/auth/auth.selectors';\nimport SettingForm from './SettingForm';\nimport { useState } from 'react';\n// import { updAvatarThunk } from 'redux/auth/thunk';\n\nconst Setting = ({ closeModal, onBackdrop }) => {\n  // const dispatch = useDispatch();\n  const user = useSelector(selectAuthUserData);\n\n  const [updateAvatar, setUpdateAvatar] = useState(null);\n\n  useEffect(() => {\n    const onEsc = e => e.key === 'Escape' && closeModal();\n    window.addEventListener('keydown', onEsc);\n    return () => window.removeEventListener('keydown', onEsc);\n  }, [closeModal]);\n\n  // const uploadFile = async imgUrl => {\n  //   try {\n  //     dispatch(updAvatarThunk(imgUrl));\n\n  // URL.revokeObjectURL(imgUrl);\n  //   } catch (error) {\n  //     console.error('Error uploading file:', error);\n  //   }\n  // };\n\n  const changeHandler = e => {\n    const file = e.target.files[0];\n    const imgUrl = URL.createObjectURL(file);\n    setUpdateAvatar(imgUrl);\n    // uploadFile(imgUrl);\n  };\n\n  return (\n    <>\n      <Backdrop className=\"backdrop\">\n        <WrapperModal onClick={onBackdrop}>\n          <Modal className=\"dark-settings-modal\">\n            <CaptionBlock>\n              <h2>Setting</h2>\n              <button type=\"button\" onClick={closeModal}>\n                <svg width=\"24\" height=\"24\">\n                  <use href={icons + '#icon-close-setting'}></use>\n                </svg>\n              </button>\n            </CaptionBlock>\n            <PhotoBlock>\n              <h3>Your photo</h3>\n              <div>\n                <img src={updateAvatar || user.avatarURL} alt=\"avatarName\" width={80} height={80} />\n                <div>\n                  <svg width=\"16\" height=\"16\">\n                    <use href={icons + '#icon-upload'}></use>\n                  </svg>\n                  <InputUpload accept=\"image/*\" type=\"file\" onChange={e => changeHandler(e)} />\n                  Upload a photo\n                </div>\n              </div>\n            </PhotoBlock>\n\n            <SettingForm onClose={closeModal} avatarURL={updateAvatar} />\n          </Modal>\n        </WrapperModal>\n      </Backdrop>\n    </>\n  );\n};\n\nexport default Setting;\n","import {\n  BoxModal,\n  ButtonBox,\n  ButtonStyle,\n  TextStyle,\n  ModalHeader,\n} from '../DeleteWaterModal/DeleteWaterModal.styled';\nimport icons from '../../img/icons.svg';\nimport {\n  Overlay,\n  ModalContent,\n  CloseButton,\n  CloseIcon,\n} from 'components/TodayListModal/TodayListModal.styled';\nimport { useEffect } from 'react';\n\nexport const LogOut = ({ onClose, onLogout }) => {\n  useEffect(() => {\n    const onEsc = e => e.key === 'Escape' && onClose();\n    window.addEventListener('keydown', onEsc);\n    return () => window.removeEventListener('keydown', onEsc);\n  }, [onClose]);\n  return (\n    <>\n      <Overlay className=\"overlay\" onClick={onClose} />\n      <ModalContent className=\"dark-logout-modal\">\n        <ModalHeader>\n          <h2>Log out</h2>\n          <CloseButton type=\"button\" onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxModal>\n            <TextStyle>Do you really want to leave?</TextStyle>\n            <ButtonBox>\n              <ButtonStyle className='dark-logout-button' type=\"button\" onClick={onLogout}>\n                Log out\n              </ButtonStyle>\n              <ButtonStyle type=\"button\" onClick={onClose}>\n                Cancel\n              </ButtonStyle>\n            </ButtonBox>\n          </BoxModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button } from '@mui/material';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport { selectAuthAuthenticated, selectAuthUserData } from 'redux/auth/auth.selectors';\n\nimport {\n  UserContainer,\n  NavLinkSignin,\n  UserSvg,\n  Avatar,\n  ArrowDownSvg,\n  SettingSvg,\n} from './UserMenu.styled';\n\nimport icons from '../../img/icons.svg';\n\nimport { menuStyle } from './menu-style';\n\nimport Setting from 'components/Setting/Setting';\nimport { LogOut } from 'components/LogOut/LogOut';\nimport { logoutThunk } from 'redux/auth/thunk';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n\n  const authenticated = useSelector(selectAuthAuthenticated);\n\n  const user = useSelector(selectAuthUserData);\n\n  const [isOpenSetting, setIsOpenSetting] = useState(false);\n  const [isSureLogOut, setIsSureLogOut] = useState(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => setAnchorEl(event.currentTarget);\n\n  const onLogout = () => {\n    dispatch(logoutThunk());\n    setIsSureLogOut(false);\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n\n    if (e.target.classList.contains('setting')) setIsOpenSetting(true);\n    if (e.target.classList.contains('logout')) setIsSureLogOut(true);\n  };\n\n  const onClose = () => setIsSureLogOut(false);\n  const closeModal = () => setIsOpenSetting(false);\n\n  useEffect(() => {\n    document.body.style.overflow = isOpenSetting || isSureLogOut ? 'hidden' : '';\n  }, [isOpenSetting, isSureLogOut]);\n\n  const onBackdrop = e => e.target === e.currentTarget && closeModal();\n\n  return (\n    <>\n      {authenticated ? (\n        <>\n          <UserContainer to=\"signin\">\n            {user.userName}\n            <Avatar src={user.avatarURL} alt={user.userName} width=\"28\" height=\"28\" />\n\n            <Button\n              id=\"basic-button\"\n              aria-controls={open ? 'basic-menu' : undefined}\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n              onClick={handleClick}\n              sx={{\n                padding: '0',\n                minWidth: '16px',\n              }}\n            >\n              <ArrowDownSvg className='dark-icon-arrow' width=\"16\" height=\"16\">\n                <use href={icons + '#icon-arrow-down'}></use>\n              </ArrowDownSvg>\n            </Button>\n            <Menu\n              anchorEl={anchorEl}\n              id=\"account-menu\"\n              open={open}\n              onClick={handleClose}\n              sx={menuStyle}\n              transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n              anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n            >\n              <MenuItem className=\"setting\" onClick={handleClose}>\n                <SettingSvg width=\"16\" height=\"16\">\n                  <use href={icons + '#icon-cog-tooth'}></use>\n                </SettingSvg>\n                Settings\n              </MenuItem>\n              <MenuItem className=\"logout\" onClick={handleClose}>\n                <SettingSvg width=\"16\" height=\"16\">\n                  <use href={icons + '#icon-log-out'}></use>\n                </SettingSvg>\n                Log out\n              </MenuItem>\n            </Menu>\n          </UserContainer>\n          {isOpenSetting && <Setting closeModal={closeModal} onBackdrop={onBackdrop} />}\n          {isSureLogOut && <LogOut onClose={onClose} onLogout={onLogout} />}\n        </>\n      ) : (\n        <NavLinkSignin to=\"signin\">\n          <span>Sign in</span>\n          <UserSvg className='dark-user-menu' width=\"28\" height=\"28\">\n            <use href={icons + '#icon-user'}></use>\n          </UserSvg>\n        </NavLinkSignin>\n      )}\n    </>\n  );\n};\n\nexport default UserMenu;\n","import styled from 'styled-components';\nimport sun from '../../img/sun.png';\nimport moon from '../../img/moon.png';\nimport clouds from '../../img/cloudy.png';\n\nexport const SwitcherWrapp = styled.label`\n  display: block;\n  position: relative;\n\n  width: 40px;\n  height: 24px;\n\n  .switcher {\n    height: 0;\n    width: 0;\n    opacity: 0;\n  }\n  .switcher-slider {\n    position: absolute;\n    left: 0;\n    bottom: 8.33%;\n    top: 8.33%;\n    right: 0;\n\n    border-radius: 30px;\n    background-color: #d8f5ff;\n    background-image: url(${clouds});\n    background-size: 17px;\n    background-repeat: no-repeat;\n    background-position: 19px;\n    cursor: pointer;\n    transition: background-image 350ms cubic-bezier(0.4, 0, 0.2, 1),\n      background-position 350ms cubic-bezier(0.4, 0, 0.2, 1),\n      background-size 350ms cubic-bezier(0.4, 0, 0.2, 1),\n      background-color 450ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .switcher-slider::before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    right: 52.5%;\n    bottom: 12.5%;\n    left: auto;\n\n    height: 24px;\n    width: 24px;\n    background-image: url(${sun});\n    background-size: cover;\n    border-radius: 50%;\n    cursor: pointer;\n    transition: transform 450ms cubic-bezier(0.4, 0, 0.2, 1),\n      background-image 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .switcher:checked + .switcher-slider::before {\n    transform: translateX(25px) rotate(346deg);\n    background-image: url(${moon});\n    transition: transform 450ms cubic-bezier(0.4, 0, 0.2, 1),\n      background-image 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  .switcher:checked + .switcher-slider {\n    background-color: #2f4e90;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { SwitcherWrapp } from './ThemeSwitcher.styled';\n\nexport const ThemeSwitcher = () => {\n    const [isDarkTheme, setIsDarkTheme] = useState(false);\n\n    const toggleTheme = () => {\n      setIsDarkTheme((prevTheme) => !prevTheme);\n      const newTheme = !isDarkTheme ? 'dark' : 'light';\n      document.body.dataset.theme = newTheme;\n      localStorage.setItem('theme', newTheme);\n    };\n    useEffect(() => {\n      const savedTheme = localStorage.getItem('theme');\n      const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    if (savedTheme) {\n      document.body.dataset.theme = savedTheme;\n      setIsDarkTheme(savedTheme === 'dark');\n     } else {\n      document.body.dataset.theme = prefersDarkMode ? 'dark' : 'light';\n      setIsDarkTheme(prefersDarkMode);\n    }\n  }, []);\n\n    return (\n      <>\n          <SwitcherWrapp className='switcher-wrapp'>\n            <input type=\"checkbox\" className='switcher' onChange={toggleTheme}\n              checked={isDarkTheme} />\n            <span className=\"switcher-slider\"></span>\n          </SwitcherWrapp>\n      </>\n    )\n}\n\nexport default ThemeSwitcher;","import { useSelector } from 'react-redux';\nimport {\n  HeaderSection,\n  HeaderContainer,\n  NavLinkLogo,\n  PrivatNav,\n} from './Header.styled';\nimport { selectAuthAuthenticated } from 'redux/auth/auth.selectors';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport ThemeSwitcher from 'components/ThemeSwitcher/ThemeSwitcher';\n\nimport icons from '../../img/icons.svg';\n\nexport const Header = () => {\n  const authenticated = useSelector(selectAuthAuthenticated);\n\n  return (\n    <>\n      <HeaderSection>\n        <HeaderContainer>\n          <nav>\n            {authenticated ? (\n              <PrivatNav>\n                <NavLinkLogo to=\"home\">\n                  <svg width=\"40\" height=\"48\">\n                    <use href={icons + '#icon-logo'}></use>\n                  </svg>\n                  Tracker of water\n                </NavLinkLogo>\n              </PrivatNav>\n            ) : (\n              <>\n                <NavLinkLogo to=\"/\">\n                  <svg width=\"40\" height=\"48\">\n                    <use href={icons + '#icon-logo'}></use>\n                  </svg>\n                  <span>Tracker of water</span>\n                </NavLinkLogo>\n              </>\n            )}\n            <ThemeSwitcher />\n            <UserMenu />\n          </nav>\n        </HeaderContainer>\n      </HeaderSection>\n    </>\n  );\n};\n","import { Header } from 'components/Header/Header';\nimport Loader from 'components/Loader/Loader';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst Layout = () => {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const SignupForm = styled.form`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    max-width: 280px;\n    h3 {\n      color: var(--primery-color-black);\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.2;\n\n      margin-bottom: 16px;\n    }\n    label {\n      color: var(--primery-color-black);\n      font-size: 18px;\n      line-height: 1.3;\n\n      margin-bottom: 8px;\n    }\n    div {\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 16px;\n    }\n    .password-wrapper {\n      display: flex;\n      align-items: center;\n      flex-direction: row;\n      justify-content: space-between;\n\n      padding: 12px 10px;\n      margin: 0;\n\n      border-radius: 6px;\n      background: var(--primery-color-white);\n    }\n    input {\n      border: none;\n      width: 234px;\n\n      color: var(--primery-color-blue);\n      line-height: 1.2;\n    }\n    input:focus {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n\n      outline: none;\n    }\n    input::placeholder {\n      color: var(--secondary-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n    }\n    .eye-icon,\n    .eye-icon:hover,\n    .eye-icon:focus {\n      background-color: transparent;\n      box-shadow: none;\n      padding: 0;\n      margin: 0;\n    }\n    svg {\n      fill: var(--primery-color-blue);\n    }\n    button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n      padding: 8px 30px;\n\n      border: none;\n      border-radius: 10px;\n      background: var(--primery-color-blue);\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n      color: var(--primery-color-white);\n      line-height: 1.2;\n      font-weight: 500;\n\n      margin-bottom: 16px;\n    }\n    button:active {\n      box-shadow: none;\n    }\n    button:hover,\n    button:focus {\n      box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    }\n    a {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n    }\n    a:hover,\n    a:focus {\n      color: #ff9d43;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    input {\n      width: 290px;\n    }\n    button {\n      font-size: 18px;\n      padding: 10px 30px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    min-width: 384px;\n    margin: 140px 0 0 0;\n    input {\n      width: 338px;\n    }\n  }\n`;\nexport const ErrorMessage = styled.span`\n  @media screen and (min-width: 320px) {\n    color: var(--btn-color-red);\n    font-size: 14px;\n    line-height: 1.2;\n\n    margin-top: 8px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  position: fixed;\n  padding: 0;\n  margin: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  &.base-modal-enter {\n    opacity: 0;\n  }\n\n  &.base-modal-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in-out;\n  }\n\n  &.base-modal-exit {\n    opacity: 1;\n  }\n\n  &.base-modal-exit-active {\n    opacity: 0;\n    transition: opacity 300ms ease-in-out 200ms;\n  }\n`;\nexport const ModalContent = styled.div`\n  translate: -50% -50%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  min-width: 280px;\n  max-height: 90vh;\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: auto;\n  z-index: 1200;\n\n  @media screen and (min-width: 768px) {\n    min-width: 592px;\n  }\n\n  &.modal-content-enter {\n    opacity: 0;\n    scale: 0.5;\n  }\n\n  &.modal-content-enter-active {\n    opacity: 1;\n    scale: 1;\n    transition: opacity 300ms ease-in-out 200ms, scale 200ms ease-in-out 200ms;\n  }\n\n  &.modal-content-exit {\n    opacity: 1;\n    scale: 1;\n  }\n\n  &.modal-content-exit-active {\n    opacity: 0;\n    scale: 0.5;\n    transition: opacity 300ms ease-in-out, scale 200ms ease-in-out;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 12px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 100%;\n  height: 100%;\n  stroke: var(--primery-color-blue);\n\n  &:hover,\n  &:focus {\n    stroke: var(--secondary-yellow);\n  }\n`;\n\nexport const BoxAddModal = styled.div`\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n\n  h3 {\n    margin-bottom: 16px;\n    color: var(--primery-color-black);\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.1;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 704px;\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-width: 592px;\n  }\n`;\n\nexport const PreviousInfo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 24px;\n  gap: 12px;\n  border-radius: 10px;\n  background-color: var(--bg-color-light-blue);\n  width: 254px;\n  margin-bottom: 24px;\n`;\n\nexport const AddParagraph = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 12px;\n`;\n\nexport const AddWater = styled.div`\n  margin-bottom: 24px;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const Water = styled.p`\n  color: var(--primery-color-blue);\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  width: 92px;\n  height: 36px;\n`;\n\nexport const Label = styled.div`\n  border-radius: 40px;\n  background: var(--btn-color-light-blue);\n  padding-left: 10px;\n  padding-right: 16px;\n  margin-left: 10px;\n  margin-right: 10px;\n`;\n\nexport const ButtonMl = styled.button`\n  background-color: var(--primery-color-white);\n  color: var(--primery-color-blue);\n  border-radius: 30px;\n  border: 1px solid var(--secondary-color-blue);\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  padding: 4px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover &:focus {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--primery-color-blue);\n`;\n\nexport const AddTime = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const InputTime = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  &::placeholder {\n    color: var(--primery-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const Input = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &::placeholder {\n    color: var(--secondary-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const FooterModal = styled.div`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  span {\n    color: var(--primery-color-blue);\n    text-align: center;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.33;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: end;\n    align-items: center;\n    gap: 24px;\n    margin-top: 24px;\n  }\n`;\n\nexport const AddButtonSave = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  background-color: var(--primery-color-blue);\n  color: #fff;\n  padding: 10px 30px;\n  border-radius: 10px;\n  font-size: 18px;\n  width: 100%;\n  height: 44px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: background-color 250ms cubic-bezier(0.165, 0.84, 0.44, 1.03);\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n`;\n"],"names":["BoxModal","styled","_templateObject","_taggedTemplateLiteral","ButtonStyle","_templateObject2","ButtonBox","_templateObject3","TextStyle","_templateObject4","ModalHeader","_templateObject5","HeaderSection","PrivatNav","HeaderContainer","NavLinkLogo","NavLink","NavLinkSignin","UserContainer","UserSvg","Avatar","ArrowDownSvg","SettingSvg","_templateObject6","menuStyle","overflow","mt","borderRadius","p","display","flexDirection","gap","padding","minHeight","height","lineHeight","color","backgroundColor","stroke","Backdrop","WrapperModal","Modal","CaptionBlock","PhotoBlock","SettingFormik","FormWrapper","_templateObject7","GenderPart","_templateObject8","RadioLabel","_templateObject9","InputHidden","_templateObject10","ContainerUserInfo","_templateObject11","UserInfoBox","_templateObject12","PasswordBox","_templateObject13","PasswordInputContainer","_templateObject14","BtnSettingSave","_templateObject15","InputUpload","_templateObject16","_ref","onClose","avatarURL","dispatch","useDispatch","user","useSelector","selectAuthUserData","_useState","useState","_useState2","_slicedToArray","isMan","setIsMan","_useState3","_useState4","showPassword","setShowPassword","validationSchema","Yup","userName","min","max","required","email","matches","RegExp","concat","join","password","newPassword","repeatPassword","oneOf","formik","useFormik","initialValues","gender","onSubmit","values","updUserInfoThunk","userBody","togglePasswordVisibility","useEffect","_jsxs","handleSubmit","children","_jsx","type","id","name","value","checked","onChange","htmlFor","width","href","icons","placeholder","handleChange","onBlur","handleBlur","style","touched","errors","ErrorMessage","className","onClick","closeModal","onBackdrop","updateAvatar","setUpdateAvatar","onEsc","e","key","window","addEventListener","removeEventListener","_Fragment","src","alt","accept","file","target","files","imgUrl","URL","createObjectURL","changeHandler","SettingForm","LogOut","onLogout","Overlay","ModalContent","CloseButton","CloseIcon","authenticated","selectAuthAuthenticated","isOpenSetting","setIsOpenSetting","isSureLogOut","setIsSureLogOut","_useState5","_useState6","anchorEl","setAnchorEl","open","Boolean","handleClose","classList","contains","document","body","to","Button","undefined","event","currentTarget","sx","minWidth","Menu","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","Setting","logoutThunk","SwitcherWrapp","sun","moon","isDarkTheme","setIsDarkTheme","savedTheme","localStorage","getItem","prefersDarkMode","matchMedia","dataset","theme","prevTheme","newTheme","setItem","Header","ThemeSwitcher","UserMenu","Suspense","fallback","Loader","Outlet","SignupForm","BoxAddModal","PreviousInfo","AddParagraph","AddWater","Water","Label","ButtonMl","Icon","AddTime","InputTime","Input","FooterModal","_templateObject17","AddButtonSave","_templateObject18"],"sourceRoot":""}