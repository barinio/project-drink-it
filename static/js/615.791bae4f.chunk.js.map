{"version":3,"file":"static/js/615.791bae4f.chunk.js","mappings":"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","sources":["components/DeleteWaterModal/DeleteWaterModal.styled.js","components/TodayListModal/TodayListModal.styled.js","components/MonthStatsTable/MonthStatsTable.styled.js","../node_modules/date-fns/startOfMonth.mjs","../node_modules/date-fns/endOfMonth.mjs","../node_modules/date-fns/eachDayOfInterval.mjs","redux/monthWater/monthWaterselectors.js","redux/waterDetails/waterSelectors.js","../node_modules/date-fns/isSameDay.mjs","../node_modules/date-fns/isToday.mjs","components/MonthStatsTable/MonthStatsTable.jsx","components/DeleteWaterModal/DeleteWaterModal.jsx","components/TodayWaterList/TodayWaterList.styled.js","components/TodayListModal/TodayListModal.jsx","components/TodayWaterList/TodayWaterList.jsx","components/WaterRatioPanel/WaterRatioPanel.styled.js","components/WaterRatioPanel/WaterRatioPanel.jsx","components/DailyNorma/dailyNorma.styled.js","components/DailyNorma/dailyNormaModal.jsx","redux/dailyNorma/dailyNorma.selectors.js","components/DailyNorma/dailyNorma.jsx","page/HomePage.styled.js","page/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BoxModal = styled.div`\n  padding: 0 24px 32px;\n`;\n\nexport const ButtonStyle = styled.button`\n  display: inline-block;\n  width: 100%;\n  padding: 8px 30px;\n  color: #fff;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  background-color: var(--btn-color-red);\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n  &:active {\n    box-shadow: none;\n  }\n\n  &:last-of-type {\n    color: var(--primery-color-blue);\n    background-color: var(--btn-color-light-blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    padding: 10px 30px;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n  }\n`;\n\nexport const TextStyle = styled.p`\n  font-size: 18px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-weight: 500;\n  margin-bottom: 24px;\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 32px 24px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  position: fixed;\n  padding: 0;\n  margin: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  &.base-modal-enter {\n    opacity: 0;\n  }\n\n  &.base-modal-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in-out;\n  }\n\n  &.base-modal-exit {\n    opacity: 1;\n  }\n\n  &.base-modal-exit-active {\n    opacity: 0;\n    transition: opacity 300ms ease-in-out 200ms;\n  }\n`;\nexport const ModalContent = styled.div`\n  translate: -50% -50%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  min-width: 280px;\n  max-height: 90vh;\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: auto;\n  z-index: 1200;\n\n  @media screen and (min-width: 768px) {\n    min-width: 592px;\n  }\n\n  &.modal-content-enter {\n    opacity: 0;\n    scale: 0.5;\n  }\n\n  &.modal-content-enter-active {\n    opacity: 1;\n    scale: 1;\n    transition: opacity 300ms ease-in-out 200ms, scale 200ms ease-in-out 200ms;\n  }\n\n  &.modal-content-exit {\n    opacity: 1;\n    scale: 1;\n  }\n\n  &.modal-content-exit-active {\n    opacity: 0;\n    scale: 0.5;\n    transition: opacity 300ms ease-in-out, scale 200ms ease-in-out;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 12px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 100%;\n  height: 100%;\n  stroke: var(--primery-color-blue);\n\n  &:hover,\n  &:focus {\n    stroke: var(--secondary-yellow);\n  }\n`;\n\nexport const BoxAddModal = styled.div`\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n\n  h3 {\n    margin-bottom: 16px;\n    color: var(--primery-color-black);\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.1;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 704px;\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-width: 592px;\n  }\n`;\n\nexport const PreviousInfo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 24px;\n  gap: 12px;\n  border-radius: 10px;\n  background-color: var(--bg-color-light-blue);\n  width: 254px;\n  margin-bottom: 24px;\n`;\n\nexport const AddParagraph = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 12px;\n`;\n\nexport const AddWater = styled.div`\n  margin-bottom: 24px;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const Water = styled.p`\n  color: var(--primery-color-blue);\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  width: 92px;\n  height: 36px;\n`;\n\nexport const Label = styled.div`\n  border-radius: 40px;\n  background: var(--btn-color-light-blue);\n  padding-left: 10px;\n  padding-right: 16px;\n  margin-left: 10px;\n  margin-right: 10px;\n`;\n\nexport const ButtonMl = styled.button`\n  background-color: var(--primery-color-white);\n  color: var(--primery-color-blue);\n  border-radius: 30px;\n  border: 1px solid var(--secondary-color-blue);\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  padding: 4px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover &:focus {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--primery-color-blue);\n`;\n\nexport const AddTime = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const InputTime = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  &::placeholder {\n    color: var(--primery-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const Input = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &::placeholder {\n    color: var(--secondary-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const FooterModal = styled.div`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  span {\n    color: var(--primery-color-blue);\n    text-align: center;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.33;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: end;\n    align-items: center;\n    gap: 24px;\n    margin-top: 24px;\n  }\n`;\n\nexport const AddButtonSave = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  background-color: var(--primery-color-blue);\n  color: #fff;\n  padding: 10px 30px;\n  border-radius: 10px;\n  font-size: 18px;\n  width: 100%;\n  height: 44px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: background-color 250ms cubic-bezier(0.165, 0.84, 0.44, 1.03);\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CalendarStyle = styled.div`\n  .header {\n    display: flex;\n    justify-content: space-between;\n    padding-bottom: 16px;\n  }\n\n  .sectionText {\n    color: var(--primery-color-black);\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 30px;\n  }\n  .month {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: repeat(7, 0.5fr);\n    gap: 10px;\n  }\n  .monthNav {\n    display: flex;\n    align-items: center;\n  }\n\n  .navBtn {\n    display: flex;\n    border: 1px solid transparent;\n    background-color: transparent;\n    border-radius: 50%;\n    justify-content: center;\n    transition: border-radius background-color stroke 0.3s;\n  }\n  .navBtn:hover {\n    background-color: var(--primery-color-white);\n    border: 1px solid var(--calendar-color-orange);\n  }\n  .dateText {\n    color: var(--primery-color-blue);\n    width: 130px;\n    text-align: center;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 20px;\n  }\n  .calendarDayBtn {\n    width: 34px;\n    height: 34px;\n    border-radius: 20px;\n    border: none;\n    background-color: var(--primery-color-white);\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 20px;\n    transition: all 0.3s;\n  }\n  .calendarDayBtn:hover {\n    background-color: var(--secondary-color-blue);\n  }\n\n  .today {\n    background-color: var(--secondary-color-blue);\n  }\n\n  .day {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    align-items: center;\n  }\n  .progressWaterText {\n    color: var(--secondary-color-blue);\n    font-size: 13px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 20px;\n  }\n\n  .border {\n    border: 1px solid var(--calendar-color-orange);\n  }\n\n  .border-green {\n    border: 1px solid var(--calendar-color-green);\n  }\n\n  @media screen and (min-width: 768px) {\n    .month {\n      grid-template-columns: repeat(10, 1fr);\n      grid-template-rows: repeat(4, 1fr);\n    }\n    .sectionText {\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const ContentPopover = styled.div`\n  @media screen and (min-width: 320px) {\n    position: relative;\n    display: inline-flex;\n    padding: 24px 13px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n\n    .closeBtnPopover {\n      position: absolute;\n      top: 26px;\n      right: 13px;\n      border: none;\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n    }\n    .datePopover {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .datePopoverText {\n      color: var(--primery-color-black);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .popoverColorText {\n      color: var(--primery-color-blue);\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 24px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const ContentPopoverErr = styled.div`\n  @media screen and (min-width: 320px) {\n    position: relative;\n    display: inline-flex;\n    padding: 24px 30px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n\n    .closeBtnPopover {\n      position: absolute;\n      top: 13px;\n      right: 13px;\n      border: none;\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n    }\n    .datePopover {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .errText {\n      color: var(--primery-color-black);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 30px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const LoaderMonthWrapper = styled.div`\n  position: relative;\n  height: 437px;\n  @media screen and (min-width: 768px) {\n    height: 262px;\n  }\n`;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date) {\n  const _date = toDate(date);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link eachDayOfInterval} function options.\n */\n\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of days from the day of the interval start to the day of the interval end\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport function eachDayOfInterval(interval, options) {\n  const startDate = toDate(interval.start);\n  const endDate = toDate(interval.end);\n\n  let reversed = +startDate > +endDate;\n  const endTime = reversed ? +startDate : +endDate;\n  const currentDate = reversed ? endDate : startDate;\n  currentDate.setHours(0, 0, 0, 0);\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+currentDate <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachDayOfInterval;\n","export const selectMonthWaterDetails = state => state.monthWater.month;\nexport const selectIsLoadingMonthWater = state => state.monthWater.isLoading;\n","export const selectTodayWater = state => state.waterDetails.today;\nexport const selectMonthWater = state => state.waterDetails.month;\nexport const selectDailyDrank = state => state.waterDetails.dailyDrank;\nexport const selectIsLoadingList = state => state.waterDetails.isLoading;\nexport const selectOwnerId = state => state.waterDetails.ownerId;\nexport const selectNorma = state => state.dailyNorma.dailyNorma;\n","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { isSameDay } from \"./isSameDay.mjs\";\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date) {\n  return isSameDay(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import React, { useState, useEffect } from 'react';\nimport {\n  CalendarStyle,\n  ContentPopover,\n  ContentPopoverErr,\n  LoaderMonthWrapper,\n} from './MonthStatsTable.styled';\nimport icons from '../../img/icons.svg';\nimport { Popover } from '@mui/material';\nimport { format, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\nimport { getMonthWater } from 'redux/monthWater/monthWaterThunk';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoadingMonthWater,\n  selectMonthWaterDetails,\n} from 'redux/monthWater/monthWaterselectors';\nimport { formatDate } from 'redux/waterDetails/helpers';\nimport Loader from 'components/Loader/Loader';\n\nimport {\n  selectIsLoadingList,\n  selectNorma,\n  selectTodayWater,\n} from 'redux/waterDetails/waterSelectors';\n\nimport { isToday } from 'date-fns';\nimport { useTranslation } from 'react-i18next';\n\nconst MonthStatsTable = () => {\n  const { t } = useTranslation();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  const isLoadingMonth = useSelector(selectIsLoadingMonthWater);\n  const monthWater = useSelector(selectMonthWaterDetails);\n\n  const { waterlist } = useSelector(selectTodayWater);\n  const isLoadingList = useSelector(selectIsLoadingList);\n\n  const currentMonth = format(currentDate, 'MMMM');\n  const currentYear = format(currentDate, 'yyyy');\n  console.log(currentMonth);\n  const dailyNorm = useSelector(selectNorma);\n\n  const d = formatDate(currentDate);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMonthWater(d));\n  }, [dispatch, d, waterlist, dailyNorm, isLoadingList]);\n\n  const handleChangeMonth = offset => {\n    setCurrentDate(\n      prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() + offset)\n    );\n  };\n\n  const getMonthBounds = date => {\n    return {\n      start: startOfMonth(date),\n      end: endOfMonth(date),\n    };\n  };\n\n  const getBorderStyle = percentage => {\n    if (percentage !== 0 && percentage < 100) {\n      return 'border';\n    } else if (percentage >= 100) {\n      return 'border-green';\n    }\n  };\n\n  console.log(format(currentDate, 'LLLL, yyyy'));\n\n  const getMonthDays = date => {\n    const { start, end } = getMonthBounds(date);\n\n    return eachDayOfInterval({ start, end });\n  };\n  const getFormattedDateWithTime = date =>\n    formatDate(new Date(date.setHours(0, 0, 0, 0)));\n\n  const renderPopover = data => {\n    const dateText = selectedDate.textContent;\n    const dateObj = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth(),\n      dateText\n    );\n    const formattedDateWithTime = getFormattedDateWithTime(dateObj);\n\n    if (!data || data.length === 0) {\n      return (\n        <Popover\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          id=\"alex\"\n          open={Boolean(selectedDate)}\n          anchorEl={selectedDate}\n          onClose={() => setSelectedDate(null)}\n          slotProps={{\n            paper: { elevation: 3 },\n          }}\n          transitionDuration={{\n            enter: 500,\n            exit: 500,\n          }}\n        >\n          <ContentPopoverErr>\n            <h3 className=\"datePopover\">{format(dateObj, 'd MMMM yyyy')}</h3>\n            <p className=\"errText\">No information</p>\n            <button\n              className=\"closeBtnPopover\"\n              onClick={() => setSelectedDate(null)}\n            >\n              <svg width=\"14\" height=\"14\">\n                <use href={icons + '#icon-close-day-details'}></use>{' '}\n              </svg>\n            </button>\n          </ContentPopoverErr>\n        </Popover>\n      );\n    }\n\n    const waterInfo = data.find(\n      item =>\n        getFormattedDateWithTime(new Date(item._id)) === formattedDateWithTime\n    );\n    if (waterInfo) {\n      return (\n        <Popover\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          id=\"alex\"\n          open={Boolean(selectedDate)}\n          anchorEl={selectedDate}\n          onClose={() => setSelectedDate(null)}\n          slotProps={{\n            paper: { elevation: 3 },\n          }}\n          transitionDuration={{\n            enter: 500,\n            exit: 500,\n          }}\n        >\n          <ContentPopover>\n            <p className=\"datePopover\">\n              {format(dateObj, 'd')},{t(`monthNames.${currentMonth}`)}\n            </p>\n            <p className=\"datePopoverText\">\n              {t('dailyNorma')}\n              <span className=\"popoverColorText\">\n                {waterInfo.dailyNorma / 1000}L\n              </span>\n            </p>\n            <p className=\"datePopoverText\">\n              {t('fulfillment')}\n              <span className=\"popoverColorText\">\n                {waterInfo.persent.toFixed(0)}%\n              </span>\n            </p>\n            <p className=\"datePopoverText\">\n              {t('servingsOfWater')}\n              <span className=\"popoverColorText\">{waterInfo.perDay}</span>\n            </p>\n            <button\n              className=\"closeBtnPopover\"\n              onClick={() => setSelectedDate(null)}\n            >\n              <svg width=\"14\" height=\"14\">\n                <use href={icons + '#icon-close-day-details'}></use>{' '}\n              </svg>\n            </button>\n          </ContentPopover>\n        </Popover>\n      );\n    }\n  };\n\n  return (\n    <CalendarStyle>\n      <div className=\"header\">\n        <span className=\"sectionText\">{t('month')}</span>\n        <div className=\"monthNav\">\n          <button className=\"navBtn\" onClick={() => handleChangeMonth(-1)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-left'}></use>\n            </svg>\n          </button>\n          <h2 className=\"dateText\">\n            {t(`monthNames.${currentMonth}`)},{currentYear}\n          </h2>\n          <button className=\"navBtn\" onClick={() => handleChangeMonth(1)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-right'}></use>{' '}\n            </svg>\n          </button>\n        </div>\n      </div>\n      {isLoadingMonth ? (\n        <LoaderMonthWrapper>\n          <Loader />\n        </LoaderMonthWrapper>\n      ) : (\n        <ul className=\"month\">\n          {selectedDate && renderPopover(monthWater)}\n          {getMonthDays(currentDate).map(date => (\n            <li key={format(date, 'yyyy-MM-dd')} className=\"day\">\n              <button\n                className={`calendarDayBtn ${\n                  isToday(date) ? 'today' : ''\n                } ${getBorderStyle(\n                  monthWater.find(\n                    item =>\n                      getFormattedDateWithTime(new Date(item._id)) ===\n                      getFormattedDateWithTime(date)\n                  )?.persent\n                )}`}\n                onClick={e => setSelectedDate(e.target)}\n              >\n                {format(date, 'd')}\n              </button>\n              <p className=\"progressWaterText\">\n                {monthWater\n                  .find(\n                    item =>\n                      getFormattedDateWithTime(new Date(item._id)) ===\n                      getFormattedDateWithTime(date)\n                  )\n                  ?.persent.toFixed(0) || 0}\n                %\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </CalendarStyle>\n  );\n};\n\nexport default MonthStatsTable;\n","import { useDispatch } from 'react-redux';\nimport { deleteWaterThunk } from 'redux/waterDetails/waterThunk';\nimport {\n  BoxModal,\n  ButtonBox,\n  ButtonStyle,\n  TextStyle,\n  ModalHeader,\n} from './DeleteWaterModal.styled';\nimport icons from '../../img/icons.svg';\nimport {\n  Overlay,\n  ModalContent,\n  CloseButton,\n  CloseIcon,\n} from 'components/TodayListModal/TodayListModal.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const DeleteWaterModal = ({ onClose, recordId, ownerId }) => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    const dataDelete = {\n      id: recordId,\n      _id: ownerId,\n    };\n    dispatch(deleteWaterThunk(dataDelete)).then(data => {\n      if (!data.error) onClose();\n    });\n  };\n  return (\n    <>\n      <Overlay onClick={onClose} />\n      <ModalContent className=\"dark-delete-modal\">\n        <ModalHeader>\n          <h2>{t('deleteEntry')}</h2>\n          <CloseButton onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxModal>\n            <TextStyle className=\"dark-delete-modal-text\">\n              {t('sureDeleteEntry')}\n            </TextStyle>\n            <ButtonBox>\n              <ButtonStyle className=\"dark-delete-button\" onClick={handleDelete}>\n                {t('delete')}\n              </ButtonStyle>\n              <ButtonStyle onClick={onClose}>{t('cancel')}</ButtonStyle>\n\n            </ButtonBox>\n          </BoxModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport img from '../../img/bg1.png';\n\nexport const TodayWrapper = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const TodayItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 0;\n  align-items: center;\n  border-bottom: 1px solid var(--btn-color-light-blue);\n`;\n\nexport const TodayInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TodayTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n\nexport const WrapNoList = styled.li`\n  margin: 0 auto;\n  height: 212px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  &::before {\n    position: absolute;\n    content: '|';\n    background-image: url(${img});\n    height: 212px;\n    width: 100%;\n    background-position: center;\n    background-repeat: repeat;\n    background-size: contain;\n    opacity: 0.1;\n  }\n`;\n\nexport const Forget = styled.div`\n  font-size: 20px;\n  text-align: center;\n  color: var(--primery-color-blue);\n  @media (min-width: 700px) and (max-width: 1199px) {\n    font-size: 25px;\n  }\n`;\n\nexport const TodayList = styled.ul`\n  height: 212px;\n  overflow: auto;\n`;\n\nexport const TodayVolume = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.33;\n  color: var(--primery-color-blue);\n  margin-right: 16px;\n`;\n\nexport const TodayTime = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 2;\n  color: var(--primery-color-black);\n`;\n\nexport const IconGlass = styled.svg`\n  width: 26px;\n  height: 26px;\n  margin-right: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 36px;\n    height: 36px;\n  }\n`;\n\nexport const TodayTools = styled.div`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ButtonChange = styled.button`\n  background-color: transparent;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n\n  & svg {\n    stroke: var(--secondary-color-blue);\n    fill: transparent;\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    border-bottom: 1px solid var(--secondary-color-blue);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  background-color: transparent;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n\n  & svg {\n    stroke: var(--btn-color-red);\n    fill: transparent;\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    border-bottom: 1px solid var(--btn-color-red);\n  }\n`;\n\nexport const AddWaterBtn = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: transparent;\n  color: var(--primery-color-blue);\n  border: none;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  stroke: var(--primery-color-blue);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    fill: transparent;\n  }\n\n  &:hover {\n    color: var(--secondary-yellow);\n    stroke: var(--secondary-yellow);\n  }\n`;\n\nexport const LoaderWrapper = styled.div`\n  height: 212px;\n  position: relative;\n`;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\nimport { formatTime } from 'redux/waterDetails/helpers';\nimport {\n  Overlay,\n  ModalContent,\n  ModalHeader,\n  CloseButton,\n  CloseIcon,\n  BoxAddModal,\n  PreviousInfo,\n  AddParagraph,\n  AddWater,\n  Water,\n  Label,\n  ButtonMl,\n  Icon,\n  AddTime,\n  InputTime,\n  Input,\n  FooterModal,\n  AddButtonSave,\n} from './TodayListModal.styled';\nimport {\n  IconGlass,\n  TodayTime,\n  TodayVolume,\n} from '../TodayWaterList/TodayWaterList.styled';\nimport icons from '../../img/icons.svg';\nimport { addWatersThunk, editWaterThunk } from 'redux/waterDetails/waterThunk';\nimport { useTranslation } from 'react-i18next';\n\nexport const TodayListModal = ({\n  onClose,\n  isEditing,\n  initialAmount,\n  initialTime,\n  existingRecordId,\n  ownerId,\n}) => {\n  const { t } = useTranslation();\n  const [amount, setAmount] = useState(initialAmount || 0);\n  const [times, setTime] = useState(\n    isEditing && initialTime\n      ? format(new Date(initialTime), 'HH:mm')\n      : format(new Date(), 'HH:mm')\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n  const increaseAmount = () => {\n    setAmount(prevAmount => prevAmount + 50);\n  };\n\n  const decreaseAmount = () =>\n    setAmount(prevAmount => (prevAmount > 0 ? prevAmount - 50 : 0));\n\n  const handleAmountChange = e => {\n    let newValue = e.target.value;\n\n    if (newValue.startsWith('0') && newValue.length > 1) {\n      newValue = parseFloat(newValue.substring(1));\n    }\n    setAmount(parseFloat(newValue));\n  };\n\n  useEffect(() => {\n    if (isEditing) {\n      setAmount(initialAmount || 0);\n      setTime(formatTime(initialTime, 'HH:mm'));\n    } else {\n      setAmount(0);\n      setTime(format(new Date(), 'HH:mm'));\n    }\n  }, [isEditing, initialAmount, initialTime]);\n\n  const handleSubmit = () => {\n    let isoDate;\n    if (isEditing) {\n      isoDate = initialTime\n        ? new Date(initialTime).toISOString().slice(0, 16)\n        : new Date().toISOString();\n    } else if (times) {\n      const currentDate = new Date();\n      const [hours, minutes] = times.split(':');\n      currentDate.setHours(hours, minutes);\n      isoDate = currentDate.toISOString().slice(0, 16);\n\n      const currentDate2 = new Date(isoDate);\n\n      const newDate = new Date(currentDate2);\n      newDate.setHours(currentDate2.getHours() + 2);\n\n      const formattedNewDate =\n        newDate.getFullYear() +\n        '-' +\n        ('0' + (newDate.getMonth() + 1)).slice(-2) +\n        '-' +\n        ('0' + newDate.getDate()).slice(-2) +\n        'T' +\n        ('0' + newDate.getHours()).slice(-2) +\n        ':' +\n        ('0' + newDate.getMinutes()).slice(-2);\n      isoDate = formattedNewDate;\n    }\n\n    const waterData = {\n      waterVolume: amount,\n      time: isoDate,\n    };\n\n    if (isEditing) {\n      dispatch(\n        editWaterThunk({ _id: ownerId, id: existingRecordId, ...waterData })\n      ).then(data => {\n        if (!data.error) onClose();\n      });\n    } else {\n      dispatch(addWatersThunk(waterData)).then(data => {\n        if (!data.error) {\n          onClose();\n          setAmount(0);\n        }\n      });\n    }\n    onClose();\n  };\n\n  const handleOnClose = () => {\n    if (isEditing) {\n      onClose();\n      return;\n    }\n    onClose();\n    setAmount(0);\n  };\n\n  const title = isEditing ? t('editWater') : t('addWater');\n\n  const displayTime = isEditing && initialTime ? formatTime(initialTime) : '';\n\n  return (\n    <>\n      <Overlay onClick={handleOnClose} />\n      <ModalContent className=\"dark-water-modal\">\n        <ModalHeader>\n          <h2>{title}</h2>\n          <CloseButton onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxAddModal>\n            {isEditing && (\n              <PreviousInfo>\n                <IconGlass>\n                  <use href={`${icons}#icon-glass`}></use>\n                </IconGlass>\n                <TodayVolume>\n                  {initialAmount ? `${initialAmount} ${t('ml')}` : t('noNotesYet')}\n                </TodayVolume>\n                <TodayTime>{initialTime ? `${displayTime}` : ''}</TodayTime>\n              </PreviousInfo>\n            )}\n            <h3>{isEditing ? `${t('correctData')}` : `${t('chooseValue')}`}</h3>\n            <AddWater>\n              <AddParagraph className=\"dark-modal-text\">\n                {t('amountWater')}\n              </AddParagraph>\n              <div>\n                <ButtonMl onClick={decreaseAmount}>\n                  <Icon>\n                    <use href={`${icons}#icon-decrement-outline`}></use>\n                  </Icon>\n                </ButtonMl>\n                <Label className=\"dark-water-modal-button\">\n                  <Water>\n                    {Number.isNaN(amount) ? '0' : `${amount}`} {t('ml')}\n                  </Water>\n                </Label>\n                <ButtonMl onClick={increaseAmount}>\n                  <Icon>\n                    <use href={`${icons}#icon-add`}></use>\n                  </Icon>\n                </ButtonMl>\n              </div>\n            </AddWater>\n            <AddTime>\n              <AddParagraph className=\"dark-modal-text\">\n                {t('recordingTime')}\n              </AddParagraph>\n              <InputTime\n                type=\"time\"\n                value={times}\n                onChange={e => setTime(e.target.value)}\n                step=\"300\"\n              />\n            </AddTime>\n            <div>\n              <h3>{t('waterUsed')}</h3>\n              <Input\n                type=\"number\"\n                value={Number.isNaN(amount) ? '0' : `${amount}`}\n                onChange={handleAmountChange}\n                onBlur={() =>\n                  setAmount(prevAmount => prevAmount || initialAmount || 0)\n                }\n              />\n            </div>\n            <FooterModal>\n              <span>\n                {Number.isNaN(amount) ? `0 ` : `${amount} `}\n                {t('ml')}\n              </span>\n              <AddButtonSave onClick={handleSubmit}>{t('save')}</AddButtonSave>\n            </FooterModal>\n          </BoxAddModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoadingList,\n  selectOwnerId,\n  selectTodayWater,\n} from 'redux/waterDetails/waterSelectors';\nimport { DeleteWaterModal } from '../DeleteWaterModal/DeleteWaterModal';\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\nimport icons from '../../img/icons.svg';\nimport { getTodayWater } from 'redux/waterDetails/waterThunk';\nimport {\n  AddWaterBtn,\n  ButtonChange,\n  ButtonDelete,\n  IconGlass,\n  TodayInfo,\n  TodayItem,\n  TodayList,\n  TodayTime,\n  TodayTitle,\n  TodayTools,\n  TodayVolume,\n  TodayWrapper,\n  Forget,\n  LoaderWrapper,\n  WrapNoList,\n} from './TodayWaterList.styled';\nimport { formatTime } from 'redux/waterDetails/helpers';\nimport Loader from 'components/Loader/Loader';\nimport { useTranslation } from 'react-i18next';\n\nconst iconsList = {\n  edit: `${icons}#icon-edit`,\n  delete: `${icons}#icon-delete`,\n  glass: `${icons}#icon-glass`,\n  add: `${icons}#icon-add`,\n};\n\nexport const TodayWaterList = () => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedWaterItem, setSelectedWaterItem] = useState(null);\n  const [isDeleteWaterModalOpen, setDeleteWaterModalOpen] = useState(false);\n  const { waterlist } = useSelector(selectTodayWater);\n  const isLoadingList = useSelector(selectIsLoadingList);\n  const ownerId = useSelector(selectOwnerId);\n\n  useEffect(() => {\n    dispatch(getTodayWater());\n  }, [dispatch]);\n\n  const openModalToAdd = () => {\n    setSelectedWaterItem(null);\n    setIsModalOpen(true);\n  };\n\n  const openModalToDelete = item => {\n    setSelectedWaterItem(item);\n    setDeleteWaterModalOpen(true);\n  };\n\n  const openModalToEdit = item => {\n    setSelectedWaterItem(item);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <TodayWrapper>\n      <TodayTitle>{t('today')}</TodayTitle>\n      {isLoadingList ? (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      ) : (\n        <TodayList>\n          {waterlist?.length === 0 || waterlist === undefined ? (\n            <WrapNoList>\n              <Forget>\n                <p>{t('haveNotDrunkYet.p1')}&#128561;...</p>\n                <p>{t('haveNotDrunkYet.p2')}</p>\n                <p>{t('haveNotDrunkYet.p3')}&#129319;</p>\n                <p>{t('haveNotDrunkYet.p4')}</p>\n                <>&#128540; &#129325; &#128527;</>\n              </Forget>\n            </WrapNoList>\n          ) : (\n            waterlist?.map(item => (\n              <TodayItem key={item.id}>\n                <TodayInfo>\n                  <IconGlass>\n                    <use href={iconsList.glass}></use>\n                  </IconGlass>\n                  <TodayVolume>\n                    {item.waterVolume} {t('ml')}\n                  </TodayVolume>\n                  <TodayTime>{formatTime(item.time)}</TodayTime>\n                </TodayInfo>\n                <TodayTools>\n                  <ButtonChange onClick={() => openModalToEdit(item)}>\n                    <svg>\n                      <use href={iconsList.edit}></use>\n                    </svg>\n                  </ButtonChange>\n                  <ButtonDelete onClick={() => openModalToDelete(item)}>\n                    <svg>\n                      <use href={iconsList.delete}></use>\n                    </svg>\n                  </ButtonDelete>\n                </TodayTools>\n              </TodayItem>\n            ))\n          )}\n        </TodayList>\n      )}\n      <AddWaterBtn onClick={openModalToAdd}>\n        <svg>\n          <use href={iconsList.add}></use>\n        </svg>\n        {t('addWater')}\n      </AddWaterBtn>\n      {isDeleteWaterModalOpen && (\n        <DeleteWaterModal\n          onClose={() => setDeleteWaterModalOpen(false)}\n          recordId={selectedWaterItem?.id}\n          ownerId={ownerId}\n        />\n      )}\n      {isModalOpen && (\n        <TodayListModal\n          initialAmount={selectedWaterItem?.waterVolume}\n          initialTime={selectedWaterItem?.time}\n          isEditing={selectedWaterItem !== null}\n          existingRecordId={selectedWaterItem?.id}\n          onClose={() => setIsModalOpen(false)}\n          ownerId={ownerId}\n        />\n      )}\n    </TodayWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WaterRatioPanelContainer = styled.div`\n  width: 280px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 24px;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    gap: 32px;\n  }\n`;\n\nexport const WaterRange = styled.input`\n  &[type='range'] {\n    appearance: none;\n    width: 100%;\n    border-radius: 10px;\n    background-color: #d7e3ff;\n    background-image: linear-gradient(to right, #9ebbff, #9ebbff);\n    background-repeat: no-repeat;\n  }\n\n  &[type='range']:focus {\n    outline: none;\n  }\n\n  &[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8px;\n    animation: 0.2s;\n    border-radius: 10px;\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &[type='range']::-webkit-slider-thumb {\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: solid 1px #407bff;\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n`;\n\nexport const WaterRangeHeader = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  margin-bottom: 16px;\n  color: #407bff;\n`;\nexport const WaterRangeContainer = styled.div`\n  position: relative;\n  height: 102px;\n  display: flex;\n  flex-direction: column;\n  padding-left: 11px;\n  padding-right: 11px;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n  }\n`;\n\nexport const RateContainer = styled.div`\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const MiddleMark = styled.span`\n  position: absolute;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  text-align: center;\n  margin-bottom: 4px;\n  gap: 4px;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const StartMark = styled.span`\n  transform: translateX(-50%);\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n    color: #9ebbff;\n  }\n`;\n\nexport const EndMark = styled.span`\n  transform: translateX(50%);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const AddWaterButton = styled.button`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  padding: 6px 72px;\n  background-color: #407bff;\n  color: #fff;\n  border: none;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: '0 4px 14px rgba(64, 123, 255, 0.54)';\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    padding: 10px 75px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 178px;\n    height: 44px;\n    padding: 10px 20px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: transparent;\n  stroke: #ffffff;\n`;\n","import {\n  Icon,\n  AddWaterButton,\n  StartMark,\n  MiddleMark,\n  RateContainer,\n  EndMark,\n  WaterRange,\n  WaterRangeContainer,\n  WaterRangeHeader,\n  WaterRatioPanelContainer,\n} from './WaterRatioPanel.styled';\n\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\n\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport icons from '../../img/icons.svg';\nimport { selectDailyDrank, selectNorma } from 'redux/waterDetails/waterSelectors';\nimport { useTranslation } from 'react-i18next';\n\nexport const WaterRatioPanel = () => {\n  const { t } = useTranslation();\n  const dailyNorm = useSelector(selectNorma);\n  const dailyDrank = useSelector(selectDailyDrank);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const waterPercent = Math.round((100 * dailyDrank) / dailyNorm);\n\n  const getBackgroundSize = () => {\n    if (Number.isNaN(waterPercent)) {\n      return { backgroundSize: `${0}` };\n    }\n    return {\n      backgroundSize: `${waterPercent}%`,\n    };\n  };\n\n  const getPosition = () => {\n    const limit = Math.min(100, Math.max(0, waterPercent));\n    return {\n      left: `calc(${limit}% + 3%)`,\n    };\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const isShow = waterPercent > 0 && waterPercent <= 100;\n\n  return (\n    <WaterRatioPanelContainer>\n      <WaterRangeContainer>\n        <WaterRangeHeader>{t('today')}</WaterRangeHeader>\n        <WaterRange\n          type=\"range\"\n          value={Number.isNaN(waterPercent) ? `0` : waterPercent}\n          readOnly={true}\n          style={getBackgroundSize()}\n          aria-label=\"Water range\"\n        />\n        <RateContainer>\n          <StartMark>0%</StartMark>\n          {isShow && (\n            <MiddleMark\n              id=\"waterMark\"\n              style={getPosition()}\n            >{`${waterPercent}%`}</MiddleMark>\n          )}\n          <EndMark>100%</EndMark>\n        </RateContainer>\n      </WaterRangeContainer>\n      <AddWaterButton\n        onClick={() => {\n          openModal();\n        }}\n      >\n        <Icon>\n          <use href={`${icons}#icon-add-button`}></use>\n        </Icon>\n        {t('addWater')}\n      </AddWaterButton>\n      {isModalOpen && (\n        <TodayListModal\n          onClose={() => {\n            closeModal();\n          }}\n          onShow={isModalOpen}\n        />\n      )}\n    </WaterRatioPanelContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const GlobalStyles = styled.div`\n  @media screen and (min-width: 768px) {\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    input[type='number'] {\n      -moz-appearance: textfield;\n    }\n  }\n`;\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Modal = styled.div`\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  @media screen and (max-width: 319px) {\n    padding: 24px 12px;\n    max-width: 280px;\n  }\n  @media screen and (min-width: 320px) {\n    padding: 24px 12px;\n    max-width: 280px;\n    max-height: 816px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n    max-width: 704px;\n    max-height: 696px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 592px;\n    max-height: 712px;\n  }\n`;\nexport const TopDiv = styled.div`\n  position: relative;\n`;\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: large;\n  font-weight: 900;\n  color: var(--primery-color-blue);\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: var(--btn-color-red);\n  }\n`;\nexport const ModalHeader = styled.div`\n  color: var(--primery-color-black);\n  line-height: 32px;\n  font-size: 26px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const FormulasBox = styled.div`\n  margin-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\nexport const FormulaBox = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 24px;\n  }\n`;\nexport const LabelText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n`;\nexport const InputText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n\n  @media screen and (min-width: 320px) {\n    width: 190px;\n  }\n  @media screen and (min-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const CaptionBox = styled.div`\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 10px;\n  padding: 10px;\n  margin-top: 12px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n  }\n  @media screen and (min-width: 1440px) {\n    height: 68px;\n  }\n`;\nexport const ColoredFormula = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-left: 4px;\n`;\nexport const CaptionMark = styled.span`\n  color: var(--primery-color-blue);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const CaptionText = styled.div`\n  color: #8f8f8f;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const FormBigText = styled.div`\n  margin-top: 24px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-size: 18px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const WaterFormInput = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 8px;\n`;\nexport const WaterFormInputSpecial = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredWaterBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 16px;\n`;\nexport const RequiredWater = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 900;\n  margin-left: 6px;\n`;\nexport const SaveButton = styled.button`\n  border-radius: 10px;\n  border: none;\n  background-color: var(--primery-color-blue);\n  color: var(--primery-color-white);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  padding: 10px 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: box-shadow 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:focus {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  }\n\n  @media screen and (max-width: 319px) {\n    width: calc(100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n  @media screen and (min-width: 320px) {\n    width: calc(100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    font-size: 18px;\n    line-height: 24px;\n    position: absolute;\n    right: 24px;\n    bottom: 32px;\n  }\n`;\nexport const RadioButton = styled.div`\n  input {\n    display: none;\n  }\n\n  margin-top: 16px;\n\n  label {\n    display: inline-block;\n    position: relative;\n    padding-left: 22px;\n    margin-right: 24px;\n    cursor: pointer;\n  }\n\n  label::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 14px;\n    height: 14px;\n    border: 1px solid var(--primery-color-blue);\n    border-radius: 50%;\n    background-color: var(--primery-color-white);\n    box-sizing: border-box;\n  }\n\n  label::after {\n    content: '';\n    position: absolute;\n    left: 4px;\n    top: 7px;\n    width: 6px;\n    height: 6px;\n    border: none;\n    border-radius: 50%;\n    background-color: transparent;\n    box-sizing: border-box;\n  }\n\n  input:checked + label::after {\n    background-color: var(--primery-color-blue);\n  }\n`;\n\n// DAILY NORMA PANEL\n\nexport const DailyNormaBox = styled.div`\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 8px 20px;\n  height: 76px;\n  max-width: 191px;\n  border-radius: 10px;\n  border: 1px solid var(--bg-color-light-blue);\n  box-shadow: 0 4px 8px 0 rgba(158, 187, 255, 0.12);\n\n  &:hover {\n    // box-shadow: 0 4px 4px 0 rgba(158, 187, 255, 0.3);\n  }\n`;\n\nexport const DailyText = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-black);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  width: 151px;\n`;\n\nexport const RequiredWaterHeader = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-blue);\n  font-weight: 900;\n  line-height: 24px;\n  font-size: 24px;\n`;\n\nexport const BottomBox = styled.div`\n  display: flex;\n  margin-bottom: 0;\n  margin-top: auto;\n  height: 24px;\n`;\n\nexport const EditWaterButton = styled.button`\n  width: 28px;\n  height: 20px;\n  background-color: transparent;\n  color: var(--secondary-color-blue);\n  border: none;\n  cursor: pointer;\n\n  margin-top: 5px;\n  margin-right: 10px;\n  margin-left: 12px;\n\n  &:hover {\n  }\n`;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { updateDailyNorma } from '../../redux/dailyNorma/dailyNormaThunk';\nimport { useDispatch } from 'react-redux';\nimport '../../index.css';\n\nimport {\n  ModalOverlay,\n  Modal,\n  TopDiv,\n  CloseButton,\n  ModalHeader,\n  FormulasBox,\n  FormulaBox,\n  ColoredFormula,\n  CaptionBox,\n  CaptionText,\n  CaptionMark,\n  FormBigText,\n  RadioButton,\n  RequiredText,\n  InputText,\n  WaterFormInput,\n  RequiredWaterBox,\n  RequiredWater,\n  SaveButton,\n  LabelText,\n} from './dailyNorma.styled';\nimport { useTranslation } from 'react-i18next';\n\nconst DailyNormaModal = ({\n  onClose,\n  genderData,\n  weightData,\n  activityTimeData,\n  dailyNormaData,\n  willDrinkData,\n}) => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const [gender, setGender] = useState(genderData);\n  const [weight, setWeight] = useState(weightData);\n  const [activityTime, setActivityTime] = useState(activityTimeData);\n  const [dailyNorma, setDailyNorma] = useState(dailyNormaData);\n  const [willDrink, setWillDrink] = useState(willDrinkData);\n\n  const weightInputRef = useRef(null);\n  const activityTimeInputRef = useRef(null);\n  const willDrinkInputRef = useRef(null);\n\n  const handleGenderChange = selectedGender => {\n    setGender(selectedGender);\n    calculateDailyNorma();\n  };\n\n  const handleWeightChange = e => {\n    let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n    if (numericValue >= 250) {\n      numericValue = 250;\n    }\n    setWeight(numericValue);\n  };\n\n  const handleActivityTimeChange = e => {\n    let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n    if (numericValue >= 16) {\n      numericValue = 16;\n    }\n    setActivityTime(numericValue);\n  };\n\n  const handleWillDrinkChange = e => {\n    let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n    if (numericValue >= 15) {\n      numericValue = 15;\n    }\n    setWillDrink(numericValue);\n  };\n\n  const handleWeightFocus = () => {\n    if (parseFloat(weight) === 0) {\n      weightInputRef.current.value = '';\n    }\n  };\n\n  const handleActivityTimeFocus = () => {\n    if (parseFloat(activityTime) === 0) {\n      activityTimeInputRef.current.value = '';\n    }\n  };\n\n  const handleWillDrinkFocus = () => {\n    if (parseFloat(willDrink) === 0) {\n      willDrinkInputRef.current.value = '';\n    }\n  };\n\n  const handleWeightBlur = () => {\n    if (weight === '' || parseFloat(weight) === 0) {\n      weightInputRef.current.value = 0;\n      setWeight(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const handleActivityTimeBlur = () => {\n    if (activityTime === '' || parseFloat(activityTime) === 0) {\n      activityTimeInputRef.current.value = 0;\n      setActivityTime(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const handleWillDrinkBlur = () => {\n    if (willDrink === '' || parseFloat(willDrink) === 0) {\n      willDrinkInputRef.current.value = 0;\n      setWillDrink(0);\n    }\n    calculateDailyNorma();\n  };\n\n  const calculateDailyNorma = useCallback(() => {\n    const userWeight = parseFloat(weight);\n    const userActivity = parseFloat(activityTime);\n\n    if (isNaN(userWeight) || isNaN(userActivity)) {\n      setDailyNorma((2.0).toFixed(1));\n      return;\n    }\n\n    const genderWeight = gender === 'woman' ? 0.03 : 0.04;\n    const genderActivity = gender === 'woman' ? 0.4 : 0.6;\n    let formulaResult = userWeight * genderWeight + userActivity * genderActivity;\n\n    formulaResult = formulaResult === 0 ? 2.0 : formulaResult;\n\n    setDailyNorma(formulaResult > 15 ? 15 : formulaResult.toFixed(1));\n  }, [gender, weight, activityTime]);\n\n  useEffect(() => {\n    calculateDailyNorma();\n  }, [calculateDailyNorma]);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget && e.button === 0) {\n      onClose();\n    }\n  };\n\n  const handleSave = async () => {\n    const requestData = {\n      gender: gender,\n      weight: parseFloat(weight),\n      activityTime: parseFloat(activityTime),\n      willDrink: parseFloat(willDrink * 1000),\n      dailyNorma: parseFloat(dailyNorma * 1000),\n    };\n    dispatch(updateDailyNorma(requestData));\n\n    onClose();\n  };\n\n  return (\n    <ModalOverlay onMouseDown={handleBackdropClick}>\n      <Modal className=\"dark-daily-norma-modal\">\n        <TopDiv>\n          <ModalHeader className=\"dark-daily-norma-text\">My daily norma</ModalHeader>\n          <CloseButton onClick={onClose}>&#10005;</CloseButton>\n        </TopDiv>\n\n        <FormulasBox>\n          <FormulaBox>\n            <LabelText className=\"dark-daily-norma-text\">{t('female')}:</LabelText>\n            <ColoredFormula>V=(M*0.03) + (T*0.4)</ColoredFormula>\n          </FormulaBox>\n          <FormulaBox>\n            <LabelText className=\"dark-daily-norma-text\">{t('male')}:</LabelText>\n            <ColoredFormula>V=(M*0.04) + (T*0.6)</ColoredFormula>\n          </FormulaBox>\n        </FormulasBox>\n\n        <CaptionBox>\n          <CaptionText>\n            <CaptionMark>*</CaptionMark> {t('formulaDescription')}\n          </CaptionText>\n        </CaptionBox>\n\n        <form>\n          <FormBigText className=\"dark-daily-norma-text\">Calculate your rate:</FormBigText>\n\n          <RadioButton>\n            <input\n              type=\"radio\"\n              id=\"woman\"\n              name=\"gender\"\n              value=\"woman\"\n              checked={gender === 'woman'}\n              onChange={() => handleGenderChange('woman')}\n            />\n            <label htmlFor=\"woman\">\n              <LabelText className=\"dark-daily-norma-text\">{t('female')}</LabelText>\n            </label>\n\n            <input\n              type=\"radio\"\n              id=\"man\"\n              name=\"gender\"\n              value=\"man\"\n              checked={gender === 'man'}\n              onChange={() => handleGenderChange('man')}\n            />\n            <label htmlFor=\"man\">\n              <LabelText className=\"dark-daily-norma-text\">{t('male')}</LabelText>\n            </label>\n          </RadioButton>\n\n          <label>\n            <InputText className=\"dark-daily-norma-text\">{t('weight')}</InputText>\n          </label>\n          <WaterFormInput\n            type=\"text\"\n            value={weight}\n            onChange={handleWeightChange}\n            onFocus={handleWeightFocus}\n            onBlur={handleWeightBlur}\n            ref={weightInputRef}\n            defaultValue={weight === 0 ? '' : weight}\n            maxLength={4}\n            onKeyDown={e => ['e', 'E', '+', '-', '='].includes(e.key) && e.preventDefault()}\n          />\n\n          <label>\n            <InputText className=\"dark-daily-norma-text\">\n              The time of active participation in sports or other activities with a high physical\n              load in hours:\n            </InputText>\n          </label>\n          <WaterFormInput\n            type=\"text\"\n            value={activityTime}\n            onChange={handleActivityTimeChange}\n            onFocus={handleActivityTimeFocus}\n            onBlur={handleActivityTimeBlur}\n            ref={activityTimeInputRef}\n            defaultValue={activityTime === 0 ? '' : activityTime}\n            maxLength={3}\n            onKeyDown={e => ['e', 'E', '+', '-'].includes(e.key) && e.preventDefault()}\n          />\n\n          <RequiredWaterBox>\n            <RequiredText className=\"dark-daily-norma-text\">\n              The required amount of water in liters per day:\n            </RequiredText>\n            <RequiredWater>{dailyNorma} L</RequiredWater>\n          </RequiredWaterBox>\n\n          <FormBigText className=\"dark-daily-norma-text\">\n            Write down how much water you will drink:\n          </FormBigText>\n          <WaterFormInput\n            type=\"text\"\n            value={willDrink}\n            onChange={handleWillDrinkChange}\n            onFocus={handleWillDrinkFocus}\n            onBlur={handleWillDrinkBlur}\n            ref={willDrinkInputRef}\n            defaultValue={willDrink === 0 ? '' : willDrink}\n            maxLength={3}\n            onKeyDown={e => ['e', 'E', '+', '-'].includes(e.key) && e.preventDefault()}\n          />\n\n          <SaveButton type=\"button\" onClick={handleSave}>\n            {t('save')}\n          </SaveButton>\n        </form>\n      </Modal>\n    </ModalOverlay>\n  );\n};\n\nexport default DailyNormaModal;\n","export const selectDailyNormaData = state => state.dailyNorma.dailyNorma;\nexport const selectDailyNormaWeight = state => state.dailyNorma.weight;\nexport const selectDailyNormaGender = state => state.dailyNorma.gender;\nexport const selectDailyNormaActivity = state => state.dailyNorma.activityTime;\nexport const selectDailyNormaWillDrink = state => state.dailyNorma.willDrink;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './dailyNormaModal';\nimport { getDailyNorma } from '../../redux/dailyNorma/dailyNormaThunk';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DailyNormaBox,\n  DailyText,\n  RequiredWaterHeader,\n  BottomBox,\n  EditWaterButton,\n} from './dailyNorma.styled';\nimport { selectAuthUserData } from 'redux/auth/auth.selectors';\nimport {\n  selectDailyNormaActivity,\n  selectDailyNormaData,\n  selectDailyNormaGender,\n  selectDailyNormaWeight,\n  selectDailyNormaWillDrink,\n} from 'redux/dailyNorma/dailyNorma.selectors';\nimport { useTranslation } from 'react-i18next';\n\nexport const DailyNorma = () => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [dailyNorma, setDailyNorma] = useState(0);\n\n  const userId = useSelector(selectAuthUserData);\n  const genderData = useSelector(selectDailyNormaGender);\n  const weightData = useSelector(selectDailyNormaWeight);\n  const activityTimeData = useSelector(selectDailyNormaActivity);\n  const dailyNormaData = useSelector(selectDailyNormaData);\n  const willDrinkData = useSelector(selectDailyNormaWillDrink);\n\n  useEffect(() => {\n    dispatch(getDailyNorma(userId._id));\n    const fetchedDailyNorma = dailyNormaData;\n    const formattedAmount = parseFloat(fetchedDailyNorma / 1000).toFixed(1);\n    setDailyNorma(formattedAmount);\n  }, [dispatch, userId._id, dailyNormaData]);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <DailyNormaBox className=\"dark-daily-norma-box\">\n      <DailyText className=\"dark-daily-norma-text\">{t('dailyNorma')}</DailyText>\n      <BottomBox>\n        <RequiredWaterHeader>\n          {dailyNorma} {t('l')}\n        </RequiredWaterHeader>\n        <EditWaterButton onClick={handleModalOpen}>{t('edit')}</EditWaterButton>\n      </BottomBox>\n\n      {isModalOpen && (\n        <Modal\n          onClose={handleModalClose}\n          genderData={genderData}\n          weightData={weightData}\n          activityTimeData={activityTimeData}\n          dailyNormaData={dailyNormaData}\n          willDrinkData={willDrinkData / 1000}\n          userId={userId._id}\n        />\n      )}\n    </DailyNormaBox>\n  );\n};\n\n// import React, { useState, useEffect } from 'react';\n// import Modal from './dailyNormaModal';\n// import { useSelector } from 'react-redux';\n// import { selectAuthUserData } from 'redux/auth/auth.selectors';\n// import {\n//   DailyNormaBox,\n//   DailyText,\n//   RequiredWaterHeader,\n//   BottomBox,\n//   EditWaterButton,\n// } from './dailyNorma.styled';\n\n// export const DailyNorma = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [dailyNorma, setDailyNorma] = useState(0);\n//   const [userData, setUserData] = useState(null);\n\n//   const UserData = useSelector(selectAuthUserData);\n\n//   useEffect(() => {\n//     if (UserData) {\n//       const formattedAmount = parseFloat(UserData.dailyNorma / 1000).toFixed(1);\n//       setDailyNorma(formattedAmount);\n//       setUserData(UserData);\n//     }\n//   }, [UserData]);\n\n//   useEffect(() => {\n//     setUserData(UserData);\n//   }, [UserData]);\n\n//   const handleModalOpen = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const handleModalClose = () => {\n//     setIsModalOpen(false);\n//   };\n\n\n//   return (\n//     <DailyNormaBox className=\"dark-daily-norma-box\">\n//       <DailyText className=\"dark-daily-norma-text\">My daily norma</DailyText>\n//       <BottomBox>\n//         <RequiredWaterHeader>{dailyNorma} L</RequiredWaterHeader>\n//         <EditWaterButton onClick={handleModalOpen}>Edit</EditWaterButton>\n//       </BottomBox>\n\n//       {isModalOpen && (\n//         <Modal\n//           onClose={handleModalClose}\n//           dailyNormaData={UserData.dailyNorma}\n//           genderData={UserData.gender}\n//           weightData={UserData.weight}\n//           activityTimeData={UserData.activityTime}\n//           willDrinkData={UserData.willDrink / 1000}\n//           // userData={userData}\n//           // setUserData={setUserData}\n//         />\n//       )}\n//     </DailyNormaBox>\n//   );\n// };\n\n\n","import styled from 'styled-components';\n\nimport mobile from '../img/home-background-mobile.svg';\nimport tablet from '../img/home-background-tablet.svg';\nimport desktop from '../img/home-background-desktop.svg';\nimport bottle from '../img/bottle.svg';\n\nexport const HomePageSection = styled.section`\n  @media screen and (max-width: 767px) {\n    padding: 24px 20px;\n    position: relative;\n    height: 100%;\n\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -9;\n      background-image: url(${mobile});\n      background-repeat: no-repeat;\n\n      background-size: cover;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 32px 44px 32px;\n    position: relative;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -10;\n      background-image: url(${tablet});\n      background-repeat: no-repeat;\n      background-size: cover;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    display: flex;\n    flex-direction: row;\n    overflow: hidden;\n    justify-content: space-between;\n    padding: 20px 112px 40px 112px;\n    max-height: 100%;\n    &::before {\n      content: '';\n      position: absolute;\n      top: -170px;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -11;\n      background-image: url(${desktop});\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  @media screen and (max-width: 767px) {\n    position: relative;\n    min-height: 440px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 836px;\n\n      padding: 24px 8px;\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    min-height: 498px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 688px;\n\n      padding: 32px 24px;\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    position: relative;\n    width: 592px;\n    max-height: 680px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 680px;\n\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport const BottleImg = styled.div`\n  @media screen and (max-width: 767px) {\n    width: 218px;\n    height: 190px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n  @media screen and (min-width: 768px) {\n    width: 402px;\n    height: 352px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 570px;\n    height: 500px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n`;\n","import MonthStatsTable from 'components/MonthStatsTable/MonthStatsTable';\n\nimport { TodayWaterList } from 'components/TodayWaterList/TodayWaterList';\nimport { WaterRatioPanel } from 'components/WaterRatioPanel/WaterRatioPanel';\nimport { DailyNorma } from 'components/DailyNorma/dailyNorma';\nimport { BottleImg, ContentWrapper, HomePageSection } from './HomePage.styled';\n\nconst HomePage = () => {\n  return (\n    <>\n      <HomePageSection>\n        <ContentWrapper>\n          <DailyNorma />\n          <BottleImg className='dark-home-page-bottle' />\n          <WaterRatioPanel />\n        </ContentWrapper>\n        <ContentWrapper className=\"right-panel\">\n          <TodayWaterList />\n          <MonthStatsTable />\n        </ContentWrapper>\n      </HomePageSection>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["BoxModal","styled","_templateObject","_taggedTemplateLiteral","ButtonStyle","_templateObject2","ButtonBox","_templateObject3","TextStyle","_templateObject4","ModalHeader","_templateObject5","Overlay","ModalContent","CloseButton","CloseIcon","BoxAddModal","_templateObject6","PreviousInfo","_templateObject7","AddParagraph","_templateObject8","AddWater","_templateObject9","Water","_templateObject10","Label","_templateObject11","ButtonMl","_templateObject12","Icon","_templateObject13","AddTime","_templateObject14","InputTime","_templateObject15","Input","_templateObject16","FooterModal","_templateObject17","AddButtonSave","_templateObject18","CalendarStyle","ContentPopover","ContentPopoverErr","LoaderMonthWrapper","startOfMonth","date","_date","toDate","setDate","setHours","endOfMonth","month","getMonth","setFullYear","getFullYear","eachDayOfInterval","interval","options","_options$step","startDate","start","endDate","end","reversed","endTime","currentDate","step","dates","push","getDate","reverse","selectMonthWaterDetails","state","monthWater","selectIsLoadingMonthWater","isLoading","selectTodayWater","waterDetails","today","selectDailyDrank","dailyDrank","selectIsLoadingList","selectOwnerId","ownerId","selectNorma","dailyNorma","isSameDay","dateLeft","dateRight","startOfDay","isToday","Date","now","t","useTranslation","_useState","useState","_useState2","_slicedToArray","setCurrentDate","_useState3","_useState4","selectedDate","setSelectedDate","isLoadingMonth","useSelector","waterlist","isLoadingList","currentMonth","format","currentYear","console","log","dailyNorm","d","formatDate","dispatch","useDispatch","useEffect","getMonthWater","handleChangeMonth","offset","prevDate","getFormattedDateWithTime","_jsxs","children","className","_jsx","onClick","width","height","href","icons","concat","Loader","data","dateText","textContent","dateObj","formattedDateWithTime","length","Popover","anchorOrigin","vertical","horizontal","transformOrigin","id","open","Boolean","anchorEl","onClose","slotProps","paper","elevation","transitionDuration","enter","exit","waterInfo","find","item","_id","persent","toFixed","perDay","renderPopover","_getMonthBounds","getMonthBounds","getMonthDays","map","_monthWater$find","_monthWater$find2","percentage","e","target","DeleteWaterModal","_ref","recordId","_Fragment","dataDelete","deleteWaterThunk","then","error","TodayWrapper","TodayItem","TodayInfo","TodayTitle","WrapNoList","img","Forget","TodayList","TodayVolume","TodayTime","IconGlass","TodayTools","ButtonChange","ButtonDelete","AddWaterBtn","LoaderWrapper","TodayListModal","isEditing","initialAmount","initialTime","existingRecordId","amount","setAmount","times","setTime","handleKeyDown","code","window","addEventListener","removeEventListener","formatTime","title","displayTime","prevAmount","Number","isNaN","type","value","onChange","newValue","startsWith","parseFloat","substring","onBlur","isoDate","toISOString","slice","_times$split","split","_times$split2","hours","minutes","currentDate2","newDate","getHours","getMinutes","waterData","waterVolume","time","editWaterThunk","_objectSpread","addWatersThunk","iconsList","edit","delete","glass","add","TodayWaterList","isModalOpen","setIsModalOpen","selectedWaterItem","setSelectedWaterItem","_useState5","_useState6","isDeleteWaterModalOpen","setDeleteWaterModalOpen","getTodayWater","undefined","openModalToEdit","openModalToDelete","WaterRatioPanelContainer","WaterRange","WaterRangeHeader","WaterRangeContainer","RateContainer","MiddleMark","StartMark","EndMark","AddWaterButton","WaterRatioPanel","waterPercent","Math","round","isShow","readOnly","style","backgroundSize","limit","min","max","left","getPosition","onShow","ModalOverlay","Modal","TopDiv","FormulasBox","FormulaBox","LabelText","InputText","RequiredText","CaptionBox","ColoredFormula","CaptionMark","CaptionText","FormBigText","WaterFormInput","RequiredWaterBox","_templateObject19","RequiredWater","_templateObject20","SaveButton","_templateObject21","RadioButton","_templateObject22","DailyNormaBox","_templateObject23","DailyText","_templateObject24","RequiredWaterHeader","_templateObject25","BottomBox","_templateObject26","EditWaterButton","_templateObject27","genderData","weightData","activityTimeData","dailyNormaData","willDrinkData","gender","setGender","weight","setWeight","activityTime","setActivityTime","_useState7","_useState8","setDailyNorma","_useState9","_useState10","willDrink","setWillDrink","weightInputRef","useRef","activityTimeInputRef","willDrinkInputRef","handleGenderChange","selectedGender","calculateDailyNorma","useCallback","userWeight","userActivity","formulaResult","handleSave","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","requestData","_context","prev","next","updateDailyNorma","stop","apply","arguments","onMouseDown","currentTarget","button","name","checked","htmlFor","numericValue","replace","onFocus","current","ref","defaultValue","maxLength","onKeyDown","includes","key","preventDefault","selectDailyNormaData","selectDailyNormaWeight","selectDailyNormaGender","selectDailyNormaActivity","selectDailyNormaWillDrink","DailyNorma","userId","selectAuthUserData","getDailyNorma","formattedAmount","HomePageSection","mobile","tablet","desktop","ContentWrapper","BottleImg","bottle","MonthStatsTable"],"sourceRoot":""}