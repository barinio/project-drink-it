{"version":3,"file":"static/js/453.5b7b0345.chunk.js","mappings":"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","sources":["components/LogInForm/LogIn.styled.js","components/LogInForm/LogIn.jsx","page/LoginPage.styled.js","page/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const FormStyle = styled.form`\n  @media screen and (max-width: 319px) {\n    display: flex;\n    flex-direction: column;\n    max-width: 280px;\n    margin: 0 auto;\n    h3 {\n      margin: 0 0 16px 0;\n      font-family: 'Roboto', sans-serif;\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.2;\n      color: var(--primery-color-black);\n    }\n\n    label {\n      margin-bottom: 8px;\n      font-family: 'Roboto', sans-serif;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.3;\n      color: var(--primery-color-black);\n    }\n    input {\n      font-family: 'Roboto', sans-serif;\n      font-size: 16px;\n      color: var(--secondary-color-blue);\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25;\n      border: none;\n      max-width: 234px;\n    }\n    div {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 12px 10px;\n      border-radius: 6px;\n      border: 1px solid var(--btn-color-light-blue);\n\n      background-color: var(--primery-color-white);\n    }\n    input:focus {\n      color: var(--primery-color-blue);\n      outline: none;\n    }\n    input::placeholder {\n      color: var(--secondary-color-blue);\n    }\n\n    span {\n      font-family: 'Roboto', sans-serif;\n      font-size: 14px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.28;\n      color: var(--btn-color-red);\n    }\n    button {\n      cursor: pointer;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.25;\n      display: flex;\n      padding: 10px 30px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 10px;\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n      background-color: var(--primery-color-blue);\n      border: none;\n      color: var(--primery-color-white);\n      margin-bottom: 16px;\n    }\n    button:hover,\n    button:focus {\n      box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    }\n    button:active {\n      box-shadow: none;\n    }\n    .icon-wrapper,\n    .icon-wrapper:hover,\n    .icon-wrapper:focus {\n      box-shadow: none;\n    }\n    a {\n      color: var(--primery-color-blue);\n      text-decoration: none;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25;\n    }\n    a:hover,\n    a:focus {\n      color: #ff9d43;\n    }\n    .inputWrapper {\n      display: block;\n      background-color: transparent;\n      padding: 0;\n      border-radius: 0;\n      border: none;\n      margin-bottom: 16px;\n    }\n    .icon-wrapper {\n      cursor: pointer;\n      padding: 0;\n      border-radius: none;\n      border: none;\n      margin-bottom: 0;\n      background-color: var(--primery-color-white);\n    }\n  }\n\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    max-width: 280px;\n    margin: 0 auto;\n    h3 {\n      margin: 0 0 16px 0;\n      font-family: 'Roboto', sans-serif;\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.2;\n      color: var(--primery-color-black);\n    }\n\n    label {\n      margin-bottom: 8px;\n      font-family: 'Roboto', sans-serif;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.3;\n      color: var(--primery-color-black);\n    }\n    input {\n      font-family: 'Roboto', sans-serif;\n      font-size: 16px;\n      color: var(--secondary-color-blue);\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25;\n      border: none;\n      width: 234px;\n    }\n    div {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 12px 10px;\n      border-radius: 6px;\n      border: 1px solid var(--btn-color-light-blue);\n\n      background-color: var(--primery-color-white);\n    }\n    input:focus {\n      color: var(--primery-color-blue);\n      outline: none;\n    }\n    input::placeholder {\n      color: var(--secondary-color-blue);\n    }\n\n    span {\n      font-family: 'Roboto', sans-serif;\n      font-size: 14px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.28;\n      color: var(--btn-color-red);\n    }\n    button {\n      cursor: pointer;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.25;\n      display: flex;\n      padding: 10px 30px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 10px;\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n      background-color: var(--primery-color-blue);\n      border: none;\n      color: var(--primery-color-white);\n      margin-bottom: 16px;\n    }\n    button:hover,\n    button:focus {\n      box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    }\n    button:active {\n      box-shadow: none;\n    }\n    .icon-wrapper,\n    .icon-wrapper:hover,\n    .icon-wrapper:focus {\n      box-shadow: none;\n    }\n    a {\n      color: var(--primery-color-blue);\n      text-decoration: none;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 1.25;\n    }\n    a:hover,\n    a:focus {\n      color: #ff9d43;\n    }\n    .inputWrapper {\n      display: block;\n      background-color: transparent;\n      padding: 0;\n      border-radius: 0;\n      border: none;\n      margin-bottom: 16px;\n    }\n    .icon-wrapper {\n      cursor: pointer;\n      padding: 0;\n      border-radius: none;\n      border: none;\n      margin-bottom: 0;\n      background-color: var(--primery-color-white);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    margin: 0;\n    input {\n      width: 290px;\n    }\n    button {\n      cursor: pointer;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.3;\n      display: flex;\n      padding: 10px 30px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 10px;\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n      background-color: var(--primery-color-blue);\n      border: none;\n      color: var(--primery-color-white);\n      margin-bottom: 16px;\n    }\n    .icon-wrapper,\n    .icon-wrapper:hover,\n    .icon-wrapper:focus {\n      box-shadow: none;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    min-width: 384px;\n    margin-top: 140px;\n    margin-right: 112px;\n    input {\n      width: 334px;\n    }\n    .icon-wrapper,\n    .icon-wrapper:hover,\n    .icon-wrapper:focus {\n      box-shadow: none;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { FormStyle } from './LogIn.styled';\nimport * as Yup from 'yup';\nimport { NavLink } from 'react-router-dom';\nimport icons from '../../img/icons.svg';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/thunk';\n\nconst LogInForm = () => {\n  const [visible, setVisible] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .required('Email is required')\n      .email('Invalid email address'),\n    password: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(64, 'Password is too long')\n      .required('Password is requird'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: (values, { resetForm }) => {\n      console.log('onSubmit', values);\n      dispatch(loginThunk(values));\n      resetForm();\n    },\n    validationSchema: validationSchema,\n  });\n  return (\n    <FormStyle onSubmit={formik.handleSubmit}>\n      <h3>Sing In</h3>\n      <div className=\"inputWrapper\">\n        <label>Enter your email</label>\n        <div\n          style={{\n            borderColor:\n              formik.errors.email && formik.touched.email\n                ? '#ef5050'\n                : '#9ebbff',\n            marginBottom: 4,\n            color: '#ef5050',\n          }}\n        >\n          <input\n            type=\"email\"\n            placeholder=\"E-mail\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            style={{\n              color:\n                formik.errors.email && formik.touched.email\n                  ? '#ef5050'\n                  : '#407bff',\n            }}\n          />\n        </div>\n        <span>\n          {formik.errors.email && formik.touched.email && formik.errors.email}\n        </span>\n      </div>\n      <div className=\"inputWrapper\">\n        <label>Enter your password</label>\n        <div\n          style={{\n            borderColor:\n              formik.errors.password && formik.touched.password\n                ? '#ef5050'\n                : '#9ebbff',\n            marginBottom: 4,\n            color: '#ef5050',\n          }}\n        >\n          <input\n            type={visible ? 'text' : 'password'}\n            placeholder=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            style={{\n              color:\n                formik.errors.password && formik.touched.password\n                  ? '#ef5050'\n                  : '#407bff',\n            }}\n          />\n          <button className=\"icon-wrapper\" onClick={() => setVisible(!visible)}>\n            <svg width=\"16\" height=\"16\">\n              <use\n                href={\n                  visible\n                    ? icons + '#icon-opend-eye'\n                    : icons + '#icon-closed-eye'\n                }\n              ></use>\n            </svg>\n          </button>\n        </div>\n        <span>\n          {formik.errors.password &&\n            formik.touched.password &&\n            formik.errors.password}\n        </span>\n      </div>\n      <button type=\"submit\">Sign In</button>\n      <NavLink to=\"/signup\">Sign up</NavLink>\n    </FormStyle>\n  );\n};\n\nexport default LogInForm;\n","import styled from 'styled-components';\nimport mobileImg from '../img/background-img-mobile.png';\nimport tabletImg from '../img/background-img-tablet.png';\nimport desktopImg from '../img/background-img-desktop.png';\n\nexport const LoginSection = styled.section`\n  @media screen and (max-width: 767px) {\n    background-image: url(${mobileImg});\n    background-repeat: no-repeat;\n    background-position: center top 27px;\n    height: 100vh;\n  }\n  @media screen and (min-width: 768px) {\n    position: relative;\n    height: 100vh;\n    &::before {\n      content: '';\n      position: absolute;\n      top: -107px;\n      bottom: 0px;\n      left: 0px;\n      right: 0px;\n      background-image: url(${tabletImg});\n      background-repeat: no-repeat;\n      background-size: auto;\n      z-index: -1;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    height: 100vh;\n    &::before {\n      top: -272px;\n      background-image: url(${desktopImg});\n      background-position: center;\n    }\n  }\n`;\n\nexport const LoginContainer = styled.div`\n  @media screen and (max-width: 767px) {\n    max-width: 320px;\n    padding: 0 20px;\n\n    margin: 0 auto;\n    height: 100vh;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 32px;\n    margin: 0;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n    padding: 0 104px;\n\n    display: flex;\n    justify-content: flex-end;\n    margin: 0 auto;\n  }\n`;\n","import LogInForm from 'components/LogInForm/LogIn';\nimport { Section } from 'components/Section/Section';\n// import { LoginSection, LoginContainer } from './LoginPage.styled';\nimport { LoginContainer } from './LoginPage.styled';\n\nconst LogInPage = () => {\n  return (\n    // <LoginSection>\n    <Section>\n      <LoginContainer>\n        <LogInForm />\n      </LoginContainer>\n    </Section>\n    // </LoginSection>\n  );\n};\n\nexport default LogInPage;\n"],"names":["FormStyle","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","visible","setVisible","dispatch","useDispatch","validationSchema","Yup","email","required","password","min","max","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","console","log","loginThunk","_jsxs","handleSubmit","children","_jsx","className","style","borderColor","errors","touched","marginBottom","color","type","placeholder","name","value","onChange","handleChange","onBlur","handleBlur","onClick","width","height","href","icons","NavLink","to","LoginContainer","mobileImg","tabletImg","desktopImg","_templateObject2","Section","LogInForm"],"sourceRoot":""}