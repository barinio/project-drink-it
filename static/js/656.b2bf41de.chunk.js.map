{"version":3,"file":"static/js/656.b2bf41de.chunk.js","mappings":"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","sources":["components/DeleteWaterModal/DeleteWaterModal.styled.js","components/TodayListModal/TodayListModal.styled.js","components/MonthStatsTable/MonthStatsTable.styled.js","../node_modules/date-fns/startOfMonth.mjs","../node_modules/date-fns/endOfMonth.mjs","../node_modules/date-fns/eachDayOfInterval.mjs","redux/monthWater/monthWaterselectors.js","redux/waterDetails/waterSelectors.js","../node_modules/date-fns/isSameDay.mjs","../node_modules/date-fns/isToday.mjs","components/MonthStatsTable/MonthStatsTable.jsx","components/DeleteWaterModal/DeleteWaterModal.jsx","components/TodayWaterList/TodayWaterList.styled.js","components/TodayListModal/TodayListModal.jsx","components/TodayWaterList/TodayWaterList.jsx","components/WaterRatioPanel/WaterRatioPanel.styled.js","components/WaterRatioPanel/WaterRatioPanel.jsx","components/DailyNorma/dailyNorma.styled.js","components/DailyNorma/dailyNormaModal.jsx","components/DailyNorma/dailyNorma.jsx","page/HomePage.styled.js","page/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BoxModal = styled.div`\n  padding: 0 24px 32px;\n`;\n\nexport const ButtonStyle = styled.button`\n  display: inline-block;\n  width: 100%;\n  padding: 8px 30px;\n  color: #fff;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  background-color: var(--btn-color-red);\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n  &:active {\n    box-shadow: none;\n  }\n\n  &:last-of-type {\n    color: var(--primery-color-blue);\n    background-color: var(--btn-color-light-blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    padding: 10px 30px;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n  }\n`;\n\nexport const TextStyle = styled.p`\n  font-size: 18px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-weight: 500;\n  margin-bottom: 24px;\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 32px 24px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  position: fixed;\n  padding: 0;\n  margin: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  &.base-modal-enter {\n    opacity: 0;\n  }\n\n  &.base-modal-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in-out;\n  }\n\n  &.base-modal-exit {\n    opacity: 1;\n  }\n\n  &.base-modal-exit-active {\n    opacity: 0;\n    transition: opacity 300ms ease-in-out 200ms;\n  }\n`;\nexport const ModalContent = styled.div`\n  translate: -50% -50%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  min-width: 280px;\n  max-height: 90vh;\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: auto;\n  z-index: 1200;\n\n  @media screen and (min-width: 768px) {\n    min-width: 592px;\n  }\n\n  &.modal-content-enter {\n    opacity: 0;\n    scale: 0.5;\n  }\n\n  &.modal-content-enter-active {\n    opacity: 1;\n    scale: 1;\n    transition: opacity 300ms ease-in-out 200ms, scale 200ms ease-in-out 200ms;\n  }\n\n  &.modal-content-exit {\n    opacity: 1;\n    scale: 1;\n  }\n\n  &.modal-content-exit-active {\n    opacity: 0;\n    scale: 0.5;\n    transition: opacity 300ms ease-in-out, scale 200ms ease-in-out;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 12px;\n  color: var(--primery-color-black);\n\n  h2 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 32px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  padding: 0;\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 100%;\n  height: 100%;\n  stroke: var(--primery-color-blue);\n\n  &:hover,\n  &:focus {\n    stroke: var(--secondary-yellow);\n  }\n`;\n\nexport const BoxAddModal = styled.div`\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n\n  h3 {\n    margin-bottom: 16px;\n    color: var(--primery-color-black);\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.1;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 704px;\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-width: 592px;\n  }\n`;\n\nexport const PreviousInfo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 24px;\n  gap: 12px;\n  border-radius: 10px;\n  background-color: var(--bg-color-light-blue);\n  width: 254px;\n  margin-bottom: 24px;\n`;\n\nexport const AddParagraph = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 12px;\n`;\n\nexport const AddWater = styled.div`\n  margin-bottom: 24px;\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const Water = styled.p`\n  color: var(--primery-color-blue);\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  width: 92px;\n  height: 36px;\n`;\n\nexport const Label = styled.div`\n  border-radius: 40px;\n  background: var(--btn-color-light-blue);\n  padding-left: 10px;\n  padding-right: 16px;\n  margin-left: 10px;\n  margin-right: 10px;\n`;\n\nexport const ButtonMl = styled.button`\n  background-color: var(--primery-color-white);\n  color: var(--primery-color-blue);\n  border-radius: 30px;\n  border: 1px solid var(--secondary-color-blue);\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  padding: 4px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover &:focus {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--primery-color-blue);\n`;\n\nexport const AddTime = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const InputTime = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  &::placeholder {\n    color: var(--primery-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const Input = styled.input`\n  color: var(--primery-color-blue);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 100%;\n  display: flex;\n  padding: 12px 10px;\n  align-items: flex-start;\n  gap: 10px;\n  border-radius: 6px;\n  border: 1px solid var(--btn-color-light-blue);\n  background-color: var(--primery-color-white);\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &::placeholder {\n    color: var(--secondary-color-blue);\n  }\n\n  &:hover {\n    color: var(--primery-color-blue);\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid var(--primery-color-blue);\n  }\n\n  &:not(:placeholder-shown) {\n    color: var(--primery-color-blue);\n  }\n`;\n\nexport const FooterModal = styled.div`\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  span {\n    color: var(--primery-color-blue);\n    text-align: center;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.33;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: end;\n    align-items: center;\n    gap: 24px;\n    margin-top: 24px;\n  }\n`;\n\nexport const AddButtonSave = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  background-color: var(--primery-color-blue);\n  color: #fff;\n  padding: 10px 30px;\n  border-radius: 10px;\n  font-size: 18px;\n  width: 100%;\n  height: 44px;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: background-color 250ms cubic-bezier(0.165, 0.84, 0.44, 1.03);\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CalendarStyle = styled.div`\n  @media screen and (min-width: 320px) {\n    .header {\n      display: flex;\n      justify-content: space-between;\n      padding-bottom: 16px;\n    }\n\n    .sectionText {\n      color: var(--primery-color-black);\n      font-size: 24px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 30px;\n    }\n    .month {\n      display: grid;\n      grid-template-columns: repeat(5, 1fr);\n      grid-template-rows: repeat(7, 0.5fr);\n      gap: 10px;\n    }\n    .monthNav {\n      display: flex;\n      align-items: center;\n    }\n\n    .navBtn {\n      display: flex;\n      border: none;\n      background-color: transparent;\n      justify-content: center;\n    }\n\n    .dateText {\n      color: var(--primery-color-blue);\n      width: 130px;\n      text-align: center;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .calendarDayBtn {\n      width: 34px;\n      height: 34px;\n      border-radius: 20px;\n      border: none;\n      background-color: var(--primery-color-white);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n\n    .today {\n      background-color: var(--secondary-color-blue);\n    }\n\n    .day {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n      align-items: center;\n    }\n    .progressWaterText {\n      color: var(--secondary-color-blue);\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n\n    .border {\n      border: 1px solid var(--calendar-color-orange);\n    }\n\n    .border-green {\n      border: 1px solid var(--calendar-color-green);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .month {\n      grid-template-columns: repeat(10, 1fr);\n      grid-template-rows: repeat(4, 1fr);\n    }\n    .sectionText {\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const ContentPopover = styled.div`\n  @media screen and (min-width: 320px) {\n    position: relative;\n    display: inline-flex;\n    padding: 24px 13px;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n\n    .closeBtnPopover {\n      position: absolute;\n      top: 26px;\n      right: 13px;\n      border: none;\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n    }\n    .datePopover {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .datePopoverText {\n      color: var(--primery-color-black);\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    .popoverColorText {\n      color: var(--primery-color-blue);\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 24px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const LoaderMonthWrapper = styled.div`\n  position: relative;\n  height: 262px;\n`;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date) {\n  const _date = toDate(date);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link eachDayOfInterval} function options.\n */\n\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of days from the day of the interval start to the day of the interval end\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport function eachDayOfInterval(interval, options) {\n  const startDate = toDate(interval.start);\n  const endDate = toDate(interval.end);\n\n  let reversed = +startDate > +endDate;\n  const endTime = reversed ? +startDate : +endDate;\n  const currentDate = reversed ? endDate : startDate;\n  currentDate.setHours(0, 0, 0, 0);\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+currentDate <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachDayOfInterval;\n","export const selectMonthWaterDetails = state => state.monthWater.month;\nexport const selectIsLoadingMonthWater = state => state.monthWater.isLoading;\n","export const selectTodayWater = state => state.waterDetails.today;\nexport const selectMonthWater = state => state.waterDetails.month;\nexport const selectDailyDrank = state => state.waterDetails.dailyDrank;\nexport const selectIsLoadingList = state => state.waterDetails.isLoading;\nexport const selectOwnerId = state => state.waterDetails.ownerId;\nexport const selectNorma = state => state.dailyNorma.dailyNorma;\n","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { isSameDay } from \"./isSameDay.mjs\";\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date) {\n  return isSameDay(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import React, { useState, useEffect } from 'react';\nimport { CalendarStyle, ContentPopover, LoaderMonthWrapper } from './MonthStatsTable.styled';\nimport icons from '../../img/icons.svg';\nimport { Popover } from '@mui/material';\nimport { format, startOfMonth, endOfMonth, eachDayOfInterval } from 'date-fns';\nimport { getMonthWater } from 'redux/monthWater/monthWaterThunk';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoadingMonthWater,\n  selectMonthWaterDetails,\n} from 'redux/monthWater/monthWaterselectors';\nimport { formatDate } from 'redux/waterDetails/helpers';\nimport Loader from 'components/Loader/Loader';\nimport { selectDailyDrank, selectNorma } from 'redux/waterDetails/waterSelectors';\nimport { isToday } from 'date-fns';\n\nconst MonthStatsTable = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  const isLoadingMonth = useSelector(selectIsLoadingMonthWater);\n  const monthWater = useSelector(selectMonthWaterDetails);\n\n  const dailyDrank = useSelector(selectDailyDrank);\n  const dailyNorma = useSelector(selectNorma);\n\n  const d = formatDate(currentDate);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMonthWater(d));\n  }, [dispatch, d, dailyDrank, dailyNorma]);\n\n  const handleChangeMonth = offset => {\n    setCurrentDate(prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() + offset));\n  };\n\n  const getMonthBounds = date => {\n    return {\n      start: startOfMonth(date),\n      end: endOfMonth(date),\n    };\n  };\n\n  const getBorderStyle = percentage => {\n    if (percentage === 100) {\n      return 'border';\n    } else if (percentage >= 100) {\n      return 'border-green';\n    }\n  };\n\n  const getMonthDays = date => {\n    const { start, end } = getMonthBounds(date);\n\n    return eachDayOfInterval({ start, end });\n  };\n  const getFormattedDateWithTime = date => formatDate(new Date(date.setHours(0, 0, 0, 0)));\n\n  const renderPopover = data => {\n    const dateText = selectedDate.textContent;\n    const dateObj = new Date(currentDate.getFullYear(), currentDate.getMonth(), dateText);\n    const formattedDateWithTime = getFormattedDateWithTime(dateObj);\n\n    if (!data || data.length === 0) {\n      return (\n        <ContentPopover>\n          <h3>{format(dateObj, 'd MMMM yyyy')}</h3>\n          <p>No information</p>\n          <button className=\"closeBtnPopover\" onClick={() => setSelectedDate(null)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-close-day-details'}></use>{' '}\n            </svg>\n          </button>\n        </ContentPopover>\n      );\n    }\n\n    const waterInfo = data.find(\n      item => getFormattedDateWithTime(new Date(item._id)) === formattedDateWithTime\n    );\n    if (waterInfo) {\n      return (\n        <Popover\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          id=\"alex\"\n          open={Boolean(selectedDate)}\n          anchorEl={selectedDate}\n          onClose={() => setSelectedDate(null)}\n          slotProps={{\n            paper: { elevation: 3 },\n          }}\n          transitionDuration={{\n            enter: 500,\n            exit: 500,\n          }}\n        >\n          <ContentPopover>\n            <p className=\"datePopover\">{format(dateObj, 'd,MMMM')}</p>\n            <p className=\"datePopoverText\">\n              Daily norma: <span className=\"popoverColorText\">{waterInfo.dailyNorma}L</span>\n            </p>\n            <p className=\"datePopoverText\">\n              Fulfillment of the daily norm:{' '}\n              <span className=\"popoverColorText\">{waterInfo.persent.toFixed(0)}%</span>\n            </p>\n            <p className=\"datePopoverText\">\n              How many servings of water:{' '}\n              <span className=\"popoverColorText\">{waterInfo.perDay}</span>\n            </p>\n            <button className=\"closeBtnPopover\" onClick={() => setSelectedDate(null)}>\n              <svg width=\"14\" height=\"14\">\n                <use href={icons + '#icon-close-day-details'}></use>{' '}\n              </svg>\n            </button>\n          </ContentPopover>\n        </Popover>\n      );\n    }\n  };\n\n  return (\n    <CalendarStyle>\n      <div className=\"header\">\n        <span className=\"sectionText\">Month</span>\n        <div className=\"monthNav\">\n          <button className=\"navBtn\" onClick={() => handleChangeMonth(-1)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-left'}></use>\n            </svg>\n          </button>\n          <h2 className=\"dateText\">{format(currentDate, 'LLLL, yyyy')}</h2>\n          <button className=\"navBtn\" onClick={() => handleChangeMonth(1)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={icons + '#icon-arrow-right'}></use>{' '}\n            </svg>\n          </button>\n        </div>\n      </div>\n      {isLoadingMonth ? (\n        <LoaderMonthWrapper>\n          <Loader />\n        </LoaderMonthWrapper>\n      ) : (\n        <ul className=\"month\">\n          {selectedDate && renderPopover(monthWater)}\n          {getMonthDays(currentDate).map(date => (\n            <li key={format(date, 'yyyy-MM-dd')} className=\"day\">\n              <button\n                className={`calendarDayBtn ${isToday(date) ? 'today' : ''} ${getBorderStyle(\n                  monthWater.find(\n                    item =>\n                      getFormattedDateWithTime(new Date(item._id)) ===\n                      getFormattedDateWithTime(date)\n                  )?.persent\n                )}`}\n                onClick={e => setSelectedDate(e.target)}\n              >\n                {format(date, 'd')}\n              </button>\n              <p className=\"progressWaterText\">\n                {monthWater\n                  .find(\n                    item =>\n                      getFormattedDateWithTime(new Date(item._id)) ===\n                      getFormattedDateWithTime(date)\n                  )\n                  ?.persent.toFixed(0) || 0}\n                %\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </CalendarStyle>\n  );\n};\n\nexport default MonthStatsTable;\n","import { useDispatch } from 'react-redux';\nimport { deleteWaterThunk } from 'redux/waterDetails/waterThunk';\nimport {\n  BoxModal,\n  ButtonBox,\n  ButtonStyle,\n  TextStyle,\n  ModalHeader,\n} from './DeleteWaterModal.styled';\nimport icons from '../../img/icons.svg';\nimport {\n  Overlay,\n  ModalContent,\n  CloseButton,\n  CloseIcon,\n} from 'components/TodayListModal/TodayListModal.styled';\n\nexport const DeleteWaterModal = ({ onClose, recordId, ownerId }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    console.log(ownerId);\n    const dataDelete = {\n      id: recordId,\n      _id: ownerId,\n    };\n    dispatch(deleteWaterThunk(dataDelete)).then(data => {\n      if (!data.error) onClose();\n    });\n  };\n  return (\n    <>\n      <Overlay onClick={onClose} />\n      <ModalContent className='dark-delete-modal'>\n        <ModalHeader>\n          <h2>Delete entry</h2>\n          <CloseButton onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxModal>\n            <TextStyle className='dark-delete-modal-text'>Are you sure you want to delete the entry?</TextStyle>\n            <ButtonBox>\n              <ButtonStyle className=\"dark-delete-button\" onClick={handleDelete}>Delete</ButtonStyle>\n              <ButtonStyle onClick={onClose}>Cancel</ButtonStyle>\n            </ButtonBox>\n          </BoxModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TodayWrapper = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const TodayItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 0;\n  align-items: center;\n  border-bottom: 1px solid var(--btn-color-light-blue);\n`;\n\nexport const TodayInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TodayTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: var(--primery-color-black);\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n\nexport const Forget = styled.p`\n  color: var(--secondary-color-blue);\n`;\n\nexport const TodayList = styled.ul`\n  height: 212px;\n  overflow: auto;\n`;\n\nexport const TodayVolume = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.33;\n  color: var(--primery-color-blue);\n  margin-right: 16px;\n`;\n\nexport const TodayTime = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 2;\n  color: var(--primery-color-black);\n`;\n\nexport const IconGlass = styled.svg`\n  width: 26px;\n  height: 26px;\n  margin-right: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 36px;\n    height: 36px;\n  }\n`;\n\nexport const TodayTools = styled.div`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ButtonChange = styled.button`\n  background-color: transparent;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n\n  & svg {\n    stroke: var(--secondary-color-blue);\n    fill: transparent;\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    border-bottom: 1px solid var(--secondary-color-blue);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  background-color: transparent;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n\n  & svg {\n    stroke: var(--btn-color-red);\n    fill: transparent;\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    border-bottom: 1px solid var(--btn-color-red);\n  }\n`;\n\nexport const AddWaterBtn = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  background-color: transparent;\n  color: var(--primery-color-blue);\n  border: none;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  stroke: var(--primery-color-blue);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    fill: transparent;\n  }\n\n  &:hover {\n    color: var(--secondary-yellow);\n    stroke: var(--secondary-yellow);\n  }\n`;\n\nexport const LoaderWrapper = styled.div`\n  height: 212px;\n  position: relative;\n`;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\nimport { formatTime } from 'redux/waterDetails/helpers';\nimport {\n  Overlay,\n  ModalContent,\n  ModalHeader,\n  CloseButton,\n  CloseIcon,\n  BoxAddModal,\n  PreviousInfo,\n  AddParagraph,\n  AddWater,\n  Water,\n  Label,\n  ButtonMl,\n  Icon,\n  AddTime,\n  InputTime,\n  Input,\n  FooterModal,\n  AddButtonSave,\n} from './TodayListModal.styled';\nimport { IconGlass, TodayTime, TodayVolume } from '../TodayWaterList/TodayWaterList.styled';\nimport icons from '../../img/icons.svg';\nimport { addWatersThunk, editWaterThunk } from 'redux/waterDetails/waterThunk';\n\nexport const TodayListModal = ({\n  onClose,\n  isEditing,\n  initialAmount,\n  initialTime,\n  existingRecordId,\n  ownerId,\n}) => {\n  const [amount, setAmount] = useState(initialAmount || 0);\n  const [times, setTime] = useState(\n    isEditing && initialTime ? format(new Date(initialTime), 'HH:mm') : format(new Date(), 'HH:mm')\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n  const increaseAmount = () => {\n    setAmount(prevAmount => prevAmount + 50);\n  };\n\n  const decreaseAmount = () => setAmount(prevAmount => (prevAmount > 0 ? prevAmount - 50 : 0));\n\n  const handleAmountChange = e => {\n    let newValue = e.target.value;\n\n    if (newValue.startsWith('0') && newValue.length > 1) {\n      newValue = parseFloat(newValue.substring(1));\n    }\n    setAmount(parseFloat(newValue));\n  };\n\n  useEffect(() => {\n    if (isEditing) {\n      setAmount(initialAmount || 0);\n      setTime(formatTime(initialTime, 'HH:mm'));\n    } else {\n      setAmount(0);\n      setTime(format(new Date(), 'HH:mm'));\n    }\n  }, [isEditing, initialAmount, initialTime]);\n\n  const handleSubmit = () => {\n    let isoDate;\n    if (isEditing) {\n      isoDate = initialTime\n        ? new Date(initialTime).toISOString().slice(0, 16)\n        : new Date().toISOString();\n    } else if (times) {\n      const currentDate = new Date();\n      const [hours, minutes] = times.split(':');\n      currentDate.setHours(hours, minutes);\n      isoDate = currentDate.toISOString().slice(0, 16);\n\n      const currentDate2 = new Date(isoDate);\n\n      const newDate = new Date(currentDate2);\n      newDate.setHours(currentDate2.getHours() + 2);\n\n      const formattedNewDate =\n        newDate.getFullYear() +\n        '-' +\n        ('0' + (newDate.getMonth() + 1)).slice(-2) +\n        '-' +\n        ('0' + newDate.getDate()).slice(-2) +\n        'T' +\n        ('0' + newDate.getHours()).slice(-2) +\n        ':' +\n        ('0' + newDate.getMinutes()).slice(-2);\n      isoDate = formattedNewDate;\n    }\n\n    const waterData = {\n      waterVolume: amount,\n      time: isoDate,\n    };\n\n    if (isEditing) {\n      dispatch(editWaterThunk({ _id: ownerId, id: existingRecordId, ...waterData })).then(data => {\n        if (!data.error) onClose();\n      });\n    } else {\n      dispatch(addWatersThunk(waterData)).then(data => {\n        if (!data.error) {\n          onClose();\n          setAmount(0);\n        }\n      });\n    }\n    onClose();\n  };\n\n  const handleOnClose = () => {\n    if (isEditing) {\n      onClose();\n      return;\n    }\n    onClose();\n    setAmount(0);\n  };\n\n  const title = isEditing ? 'Edit the entered amount of water' : 'Add water';\n\n  const displayTime = isEditing && initialTime ? formatTime(initialTime) : '';\n\n  return (\n    <>\n      <Overlay onClick={handleOnClose} />\n      <ModalContent className='dark-water-modal'>\n        <ModalHeader>\n          <h2>{title}</h2>\n          <CloseButton onClick={onClose}>\n            <CloseIcon>\n              <use href={`${icons}#icon-outline`}></use>\n            </CloseIcon>\n          </CloseButton>\n        </ModalHeader>\n        <div>\n          <BoxAddModal>\n            {isEditing && (\n              <PreviousInfo>\n                <IconGlass>\n                  <use href={`${icons}#icon-glass`}></use>\n                </IconGlass>\n                <TodayVolume>{initialAmount ? `${initialAmount} ml` : 'No notes yet'}</TodayVolume>\n                <TodayTime>{initialTime ? `${displayTime}` : ''}</TodayTime>\n              </PreviousInfo>\n            )}\n            <h3>{isEditing ? 'Correct entered data:' : 'Choose a value:'}</h3>\n            <AddWater>\n              <AddParagraph className='dark-modal-text'>Amount of water:</AddParagraph>\n              <div>\n                <ButtonMl onClick={decreaseAmount}>\n                  <Icon>\n                    <use href={`${icons}#icon-decrement-outline`}></use>\n                  </Icon>\n                </ButtonMl>\n                <Label className='dark-water-modal-button'>\n                  <Water>{Number.isNaN(amount) ? '0' : `${amount}`} ml</Water>\n                </Label>\n                <ButtonMl onClick={increaseAmount}>\n                  <Icon>\n                    <use href={`${icons}#icon-add`}></use>\n                  </Icon>\n                </ButtonMl>\n              </div>\n            </AddWater>\n            <AddTime>\n              <AddParagraph className='dark-modal-text'>Recording time:</AddParagraph>\n              <InputTime\n                type=\"time\"\n                value={times}\n                onChange={e => setTime(e.target.value)}\n                step=\"300\"\n              />\n            </AddTime>\n            <div>\n              <h3>Enter the value of the water used:</h3>\n              <Input\n                type=\"number\"\n                value={Number.isNaN(amount) ? '0' : `${amount}`}\n                onChange={handleAmountChange}\n                onBlur={() => setAmount(prevAmount => prevAmount || initialAmount || 0)}\n              />\n            </div>\n            <FooterModal>\n              <span>{Number.isNaN(amount) ? `0` : `${amount}`}ml</span>\n              <AddButtonSave onClick={handleSubmit}>Save</AddButtonSave>\n            </FooterModal>\n          </BoxAddModal>\n        </div>\n      </ModalContent>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoadingList,\n  selectOwnerId,\n  selectTodayWater,\n} from 'redux/waterDetails/waterSelectors';\nimport { DeleteWaterModal } from '../DeleteWaterModal/DeleteWaterModal';\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\nimport icons from '../../img/icons.svg';\nimport { getTodayWater } from 'redux/waterDetails/waterThunk';\nimport {\n  AddWaterBtn,\n  ButtonChange,\n  ButtonDelete,\n  IconGlass,\n  TodayInfo,\n  TodayItem,\n  TodayList,\n  TodayTime,\n  TodayTitle,\n  TodayTools,\n  TodayVolume,\n  TodayWrapper,\n  Forget,\n  LoaderWrapper,\n} from './TodayWaterList.styled';\nimport { formatTime } from 'redux/waterDetails/helpers';\nimport Loader from 'components/Loader/Loader';\n\nconst iconsList = {\n  edit: `${icons}#icon-edit`,\n  delete: `${icons}#icon-delete`,\n  glass: `${icons}#icon-glass`,\n  add: `${icons}#icon-add`,\n};\n\nexport const TodayWaterList = () => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedWaterItem, setSelectedWaterItem] = useState(null);\n  const [isDeleteWaterModalOpen, setDeleteWaterModalOpen] = useState(false);\n  const { waterlist } = useSelector(selectTodayWater);\n  const isLoadingList = useSelector(selectIsLoadingList);\n  const ownerId = useSelector(selectOwnerId);\n\n  useEffect(() => {\n    dispatch(getTodayWater());\n  }, [dispatch]);\n\n  const openModalToAdd = () => {\n    setSelectedWaterItem(null);\n    setIsModalOpen(true);\n  };\n\n  const openModalToDelete = item => {\n    setSelectedWaterItem(item);\n    setDeleteWaterModalOpen(true);\n  };\n\n  const openModalToEdit = item => {\n    setSelectedWaterItem(item);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <TodayWrapper>\n      <TodayTitle>Today</TodayTitle>\n      {isLoadingList ? (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      ) : (\n        <TodayList>\n          {waterlist?.length === 0 || waterlist === undefined ? (\n            <Forget>You haven't drunk water yet. Don't forget to meet your daily norma! </Forget>\n          ) : (\n            waterlist?.map(item => (\n              <TodayItem key={item.id}>\n                <TodayInfo>\n                  <IconGlass>\n                    <use href={iconsList.glass}></use>\n                  </IconGlass>\n                  <TodayVolume>{item.waterVolume} ml</TodayVolume>\n                  <TodayTime>{formatTime(item.time)}</TodayTime>\n                </TodayInfo>\n                <TodayTools>\n                  <ButtonChange onClick={() => openModalToEdit(item)}>\n                    <svg>\n                      <use href={iconsList.edit}></use>\n                    </svg>\n                  </ButtonChange>\n                  <ButtonDelete onClick={() => openModalToDelete(item)}>\n                    <svg>\n                      <use href={iconsList.delete}></use>\n                    </svg>\n                  </ButtonDelete>\n                </TodayTools>\n              </TodayItem>\n            ))\n          )}\n        </TodayList>\n      )}\n      <AddWaterBtn onClick={openModalToAdd}>\n        <svg>\n          <use href={iconsList.add}></use>\n        </svg>\n        Add Water\n      </AddWaterBtn>\n      {isDeleteWaterModalOpen && (\n        <DeleteWaterModal\n          onClose={() => setDeleteWaterModalOpen(false)}\n          recordId={selectedWaterItem?.id}\n          ownerId={ownerId}\n        />\n      )}\n      {isModalOpen && (\n        <TodayListModal\n          initialAmount={selectedWaterItem?.waterVolume}\n          initialTime={selectedWaterItem?.time}\n          isEditing={selectedWaterItem !== null}\n          existingRecordId={selectedWaterItem?.id}\n          onClose={() => setIsModalOpen(false)}\n          ownerId={ownerId}\n        />\n      )}\n    </TodayWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WaterRatioPanelContainer = styled.div`\n  width: 280px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 24px;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 592px;\n    gap: 32px;\n  }\n`;\n\nexport const WaterRange = styled.input`\n  &[type='range'] {\n    appearance: none;\n    width: 100%;\n    border-radius: 10px;\n    background-color: #d7e3ff;\n    background-image: linear-gradient(to right, #9ebbff, #9ebbff);\n    background-repeat: no-repeat;\n  }\n\n  &[type='range']:focus {\n    outline: none;\n  }\n\n  &[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8px;\n    animation: 0.2s;\n    border-radius: 10px;\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &[type='range']::-webkit-slider-thumb {\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: solid 1px #407bff;\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n`;\n\nexport const WaterRangeHeader = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  margin-bottom: 16px;\n  color: #407bff;\n`;\nexport const WaterRangeContainer = styled.div`\n  position: relative;\n  height: 102px;\n  display: flex;\n  flex-direction: column;\n  padding-left: 11px;\n  padding-right: 11px;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n  }\n`;\n\nexport const RateContainer = styled.div`\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const MiddleMark = styled.span`\n  position: absolute;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  text-align: center;\n  margin-bottom: 4px;\n  gap: 4px;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const StartMark = styled.span`\n  transform: translateX(-50%);\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n    color: #9ebbff;\n  }\n`;\n\nexport const EndMark = styled.span`\n  transform: translateX(50%);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: #407bff;\n\n  &::before {\n    content: '|';\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: #9ebbff;\n  }\n`;\n\nexport const AddWaterButton = styled.button`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  padding: 6px 76px 6px 76px;\n  background-color: #407bff;\n  color: #fff;\n  border: none;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: '0 4px 14px rgba(64, 123, 255, 0.54)';\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    padding: 10px 104px 10px 104px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 178px;\n    height: 44px;\n    padding: 10px 30px 10px 30px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: transparent;\n  stroke: #ffffff;\n`;\n","import {\n  Icon,\n  AddWaterButton,\n  StartMark,\n  MiddleMark,\n  RateContainer,\n  EndMark,\n  WaterRange,\n  WaterRangeContainer,\n  WaterRangeHeader,\n  WaterRatioPanelContainer,\n} from './WaterRatioPanel.styled';\n\nimport { TodayListModal } from '../TodayListModal/TodayListModal';\n\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport icons from '../../img/icons.svg';\nimport { selectDailyDrank, selectNorma } from 'redux/waterDetails/waterSelectors';\n\nexport const WaterRatioPanel = () => {\n  const dailyNorm = useSelector(selectNorma);\n  const dailyDrank = useSelector(selectDailyDrank);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const waterPercent = Math.round((100 * dailyDrank) / dailyNorm);\n\n  const getBackgroundSize = () => {\n    if (Number.isNaN(waterPercent)) {\n      return { backgroundSize: `${0}` };\n    }\n    return {\n      backgroundSize: `${waterPercent}%`,\n    };\n  };\n\n  const getPosition = () => {\n    const limit = Math.min(100, Math.max(0, waterPercent));\n    return {\n      left: `calc(${limit}% - 2px)`,\n    };\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const isShow = waterPercent > 0 && waterPercent <= 100;\n\n  return (\n    <WaterRatioPanelContainer>\n      <WaterRangeContainer>\n        <WaterRangeHeader>Today</WaterRangeHeader>\n        <WaterRange\n          type=\"range\"\n          value={Number.isNaN(waterPercent) ? `0` : waterPercent}\n          readOnly={true}\n          style={getBackgroundSize()}\n          aria-label=\"Water range\"\n        />\n        <RateContainer>\n          <StartMark>0%</StartMark>\n          {isShow && (\n            <MiddleMark id=\"waterMark\" style={getPosition()}>{`${waterPercent}%`}</MiddleMark>\n          )}\n          <EndMark>100%</EndMark>\n        </RateContainer>\n      </WaterRangeContainer>\n      <AddWaterButton\n        onClick={() => {\n          openModal();\n        }}\n      >\n        <Icon>\n          <use href={`${icons}#icon-add-button`}></use>\n        </Icon>\n        Add Water\n      </AddWaterButton>\n      {isModalOpen && (\n        <TodayListModal\n          onClose={() => {\n            closeModal();\n          }}\n          onShow={isModalOpen}\n        />\n      )}\n    </WaterRatioPanelContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const GlobalStyles = styled.div`\n  @media screen and (min-width: 768px) {\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    input[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n`;\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Modal = styled.div`\n  background: var(--primery-color-white);\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  @media screen and (max-width: 319px) {\n    padding: 24px 12px;\n    max-width: 280px;\n  }\n  @media screen and (min-width: 320px) {\n    padding: 24px 12px;\n    max-width: 280px;\n    max-height: 816px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n    max-width: 704px;\n    max-height: 696px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 592px;\n    max-height: 712px;\n  }\n`;\nexport const TopDiv = styled.div`\n  position: relative;\n`;\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 4px;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: large;\n  font-weight: 900;\n  color: var(--primery-color-blue);\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: var(--btn-color-red);\n  }\n`;\nexport const ModalHeader = styled.div`\n  color: var(--primery-color-black);\n  line-height: 32px;\n  font-size: 26px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const FormulasBox = styled.div`\n  margin-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\nexport const FormulaBox = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 24px;\n  }\n`;\nexport const LabelText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n`;\nexport const InputText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredText = styled.div`\n  color: var(--primery-color-black);\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n\n  @media screen and (min-width: 320px) {\n    width: 190px;\n  }\n  @media screen and (min-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const CaptionBox = styled.div`\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 10px;\n  padding: 10px;\n  margin-top: 12px;\n  width: 100%;\n\n  @media screen and (min-width: 320px) {\n    height: 100px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n  }\n  @media screen and (min-width: 1440px) {\n    height: 68px;\n  }\n`;\nexport const ColoredFormula = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-left: 4px;\n`;\nexport const CaptionMark = styled.span`\n  color: var(--primery-color-blue);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const CaptionText = styled.div`\n  color: #8f8f8f;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n`;\nexport const FormBigText = styled.div`\n  margin-top: 24px;\n  color: var(--primery-color-black);\n  line-height: 20px;\n  font-size: 18px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n`;\nexport const WaterFormInput = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 8px;\n`;\nexport const WaterFormInputSpecial = styled.input`\n  height: 44px;\n  width: 100%;\n  outline: none;\n  border: 1px solid var(--btn-color-light-blue);\n  border-radius: 6px;\n  color: var(--primery-color-blue);\n  padding: 12px 10px;\n  font-size: 16px;\n  line-height: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-top: 16px;\n`;\nexport const RequiredWaterBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 16px;\n`;\nexport const RequiredWater = styled.div`\n  color: var(--primery-color-blue);\n  font-size: 18px;\n  line-height: 24px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 900;\n  margin-left: 6px;\n`;\nexport const SaveButton = styled.button`\n  border-radius: 10px;\n  border: none;\n  background-color: var(--primery-color-blue);\n  color: var(--primery-color-white);\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  padding: 10px 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  transition: box-shadow 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 4px 14px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:focus {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  }\n\n  @media screen and (max-width: 319px) {\n    width: calc(100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n  @media screen and (min-width: 320px) {\n    width: calc(100% - 24px);\n    height: 36px;\n    font-size: 16px;\n    line-height: 20px;\n    position: absolute;\n    bottom: 24px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    font-size: 18px;\n    line-height: 24px;\n    position: absolute;\n    right: 24px;\n    bottom: 32px;\n  }\n`;\nexport const RadioButton = styled.div`\n  input {\n    display: none;\n  }\n\n  margin-top: 16px;\n\n  label {\n    display: inline-block;\n    position: relative;\n    padding-left: 22px;\n    margin-right: 24px;\n    cursor: pointer;\n  }\n\n  label::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 14px;\n    height: 14px;\n    border: 1px solid var(--primery-color-blue);\n    border-radius: 50%;\n    background-color: var(--primery-color-white);\n    box-sizing: border-box;\n  }\n\n  label::after {\n    content: '';\n    position: absolute;\n    left: 4px;\n    top: 7px;\n    width: 6px;\n    height: 6px;\n    border: none;\n    border-radius: 50%;\n    background-color: transparent;\n    box-sizing: border-box;\n  }\n\n  input:checked + label::after {\n    background-color: var(--primery-color-blue);\n  }\n`;\n\n// DAILY NORMA PANEL\n\nexport const DailyNormaBox = styled.div`\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 8px 20px;\n  height: 76px;\n  width: 164px;\n  border-radius: 10px;\n  border: 1px solid var(--bg-color-light-blue);\n  box-shadow: 0 4px 8px 0 rgba(158, 187, 255, 0.12);\n\n\n  &:hover {\n    // box-shadow: 0 4px 4px 0 rgba(158, 187, 255, 0.3);\n  }\n\n\n`;\n\nexport const DailyText = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-black);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  width: 124px;\n`;\n\nexport const RequiredWaterHeader = styled.div`\n  font-family: 'Roboto', sans-serif;\n  color: var(--primery-color-blue);\n  font-weight: 900;\n  line-height: 24px;\n  font-size: 24px;\n`;\n\nexport const BottomBox = styled.div`\n  display: flex;\n  margin-bottom: 0;\n  margin-top: auto;\n  height: 24px;\n`;\n\nexport const EditWaterButton = styled.button`\n  width: 28px;\n  height: 20px;\n  background-color: transparent;\n  color: var(--secondary-color-blue);\n  border: none;\n  cursor: pointer;\n\n  margin-top: 5px;\n  margin-right: 10px;\n  margin-left: auto;\n\n\n  &:hover {\n  }\n`;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { updateDailyNorma } from '../../redux/dailyNorma/dailyNormaThunk';\nimport { useDispatch} from 'react-redux';\n// import { toast } from 'react-toastify';\nimport '../../index.css';\n// import { selectAuthUserData } from 'redux/auth/auth.selectors';\n\nimport {\n    ModalOverlay,\n    Modal,\n    TopDiv,\n    CloseButton,\n    ModalHeader,\n    FormulasBox,\n    FormulaBox,\n    ColoredFormula,\n    CaptionBox,\n    CaptionText,\n    CaptionMark,\n    FormBigText,\n    RadioButton,\n    RequiredText,\n    InputText,\n    WaterFormInput,\n    RequiredWaterBox,\n    RequiredWater,\n    SaveButton,\n    LabelText,\n  } from './dailyNorma.styled';\n\n  // const DailyNormaModal = ({\n  //   onClose,\n  //   genderData,\n  //   weightData,\n  //   activityTimeData,\n  //   dailyNormaData,\n  //   willDrinkData,\n  //   userId,\n  // }) => {\n  const DailyNormaModal = ({\n    onClose,\n    genderData,\n    weightData,\n    activityTimeData,\n    dailyNormaData,\n    willDrinkData,\n  }) => {\n    \n    const dispatch = useDispatch();\n  \n    const [gender, setGender] = useState(genderData);\n    const [weight, setWeight] = useState(weightData);\n    const [activityTime, setActivityTime] = useState(activityTimeData);\n    const [dailyNorma, setDailyNorma] = useState(dailyNormaData);\n    const [willDrink, setWillDrink] = useState(willDrinkData);\n  \n    const weightInputRef = useRef(null);\n    const activityTimeInputRef = useRef(null);\n    const willDrinkInputRef = useRef(null);\n\n    const handleGenderChange = (selectedGender) => {\n      setGender(selectedGender);\n      calculateDailyNorma();\n    };\n  \n    const handleWeightChange = (e) => {\n      let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n      if (numericValue >= 250){\n        numericValue = 250;\n      }\n      setWeight(numericValue);\n    };\n  \n    const handleActivityTimeChange = (e) => {\n      let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n      if (numericValue >= 16){\n        numericValue = 16;\n      }\n      setActivityTime(numericValue);\n    };\n  \n    const handleWillDrinkChange = (e) => {\n      let numericValue = e.target.value.replace(/[^0-9.,]/g, '');\n      if (numericValue >= 15){\n        numericValue = 15;\n      }\n      setWillDrink(numericValue);\n    };\n  \n    const handleWeightFocus = () => {\n      if (parseFloat(weight) === 0) {\n        weightInputRef.current.value = '';\n      }\n    };\n  \n    const handleActivityTimeFocus = () => {\n      if (parseFloat(activityTime) === 0) {\n        activityTimeInputRef.current.value = '';\n      }\n    };\n  \n    const handleWillDrinkFocus = () => {\n      if (parseFloat(willDrink) === 0) {\n        willDrinkInputRef.current.value = '';\n      }\n    };\n  \n    const handleWeightBlur = () => {\n      if (weight === '' || parseFloat(weight) === 0) {\n        weightInputRef.current.value = 0;\n        setWeight(0);\n      }\n      calculateDailyNorma();\n    };\n  \n    const handleActivityTimeBlur = () => {\n      if (activityTime === '' || parseFloat(activityTime) === 0) {\n        activityTimeInputRef.current.value = 0;\n        setActivityTime(0);\n      }\n      calculateDailyNorma();\n    };\n  \n    const handleWillDrinkBlur = () => {\n      if (willDrink === '' || parseFloat(willDrink) === 0) {\n        willDrinkInputRef.current.value = 0;\n        setWillDrink(0);\n      }\n      calculateDailyNorma();\n    };\n\n    const calculateDailyNorma = useCallback(() => {\n      const userWeight = parseFloat(weight);\n      const userActivity = parseFloat(activityTime);\n  \n      if (isNaN(userWeight) || isNaN(userActivity)) {\n        setDailyNorma((2.0).toFixed(1));\n        return;\n      }\n  \n      const genderWeight = gender === 'woman' ? 0.03 : 0.04;\n      const genderActivity = gender === 'woman' ? 0.4 : 0.6;\n      let formulaResult = userWeight * genderWeight + userActivity * genderActivity;\n  \n      formulaResult = formulaResult === 0 ? 2.0 : formulaResult;\n  \n      setDailyNorma(formulaResult > 15 ? 15 : formulaResult.toFixed(1));\n    }, [gender, weight, activityTime]);\n  \n    useEffect(() => {\n      calculateDailyNorma();\n    }, [calculateDailyNorma]);\n  \n    useEffect(() => {\n      const handleKeyDown = e => {\n        if (e.code === 'Escape') {\n          onClose();\n        }\n      };\n  \n      window.addEventListener('keydown', handleKeyDown);\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget && e.button === 0) {\n      onClose();\n    }\n  };\n\n  const handleSave = async () => {\n    const requestData = {\n      // id: userId,\n      gender: gender,\n      weight: parseFloat(weight),\n      activityTime: parseFloat(activityTime),\n      willDrink: parseFloat(willDrink * 1000),\n      dailyNorma: parseFloat(dailyNorma * 1000),\n    };\n    dispatch(updateDailyNorma(requestData));\n    onClose();\n  };\n\nreturn (\n    <ModalOverlay onMouseDown={handleBackdropClick}>\n      <Modal className='dark-daily-norma-modal'>\n        <TopDiv>\n          <ModalHeader className='dark-daily-norma-text'>My daily norma</ModalHeader>\n          <CloseButton onClick={onClose}>&#10005;</CloseButton>\n        </TopDiv>\n\n        <FormulasBox>\n          <FormulaBox>\n            <LabelText className='dark-daily-norma-text'>Female:</LabelText>\n            <ColoredFormula>V=(M*0.03) + (T*0.4)</ColoredFormula>\n          </FormulaBox>\n          <FormulaBox>\n            <LabelText className='dark-daily-norma-text'>Male:</LabelText>\n            <ColoredFormula>V=(M*0.04) + (T*0.6)</ColoredFormula>\n          </FormulaBox>\n        </FormulasBox>\n\n        <CaptionBox>\n          <CaptionText>\n            <CaptionMark>*</CaptionMark> V is the volume of the water norm in liters per day, M is your body weight, T is the time\n            of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n          </CaptionText>\n        </CaptionBox>\n\n        <form>\n          <FormBigText className='dark-daily-norma-text'>Calculate your rate:</FormBigText>\n\n          <RadioButton>\n            <input\n              type=\"radio\"\n              id=\"woman\"\n              name=\"gender\"\n              value=\"woman\"\n              checked={gender === 'woman'}\n              onChange={() => handleGenderChange('woman')}\n            />\n            <label htmlFor=\"woman\">\n              <LabelText className='dark-daily-norma-text'>Female</LabelText>\n            </label>\n\n            <input\n              type=\"radio\"\n              id=\"man\"\n              name=\"gender\"\n              value=\"man\"\n              checked={gender === 'man'}\n              onChange={() => handleGenderChange('man')}\n            />\n            <label htmlFor=\"man\">\n              <LabelText className='dark-daily-norma-text'>Male</LabelText>\n            </label>\n          </RadioButton>\n\n          <label>\n            <InputText className='dark-daily-norma-text'>Your weight in kilograms:</InputText>\n          </label>\n            <WaterFormInput\n              type=\"text\"\n              value={weight}\n              onChange={handleWeightChange}\n              onFocus={handleWeightFocus}\n              onBlur={handleWeightBlur}\n              ref={weightInputRef}\n              defaultValue={weight === 0 ? '' : weight}\n              maxLength={4}\n\n              onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\", \"=\"].includes(e.key) && e.preventDefault()}\n            />\n\n          <label>\n            <InputText className='dark-daily-norma-text'>The time of active participation in sports or other activities with a high physical load in hours:</InputText>\n          </label>\n            <WaterFormInput\n              type=\"text\"\n              value={activityTime}\n              onChange={handleActivityTimeChange}\n              onFocus={handleActivityTimeFocus}\n              onBlur={handleActivityTimeBlur}\n              ref={activityTimeInputRef}\n              defaultValue={activityTime === 0 ? '' : activityTime}\n              maxLength={3}\n\n              onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n            />\n\n          <RequiredWaterBox>\n            <RequiredText className='dark-daily-norma-text'>The required amount of water in liters per day:</RequiredText>\n            <RequiredWater>{dailyNorma} L</RequiredWater>\n          </RequiredWaterBox>\n\n          <FormBigText className='dark-daily-norma-text'>Write down how much water you will drink:</FormBigText>\n          <WaterFormInput\n            type=\"text\"\n            value={willDrink}\n            onChange={handleWillDrinkChange}\n            onFocus={handleWillDrinkFocus}\n            onBlur={handleWillDrinkBlur}\n            ref={willDrinkInputRef}\n            defaultValue={willDrink === 0 ? '' : willDrink}\n            \n            maxLength={3}\n            \n            onKeyDown={(e) =>[\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()}\n          />\n          \n\n          <SaveButton type=\"button\" onClick={handleSave}>Save</SaveButton>\n        </form>\n      </Modal>\n    </ModalOverlay>\n  );\n};\n\nexport default DailyNormaModal;","// import React, { useState, useEffect } from 'react';\n// import Modal from './dailyNormaModal';\n// import { getDailyNorma } from '../../redux/dailyNorma/dailyNormaThunk';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {\n//   DailyNormaBox,\n//   DailyText,\n//   RequiredWaterHeader,\n//   BottomBox,\n//   EditWaterButton,\n// } from './dailyNorma.styled';\n// import { selectAuthUserData } from 'redux/auth/auth.selectors';\n// import {\n//   selectDailyNormaActivity,\n//   selectDailyNormaData,\n//   selectDailyNormaGender,\n//   selectDailyNormaWeight,\n//   selectDailyNormaWillDrink,\n// } from 'redux/dailyNorma/dailyNorma.selectors';\n\n// export const DailyNorma = () => {\n//   const dispatch = useDispatch();\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [dailyNorma, setDailyNorma] = useState(0);\n\n//   const userId = useSelector(selectAuthUserData);\n//   const genderData = useSelector(selectDailyNormaGender);\n//   const weightData = useSelector(selectDailyNormaWeight);\n//   const activityTimeData = useSelector(selectDailyNormaActivity);\n//   const dailyNormaData = useSelector(selectDailyNormaData);\n//   const willDrinkData = useSelector(selectDailyNormaWillDrink);\n\n//   useEffect(() => {\n//     dispatch(getDailyNorma(userId._id));\n//     const fetchedDailyNorma = dailyNormaData;\n//     // console.log(fetchedDailyNorma);\n//     const formattedAmount = parseFloat(fetchedDailyNorma / 1000).toFixed(1);\n//     // console.log(formattedAmount);\n//     setDailyNorma(formattedAmount);\n//   }, [dispatch, userId._id, dailyNormaData]);\n\n//   // export const DailyNorma = () => {\n//   //   const dispatch = useDispatch();\n//   //   const [isModalOpen, setIsModalOpen] = useState(false);\n//   //   const [dailyNorma, setDailyNorma] = useState(0);\n//   //   const [loading, setLoading] = useState(true);\n//   //   const userId = useSelector(selectAuthUserData);\n//   //   const genderData = useSelector(selectDailyNormaGender);\n//   //   const weightData = useSelector(selectDailyNormaWeight);\n//   //   const activityTimeData = useSelector(selectDailyNormaActivity);\n//   //   const dailyNormaData = useSelector(selectDailyNormaData);\n//   //   const willDrinkData = useSelector(selectDailyNormaWillDrink);\n\n//   //   useEffect(() => {\n//   //     dispatch(getDailyNorma(userId._id))\n//   //       .then(() => setLoading(false))\n//   //       .catch(() => setLoading(false));\n//   //   }, [dispatch, userId._id]);\n\n//   //   useEffect(() => {\n//   //     if (!loading && !isNaN(dailyNormaData)) {\n//   //       console.log(dailyNormaData);\n//   //       const formattedAmount = parseFloat(dailyNormaData / 1000).toFixed(1);\n//   //       console.log(formattedAmount);\n//   //       setDailyNorma(formattedAmount);\n//   //     }\n//   //   }, [dailyNormaData, loading]);\n\n//   const handleModalOpen = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const handleModalClose = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <DailyNormaBox className=\"dark-daily-norma-box\">\n//       <DailyText className=\"dark-daily-norma-text\">My daily norma</DailyText>\n//       <BottomBox>\n//         <RequiredWaterHeader>{dailyNorma} L</RequiredWaterHeader>\n//         <EditWaterButton onClick={handleModalOpen}>Edit</EditWaterButton>\n//       </BottomBox>\n\n//       {isModalOpen && (\n//         <Modal\n//           onClose={handleModalClose}\n//           genderData={genderData}\n//           weightData={weightData}\n//           activityTimeData={activityTimeData}\n//           dailyNormaData={dailyNormaData}\n//           willDrinkData={willDrinkData / 1000}\n//           userId={userId._id}\n//         />\n//       )}\n//     </DailyNormaBox>\n//   );\n// };\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from './dailyNormaModal';\nimport { useSelector } from 'react-redux';\nimport { selectAuthUserData } from 'redux/auth/auth.selectors';\nimport {\n  DailyNormaBox,\n  DailyText,\n  RequiredWaterHeader,\n  BottomBox,\n  EditWaterButton,\n} from './dailyNorma.styled';\n\nexport const DailyNorma = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [dailyNorma, setDailyNorma] = useState(0);\n\n  const UserData = useSelector(selectAuthUserData);\n\n  useEffect(() => {\n    if (UserData) {\n      const formattedAmount = parseFloat(UserData.dailyNorma / 1000).toFixed(1);\n      setDailyNorma(formattedAmount);\n    }\n  }, [UserData]);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <DailyNormaBox className=\"dark-daily-norma-box\">\n      <DailyText className=\"dark-daily-norma-text\">My daily norma</DailyText>\n      <BottomBox>\n        <RequiredWaterHeader>{dailyNorma} L</RequiredWaterHeader>\n        <EditWaterButton onClick={handleModalOpen}>Edit</EditWaterButton>\n      </BottomBox>\n\n      {isModalOpen && (\n        <Modal\n          onClose={handleModalClose}\n          dailyNormaData={UserData.dailyNorma}\n          genderData={UserData.gender}\n          weightData={UserData.weight}\n          activityTimeData={UserData.activityTime}\n          willDrinkData={UserData.willDrink / 1000}\n        />\n      )}\n    </DailyNormaBox>\n  );\n};\n\n\n","import styled from 'styled-components';\n\nimport mobile from '../img/home-background-mobile.svg';\nimport tablet from '../img/home-background-tablet.svg';\nimport desktop from '../img/home-background-desktop.svg';\nimport bottle from '../img/bottle.svg';\n\nexport const HomePageSection = styled.section`\n  @media screen and (max-width: 767px) {\n    padding: 0 20px;\n    position: relative;\n    height: 100%;\n\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -9;\n      background-image: url(${mobile});\n      background-repeat: no-repeat;\n\n      background-size: cover;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 44px 32px;\n    position: relative;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -10;\n      background-image: url(${tablet});\n      background-repeat: no-repeat;\n      background-size: cover;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    display: flex;\n    flex-direction: row;\n    overflow: hidden;\n    justify-content: space-between;\n    padding: 0 112px 40px 112px;\n    max-height: 100%;\n    &::before {\n      content: '';\n      position: absolute;\n      top: -170px;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      z-index: -11;\n      background-image: url(${desktop});\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  @media screen and (max-width: 767px) {\n    position: relative;\n    min-height: 440px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 836px;\n\n      padding: 24px 8px;\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    min-height: 498px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 688px;\n\n      padding: 32px 24px;\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    position: relative;\n    width: 592px;\n    max-height: 680px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    &.right-panel {\n      min-height: 680px;\n\n      background-color: var(--bg-color-light-blue);\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport const BottleImg = styled.div`\n  @media screen and (max-width: 767px) {\n    width: 218px;\n    height: 190px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n  @media screen and (min-width: 768px) {\n    width: 402px;\n    height: 352px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 570px;\n    height: 500px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -65%);\n\n    background-repeat: no-repeat;\n    background-image: url(${bottle});\n    background-position: center;\n    background-size: contain;\n  }\n`;\n","import MonthStatsTable from 'components/MonthStatsTable/MonthStatsTable';\n\nimport { TodayWaterList } from 'components/TodayWaterList/TodayWaterList';\nimport { WaterRatioPanel } from 'components/WaterRatioPanel/WaterRatioPanel';\nimport { DailyNorma } from 'components/DailyNorma/dailyNorma';\nimport { BottleImg, ContentWrapper, HomePageSection } from './HomePage.styled';\n\nconst HomePage = () => {\n  return (\n    <>\n      <HomePageSection>\n        <ContentWrapper>\n          <DailyNorma />\n          <BottleImg className='dark-home-page-bottle' />\n          <WaterRatioPanel />\n        </ContentWrapper>\n        <ContentWrapper className=\"right-panel\">\n          <TodayWaterList />\n          <MonthStatsTable />\n        </ContentWrapper>\n      </HomePageSection>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["BoxModal","styled","_templateObject","_taggedTemplateLiteral","ButtonStyle","_templateObject2","ButtonBox","_templateObject3","TextStyle","_templateObject4","ModalHeader","_templateObject5","Overlay","ModalContent","CloseButton","CloseIcon","BoxAddModal","_templateObject6","PreviousInfo","_templateObject7","AddParagraph","_templateObject8","AddWater","_templateObject9","Water","_templateObject10","Label","_templateObject11","ButtonMl","_templateObject12","Icon","_templateObject13","AddTime","_templateObject14","InputTime","_templateObject15","Input","_templateObject16","FooterModal","_templateObject17","AddButtonSave","_templateObject18","CalendarStyle","ContentPopover","LoaderMonthWrapper","startOfMonth","date","_date","toDate","setDate","setHours","endOfMonth","month","getMonth","setFullYear","getFullYear","eachDayOfInterval","interval","options","_options$step","startDate","start","endDate","end","reversed","endTime","currentDate","step","dates","push","getDate","reverse","selectMonthWaterDetails","state","monthWater","selectIsLoadingMonthWater","isLoading","selectTodayWater","waterDetails","today","selectDailyDrank","dailyDrank","selectIsLoadingList","selectOwnerId","ownerId","selectNorma","dailyNorma","isSameDay","dateLeft","dateRight","startOfDay","isToday","Date","now","_useState","useState","_useState2","_slicedToArray","setCurrentDate","_useState3","_useState4","selectedDate","setSelectedDate","isLoadingMonth","useSelector","d","formatDate","dispatch","useDispatch","useEffect","getMonthWater","handleChangeMonth","offset","prevDate","getFormattedDateWithTime","_jsxs","children","className","_jsx","onClick","width","height","href","icons","format","Loader","data","dateText","textContent","dateObj","formattedDateWithTime","length","waterInfo","find","item","_id","Popover","anchorOrigin","vertical","horizontal","transformOrigin","id","open","Boolean","anchorEl","onClose","slotProps","paper","elevation","transitionDuration","enter","exit","persent","toFixed","perDay","renderPopover","_getMonthBounds","getMonthBounds","getMonthDays","map","_monthWater$find","_monthWater$find2","percentage","concat","e","target","DeleteWaterModal","_ref","recordId","_Fragment","console","log","dataDelete","deleteWaterThunk","then","error","TodayWrapper","TodayItem","TodayInfo","TodayTitle","Forget","TodayList","TodayVolume","TodayTime","IconGlass","TodayTools","ButtonChange","ButtonDelete","AddWaterBtn","LoaderWrapper","TodayListModal","isEditing","initialAmount","initialTime","existingRecordId","amount","setAmount","times","setTime","handleKeyDown","code","window","addEventListener","removeEventListener","formatTime","title","displayTime","prevAmount","Number","isNaN","type","value","onChange","newValue","startsWith","parseFloat","substring","onBlur","isoDate","toISOString","slice","_times$split","split","_times$split2","hours","minutes","currentDate2","newDate","getHours","getMinutes","waterData","waterVolume","time","editWaterThunk","_objectSpread","addWatersThunk","iconsList","edit","delete","glass","add","TodayWaterList","isModalOpen","setIsModalOpen","selectedWaterItem","setSelectedWaterItem","_useState5","_useState6","isDeleteWaterModalOpen","setDeleteWaterModalOpen","waterlist","isLoadingList","getTodayWater","undefined","openModalToEdit","openModalToDelete","WaterRatioPanelContainer","WaterRange","WaterRangeHeader","WaterRangeContainer","RateContainer","MiddleMark","StartMark","EndMark","AddWaterButton","WaterRatioPanel","dailyNorm","waterPercent","Math","round","isShow","readOnly","style","backgroundSize","limit","min","max","left","getPosition","onShow","ModalOverlay","Modal","TopDiv","FormulasBox","FormulaBox","LabelText","InputText","RequiredText","CaptionBox","ColoredFormula","CaptionMark","CaptionText","FormBigText","WaterFormInput","RequiredWaterBox","_templateObject19","RequiredWater","_templateObject20","SaveButton","_templateObject21","RadioButton","_templateObject22","DailyNormaBox","_templateObject23","DailyText","_templateObject24","RequiredWaterHeader","_templateObject25","BottomBox","_templateObject26","EditWaterButton","_templateObject27","genderData","weightData","activityTimeData","dailyNormaData","willDrinkData","gender","setGender","weight","setWeight","activityTime","setActivityTime","_useState7","_useState8","setDailyNorma","_useState9","_useState10","willDrink","setWillDrink","weightInputRef","useRef","activityTimeInputRef","willDrinkInputRef","handleGenderChange","selectedGender","calculateDailyNorma","useCallback","userWeight","userActivity","formulaResult","handleSave","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","requestData","_context","prev","next","updateDailyNorma","stop","apply","arguments","onMouseDown","currentTarget","button","name","checked","htmlFor","numericValue","replace","onFocus","current","ref","defaultValue","maxLength","onKeyDown","includes","key","preventDefault","DailyNorma","UserData","selectAuthUserData","formattedAmount","HomePageSection","mobile","tablet","desktop","ContentWrapper","BottleImg","bottle","MonthStatsTable"],"sourceRoot":""}